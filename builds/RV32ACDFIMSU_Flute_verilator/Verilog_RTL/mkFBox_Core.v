//
// Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// verbosity                      I     4
// CLK                            I     1 clock
// RST_N                          I     1 reset
// req_opcode                     I     7
// req_f7                         I     7
// req_rm                         I     3
// req_rs2                        I     5
// req_v1                         I    64
// req_v2                         I    64
// req_v3                         I    64
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFBox_Core(verbosity,
		   CLK,
		   RST_N,

		   EN_server_reset_request_put,
		   RDY_server_reset_request_put,

		   EN_server_reset_response_get,
		   RDY_server_reset_response_get,

		   req_opcode,
		   req_f7,
		   req_rm,
		   req_rs2,
		   req_v1,
		   req_v2,
		   req_v3,
		   EN_req,

		   valid,

		   word_fst,

		   word_snd);
  input  [3 : 0] verbosity;
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_server_reset_request_put, RDY_server_reset_response_get, valid;

  // inlined wires
  wire [68 : 0] dw_result$wget;
  wire dw_valid$wget, dw_valid$whas;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR$D_IN;
  wire requestR$EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR$D_IN;
  wire resultR$EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR$D_IN;
  wire stateR$EN;

  // ports of submodule fpu
  reg [201 : 0] fpu$server_core_request_put;
  wire [69 : 0] fpu$server_core_response_get;
  wire fpu$EN_server_core_request_put,
       fpu$EN_server_core_response_get,
       fpu$EN_server_reset_request_put,
       fpu$EN_server_reset_response_get,
       fpu$RDY_server_core_request_put,
       fpu$RDY_server_core_response_get,
       fpu$RDY_server_reset_request_put,
       fpu$RDY_server_reset_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF$CLR, frmFpuF$DEQ, frmFpuF$D_IN, frmFpuF$ENQ;

  // ports of submodule resetReqsF
  wire resetReqsF$CLR,
       resetReqsF$DEQ,
       resetReqsF$EMPTY_N,
       resetReqsF$ENQ,
       resetReqsF$FULL_N;

  // ports of submodule resetRspsF
  wire resetRspsF$CLR,
       resetRspsF$DEQ,
       resetRspsF$EMPTY_N,
       resetRspsF$ENQ,
       resetRspsF$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_doFADD_D,
       CAN_FIRE_RL_doFADD_S,
       CAN_FIRE_RL_doFCLASS_D,
       CAN_FIRE_RL_doFCLASS_S,
       CAN_FIRE_RL_doFCVT_D_S,
       CAN_FIRE_RL_doFCVT_D_W,
       CAN_FIRE_RL_doFCVT_D_WU,
       CAN_FIRE_RL_doFCVT_S_D,
       CAN_FIRE_RL_doFCVT_S_W,
       CAN_FIRE_RL_doFCVT_S_WU,
       CAN_FIRE_RL_doFCVT_WU_D,
       CAN_FIRE_RL_doFCVT_WU_S,
       CAN_FIRE_RL_doFCVT_W_D,
       CAN_FIRE_RL_doFCVT_W_S,
       CAN_FIRE_RL_doFDIV_D,
       CAN_FIRE_RL_doFDIV_S,
       CAN_FIRE_RL_doFEQ_D,
       CAN_FIRE_RL_doFEQ_S,
       CAN_FIRE_RL_doFLE_D,
       CAN_FIRE_RL_doFLE_S,
       CAN_FIRE_RL_doFLT_D,
       CAN_FIRE_RL_doFLT_S,
       CAN_FIRE_RL_doFMADD_D,
       CAN_FIRE_RL_doFMADD_S,
       CAN_FIRE_RL_doFMAX_D,
       CAN_FIRE_RL_doFMAX_S,
       CAN_FIRE_RL_doFMIN_D,
       CAN_FIRE_RL_doFMIN_S,
       CAN_FIRE_RL_doFMSUB_D,
       CAN_FIRE_RL_doFMSUB_S,
       CAN_FIRE_RL_doFMUL_D,
       CAN_FIRE_RL_doFMUL_S,
       CAN_FIRE_RL_doFMV_D_X,
       CAN_FIRE_RL_doFMV_W_X,
       CAN_FIRE_RL_doFMV_X_D,
       CAN_FIRE_RL_doFMV_X_W,
       CAN_FIRE_RL_doFNMADD_D,
       CAN_FIRE_RL_doFNMADD_S,
       CAN_FIRE_RL_doFNMSUB_D,
       CAN_FIRE_RL_doFNMSUB_S,
       CAN_FIRE_RL_doFSGNJN_D,
       CAN_FIRE_RL_doFSGNJN_S,
       CAN_FIRE_RL_doFSGNJX_D,
       CAN_FIRE_RL_doFSGNJX_S,
       CAN_FIRE_RL_doFSGNJ_D,
       CAN_FIRE_RL_doFSGNJ_S,
       CAN_FIRE_RL_doFSQRT_D,
       CAN_FIRE_RL_doFSQRT_S,
       CAN_FIRE_RL_doFSUB_D,
       CAN_FIRE_RL_doFSUB_S,
       CAN_FIRE_RL_rl_drive_fpu_result,
       CAN_FIRE_RL_rl_get_fpu_result,
       CAN_FIRE_RL_rl_reset_begin,
       CAN_FIRE_RL_rl_reset_end,
       CAN_FIRE_req,
       CAN_FIRE_server_reset_request_put,
       CAN_FIRE_server_reset_response_get,
       WILL_FIRE_RL_doFADD_D,
       WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_D,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_D_S,
       WILL_FIRE_RL_doFCVT_D_W,
       WILL_FIRE_RL_doFCVT_D_WU,
       WILL_FIRE_RL_doFCVT_S_D,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_D,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_D,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFDIV_D,
       WILL_FIRE_RL_doFDIV_S,
       WILL_FIRE_RL_doFEQ_D,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_D,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_D,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_D,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_D,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_D,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_D,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_D,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_D_X,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_D,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_D,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_D,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_D,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_D,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_D,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSQRT_D,
       WILL_FIRE_RL_doFSQRT_S,
       WILL_FIRE_RL_doFSUB_D,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_drive_fpu_result,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_RL_rl_reset_begin,
       WILL_FIRE_RL_rl_reset_end,
       WILL_FIRE_req,
       WILL_FIRE_server_reset_request_put,
       WILL_FIRE_server_reset_response_get;

  // inputs to muxes for submodule ports
  wire [214 : 0] MUX_requestR$write_1__VAL_2;
  wire [201 : 0] MUX_fpu$server_core_request_put_1__VAL_1,
		 MUX_fpu$server_core_request_put_1__VAL_10,
		 MUX_fpu$server_core_request_put_1__VAL_11,
		 MUX_fpu$server_core_request_put_1__VAL_12,
		 MUX_fpu$server_core_request_put_1__VAL_13,
		 MUX_fpu$server_core_request_put_1__VAL_14,
		 MUX_fpu$server_core_request_put_1__VAL_15,
		 MUX_fpu$server_core_request_put_1__VAL_16,
		 MUX_fpu$server_core_request_put_1__VAL_17,
		 MUX_fpu$server_core_request_put_1__VAL_18,
		 MUX_fpu$server_core_request_put_1__VAL_2,
		 MUX_fpu$server_core_request_put_1__VAL_3,
		 MUX_fpu$server_core_request_put_1__VAL_4,
		 MUX_fpu$server_core_request_put_1__VAL_5,
		 MUX_fpu$server_core_request_put_1__VAL_6,
		 MUX_fpu$server_core_request_put_1__VAL_7,
		 MUX_fpu$server_core_request_put_1__VAL_8,
		 MUX_fpu$server_core_request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR$write_1__VAL_10,
		MUX_resultR$write_1__VAL_11,
		MUX_resultR$write_1__VAL_12,
		MUX_resultR$write_1__VAL_13,
		MUX_resultR$write_1__VAL_14,
		MUX_resultR$write_1__VAL_15,
		MUX_resultR$write_1__VAL_16,
		MUX_resultR$write_1__VAL_17,
		MUX_resultR$write_1__VAL_18,
		MUX_resultR$write_1__VAL_19,
		MUX_resultR$write_1__VAL_20,
		MUX_resultR$write_1__VAL_21,
		MUX_resultR$write_1__VAL_22,
		MUX_resultR$write_1__VAL_23,
		MUX_resultR$write_1__VAL_24,
		MUX_resultR$write_1__VAL_25,
		MUX_resultR$write_1__VAL_26,
		MUX_resultR$write_1__VAL_27,
		MUX_resultR$write_1__VAL_28,
		MUX_resultR$write_1__VAL_29,
		MUX_resultR$write_1__VAL_3,
		MUX_resultR$write_1__VAL_30,
		MUX_resultR$write_1__VAL_31,
		MUX_resultR$write_1__VAL_32,
		MUX_resultR$write_1__VAL_33,
		MUX_resultR$write_1__VAL_34,
		MUX_resultR$write_1__VAL_35,
		MUX_resultR$write_1__VAL_4,
		MUX_resultR$write_1__VAL_5,
		MUX_resultR$write_1__VAL_7,
		MUX_resultR$write_1__VAL_8,
		MUX_resultR$write_1__VAL_9;
  wire [68 : 0] MUX_dw_result$wset_1__VAL_1;
  wire MUX_dw_result$wset_1__SEL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h1092;
  reg [31 : 0] v__h1585;
  reg [31 : 0] v__h1774;
  reg [31 : 0] v__h1975;
  reg [31 : 0] v__h2258;
  reg [31 : 0] v__h2443;
  reg [31 : 0] v__h2628;
  reg [31 : 0] v__h2820;
  reg [31 : 0] v__h3009;
  reg [31 : 0] v__h3197;
  reg [31 : 0] v__h3375;
  reg [31 : 0] v__h3543;
  reg [31 : 0] v__h3745;
  reg [31 : 0] v__h10241;
  reg [31 : 0] v__h16419;
  reg [31 : 0] v__h18045;
  reg [31 : 0] v__h18827;
  reg [31 : 0] v__h21496;
  reg [31 : 0] v__h24062;
  reg [31 : 0] v__h24217;
  reg [31 : 0] v__h24387;
  reg [31 : 0] v__h25905;
  reg [31 : 0] v__h27009;
  reg [31 : 0] v__h28131;
  reg [31 : 0] v__h28614;
  reg [31 : 0] v__h28829;
  reg [31 : 0] v__h29018;
  reg [31 : 0] v__h29200;
  reg [31 : 0] v__h29398;
  reg [31 : 0] v__h29583;
  reg [31 : 0] v__h29768;
  reg [31 : 0] v__h29960;
  reg [31 : 0] v__h30149;
  reg [31 : 0] v__h30337;
  reg [31 : 0] v__h30493;
  reg [31 : 0] v__h30651;
  reg [31 : 0] v__h30814;
  reg [31 : 0] v__h40797;
  reg [31 : 0] v__h50500;
  reg [31 : 0] v__h52109;
  reg [31 : 0] v__h52891;
  reg [31 : 0] v__h101631;
  reg [31 : 0] v__h143388;
  reg [31 : 0] v__h147971;
  reg [31 : 0] v__h152454;
  reg [31 : 0] v__h155184;
  reg [31 : 0] v__h157096;
  reg [31 : 0] v__h159028;
  reg [31 : 0] v__h159175;
  reg [31 : 0] v__h159327;
  reg [31 : 0] v__h160311;
  reg [31 : 0] v__h24056;
  reg [31 : 0] v__h1086;
  reg [31 : 0] v__h1579;
  reg [31 : 0] v__h1768;
  reg [31 : 0] v__h1969;
  reg [31 : 0] v__h2252;
  reg [31 : 0] v__h2437;
  reg [31 : 0] v__h2622;
  reg [31 : 0] v__h2814;
  reg [31 : 0] v__h3003;
  reg [31 : 0] v__h3191;
  reg [31 : 0] v__h3369;
  reg [31 : 0] v__h3537;
  reg [31 : 0] v__h3739;
  reg [31 : 0] v__h10235;
  reg [31 : 0] v__h16413;
  reg [31 : 0] v__h18039;
  reg [31 : 0] v__h18821;
  reg [31 : 0] v__h21490;
  reg [31 : 0] v__h24211;
  reg [31 : 0] v__h24381;
  reg [31 : 0] v__h25899;
  reg [31 : 0] v__h27003;
  reg [31 : 0] v__h28125;
  reg [31 : 0] v__h28608;
  reg [31 : 0] v__h28823;
  reg [31 : 0] v__h29012;
  reg [31 : 0] v__h29194;
  reg [31 : 0] v__h29392;
  reg [31 : 0] v__h29577;
  reg [31 : 0] v__h29762;
  reg [31 : 0] v__h29954;
  reg [31 : 0] v__h30143;
  reg [31 : 0] v__h30331;
  reg [31 : 0] v__h30487;
  reg [31 : 0] v__h30645;
  reg [31 : 0] v__h30808;
  reg [31 : 0] v__h40791;
  reg [31 : 0] v__h50494;
  reg [31 : 0] v__h52103;
  reg [31 : 0] v__h52885;
  reg [31 : 0] v__h101625;
  reg [31 : 0] v__h143382;
  reg [31 : 0] v__h147965;
  reg [31 : 0] v__h152448;
  reg [31 : 0] v__h155178;
  reg [31 : 0] v__h157090;
  reg [31 : 0] v__h159022;
  reg [31 : 0] v__h159169;
  reg [31 : 0] v__h159321;
  reg [31 : 0] v__h160305;
  // synopsys translate_on

  // remaining internal signals
  reg [51 : 0] CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q114,
	       CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q115,
	       CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q116,
	       CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q117,
	       CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q118,
	       CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q119,
	       CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q56,
	       CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q57,
	       CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q45,
	       CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q46,
	       CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q54,
	       CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q55,
	       CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q41,
	       CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q42,
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703;
  reg [22 : 0] CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q84,
	       CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q85,
	       CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q82,
	       CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q83,
	       CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q18,
	       CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q19,
	       CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q80,
	       CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q81,
	       CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q78,
	       CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q79,
	       CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q29,
	       CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q30,
	       CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q27,
	       CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q28,
	       CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q16,
	       CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q17,
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784;
  reg [10 : 0] CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q102,
	       CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q103,
	       CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q106,
	       CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q107,
	       CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q104,
	       CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q105,
	       CASE_guard8653_0b0_0_0b1_0_0b10_out_exp9272_0b_ETC__q49,
	       CASE_guard8653_0b0_0_0b1_theResult___exp9269_0_ETC__q50,
	       CASE_guard8922_0b0_0_0b1_0_0b10_out_exp9541_0b_ETC__q44,
	       CASE_guard8922_0b0_0_0b1_theResult___exp9538_0_ETC__q43,
	       CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_theR_ETC__q52,
	       CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_x939_ETC__q53,
	       CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_theR_ETC__q39,
	       CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_x966_ETC__q40,
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4,
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard8653_ETC__q51,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624;
  reg [7 : 0] CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q76,
	      CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q77,
	      CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q74,
	      CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q75,
	      CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_theResu_ETC__q14,
	      CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_x307_BI_ETC__q15,
	      CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q72,
	      CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q73,
	      CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q70,
	      CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q71,
	      CASE_guard4974_0b0_0_0b1_0_0b10_out_exp5390_0b_ETC__q22,
	      CASE_guard4974_0b0_0_0b1_theResult___exp5387_0_ETC__q23,
	      CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_theRe_ETC__q25,
	      CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_x5515_ETC__q26,
	      CASE_guard762_0b0_0_0b1_0_0b10_out_exp181_0b11_ETC__q13,
	      CASE_guard762_0b0_0_0b1_theResult___exp178_0b1_ETC__q12,
	      CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2,
	      CASE_requestR_BITS_194_TO_192_0x3_IF_guard4974_ETC__q24,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427,
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746;
  reg [2 : 0] IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54;
  reg CASE_guard1431_0b0_requestR_BIT_191_0b1_reques_ETC__q92,
      CASE_guard14629_0b0_requestR_BITS_191_TO_160_E_ETC__q108,
      CASE_guard23937_0b0_requestR_BITS_191_TO_160_E_ETC__q112,
      CASE_guard2567_0b0_requestR_BIT_191_0b1_reques_ETC__q90,
      CASE_guard292_0b0_requestR_BIT_159_0b1_request_ETC__q10,
      CASE_guard33004_0b0_requestR_BITS_191_TO_160_E_ETC__q110,
      CASE_guard3578_0b0_requestR_BIT_191_0b1_reques_ETC__q88,
      CASE_guard4843_0b0_requestR_BIT_191_0b1_reques_ETC__q86,
      CASE_guard762_0b0_requestR_BIT_159_0b1_request_ETC__q8,
      CASE_guard8922_0b0_requestR_BIT_159_0b1_reques_ETC__q35,
      CASE_guard9652_0b0_requestR_BIT_159_0b1_reques_ETC__q37,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93;
  wire [85 : 0] IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711,
		b__h50827,
		x__h51503,
		x__h52616;
  wire [64 : 0] _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88;
  wire [63 : 0] IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1087,
		IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1104,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1086,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1088,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1103,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1105,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1181,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1182,
		IF_requestR_3_BITS_126_TO_116_842_EQ_2047_843__ETC___d3890,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3905,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3983,
		res___1__h159426,
		res___1__h159864,
		res___1__h159874,
		res___1__h159893,
		res___1__h28230,
		res___1__h28466,
		res___1__h28476,
		res___1__h28495,
		res__h100574,
		res__h142414,
		res__h146891,
		res__h151474,
		res__h154213,
		res__h156943,
		res__h158855,
		res__h159909,
		res__h160108,
		res__h19591,
		res__h19828,
		res__h25338,
		res__h26856,
		res__h27960,
		res__h28511,
		x__h101712,
		x__h10323,
		x__h143473,
		x__h148056,
		x__h152535,
		x__h155265,
		x__h157177,
		x__h159406,
		x__h160032,
		x__h16500,
		x__h18128,
		x__h18912,
		x__h21581,
		x__h24141,
		x__h24296,
		x__h24468,
		x__h25986,
		x__h27090,
		x__h28210,
		x__h30417,
		x__h30573,
		x__h30731,
		x__h30896,
		x__h3284,
		x__h3455,
		x__h3623,
		x__h3827,
		x__h40879,
		x__h50581,
		x__h52192,
		x__h52972;
  wire [56 : 0] IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60,
		IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97,
		IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q100,
		IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q94,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q62,
		IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q68,
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877,
		_0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_8_ETC___d3248,
		_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_689__ETC___d2413,
		_theResult____h123927,
		_theResult____h64833,
		_theResult____h82557,
		_theResult___snd__h122541,
		_theResult___snd__h122543,
		_theResult___snd__h122550,
		_theResult___snd__h122556,
		_theResult___snd__h122579,
		_theResult___snd__h132174,
		_theResult___snd__h132185,
		_theResult___snd__h132187,
		_theResult___snd__h132197,
		_theResult___snd__h132203,
		_theResult___snd__h132226,
		_theResult___snd__h140940,
		_theResult___snd__h140954,
		_theResult___snd__h140960,
		_theResult___snd__h140978,
		_theResult___snd__h72951,
		_theResult___snd__h72962,
		_theResult___snd__h72964,
		_theResult___snd__h72974,
		_theResult___snd__h72980,
		_theResult___snd__h73003,
		_theResult___snd__h81577,
		_theResult___snd__h81579,
		_theResult___snd__h81586,
		_theResult___snd__h81592,
		_theResult___snd__h81615,
		_theResult___snd__h90804,
		_theResult___snd__h90815,
		_theResult___snd__h90817,
		_theResult___snd__h90827,
		_theResult___snd__h90833,
		_theResult___snd__h90856,
		_theResult___snd__h99454,
		_theResult___snd__h99468,
		_theResult___snd__h99474,
		_theResult___snd__h99492,
		b__h16746,
		result__h124540,
		result__h83170,
		sfd__h57203,
		sfdin__h132157,
		sfdin__h72934,
		sfdin__h90787,
		x__h124635,
		x__h17422,
		x__h18552,
		x__h83265;
  wire [54 : 0] sfd___3__h38912, sfd___3__h48643, sfd__h30911, sfd__h40891;
  wire [53 : 0] sfd__h122608,
		sfd__h132255,
		sfd__h141013,
		sfd__h38939,
		sfd__h39682,
		sfd__h48670,
		sfd__h49412,
		value__h50829;
  wire [51 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3678,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3680,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3651,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3653,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3697,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3699,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1447,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1449,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1465,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1467,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3710,
		IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1475,
		IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1659,
		_theResult___fst_sfd__h107518,
		_theResult___fst_sfd__h123344,
		_theResult___fst_sfd__h123347,
		_theResult___fst_sfd__h132991,
		_theResult___fst_sfd__h132994,
		_theResult___fst_sfd__h141773,
		_theResult___fst_sfd__h141776,
		_theResult___fst_sfd__h141785,
		_theResult___fst_sfd__h141791,
		_theResult___fst_sfd__h39636,
		_theResult___fst_sfd__h40392,
		_theResult___fst_sfd__h40395,
		_theResult___fst_sfd__h49366,
		_theResult___fst_sfd__h50121,
		_theResult___fst_sfd__h50124,
		_theResult___fst_sfd__h53499,
		_theResult___sfd__h123246,
		_theResult___sfd__h132893,
		_theResult___sfd__h141675,
		_theResult___sfd__h39539,
		_theResult___sfd__h40295,
		_theResult___sfd__h49270,
		_theResult___sfd__h50025,
		_theResult___snd_fst_sfd__h103664,
		_theResult___snd_fst_sfd__h123350,
		_theResult___snd_fst_sfd__h141779,
		_theResult___snd_fst_sfd__h40398,
		_theResult___snd_fst_sfd__h50127,
		out___1_sfd__h101778,
		out_sfd__h123249,
		out_sfd__h132896,
		out_sfd__h141678,
		out_sfd__h39542,
		out_sfd__h40298,
		out_sfd__h49273,
		out_sfd__h50028,
		value__h53042;
  wire [32 : 0] _theResult_____2__h16681,
		_theResult_____2__h50762,
		out1___1__h17173,
		out1___1__h51254;
  wire [31 : 0] IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1083,
		IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1098,
		IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1100,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1084,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1101,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d936,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d997,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d932,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d934,
		IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d995,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1766,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1768,
		IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1829,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1081,
		IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1097,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d1831,
		IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d1770,
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865,
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d999,
		IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699,
		requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
		requestR_BITS_159_TO_128__q1,
		sfd___3__h14964,
		sfd___3__h8752,
		sfd__h3848,
		x__h100580,
		x__h16503,
		x__h18131,
		x__h3291,
		x__h3462,
		x__h3630,
		x__h3833,
		x__h50584,
		x__h52195;
  wire [30 : 0] IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33;
  wire [24 : 0] sfd__h14991,
		sfd__h15530,
		sfd__h73032,
		sfd__h81644,
		sfd__h8779,
		sfd__h90885,
		sfd__h9322,
		sfd__h99527,
		value__h16748;
  wire [23 : 0] NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704,
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1736,
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737,
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802;
  wire [22 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2815,
		IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2817,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2861,
		IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2863,
		IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2834,
		IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2836,
		IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2880,
		IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2882,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d444,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d446,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d462,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d464,
		IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d2893,
		_theResult___fst_sfd__h100084,
		_theResult___fst_sfd__h100087,
		_theResult___fst_sfd__h100096,
		_theResult___fst_sfd__h100102,
		_theResult___fst_sfd__h102036,
		_theResult___fst_sfd__h15484,
		_theResult___fst_sfd__h16036,
		_theResult___fst_sfd__h16039,
		_theResult___fst_sfd__h64816,
		_theResult___fst_sfd__h73565,
		_theResult___fst_sfd__h73568,
		_theResult___fst_sfd__h82177,
		_theResult___fst_sfd__h82180,
		_theResult___fst_sfd__h91418,
		_theResult___fst_sfd__h91421,
		_theResult___fst_sfd__h9276,
		_theResult___fst_sfd__h9829,
		_theResult___fst_sfd__h9832,
		_theResult___sfd__h15388,
		_theResult___sfd__h15940,
		_theResult___sfd__h73467,
		_theResult___sfd__h82079,
		_theResult___sfd__h91320,
		_theResult___sfd__h9179,
		_theResult___sfd__h9732,
		_theResult___sfd__h99986,
		_theResult___snd_fst_sfd__h100090,
		_theResult___snd_fst_sfd__h16042,
		_theResult___snd_fst_sfd__h57157,
		_theResult___snd_fst_sfd__h82183,
		_theResult___snd_fst_sfd__h9835,
		out_sfd__h15391,
		out_sfd__h15943,
		out_sfd__h73470,
		out_sfd__h82082,
		out_sfd__h91323,
		out_sfd__h9182,
		out_sfd__h9735,
		out_sfd__h99989,
		sV1_sfd__h1280,
		sV2_sfd__h1397,
		value__h101781;
  wire [19 : 0] NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d902,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903,
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968;
  wire [11 : 0] IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3564,
		SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241,
		SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96,
		SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406,
		SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64,
		_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1935,
		_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244,
		_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321,
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537,
		_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3098,
		_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409,
		x__h124668,
		x__h39667,
		x__h49397,
		x__h83298;
  wire [10 : 0] IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3549,
		IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3551,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3224,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3226,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3618,
		IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3620,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1398,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1424,
		IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1426,
		SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q99,
		_theResult___exp__h123245,
		_theResult___exp__h132892,
		_theResult___exp__h141674,
		_theResult___exp__h39538,
		_theResult___exp__h40294,
		_theResult___exp__h49269,
		_theResult___exp__h50024,
		_theResult___fst_exp__h107517,
		_theResult___fst_exp__h122581,
		_theResult___fst_exp__h122587,
		_theResult___fst_exp__h122590,
		_theResult___fst_exp__h123343,
		_theResult___fst_exp__h123346,
		_theResult___fst_exp__h132163,
		_theResult___fst_exp__h132228,
		_theResult___fst_exp__h132234,
		_theResult___fst_exp__h132237,
		_theResult___fst_exp__h132990,
		_theResult___fst_exp__h132993,
		_theResult___fst_exp__h140946,
		_theResult___fst_exp__h140985,
		_theResult___fst_exp__h140991,
		_theResult___fst_exp__h140994,
		_theResult___fst_exp__h141772,
		_theResult___fst_exp__h141775,
		_theResult___fst_exp__h141784,
		_theResult___fst_exp__h141787,
		_theResult___fst_exp__h39635,
		_theResult___fst_exp__h40391,
		_theResult___fst_exp__h40394,
		_theResult___fst_exp__h49365,
		_theResult___fst_exp__h50120,
		_theResult___fst_exp__h50123,
		_theResult___snd_fst_exp__h123349,
		_theResult___snd_fst_exp__h141778,
		_theResult___snd_fst_exp__h40397,
		_theResult___snd_fst_exp__h40400,
		_theResult___snd_fst_exp__h40403,
		_theResult___snd_fst_exp__h50126,
		_theResult___snd_fst_exp__h50129,
		_theResult___snd_fst_exp__h50132,
		din_inc___2_exp__h141810,
		din_inc___2_exp__h141840,
		din_inc___2_exp__h141864,
		din_inc___2_exp__h40437,
		din_inc___2_exp__h50162,
		out_exp__h123248,
		out_exp__h132895,
		out_exp__h141677,
		out_exp__h39541,
		out_exp__h40297,
		out_exp__h49272,
		out_exp__h50027,
		requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702,
		x__h101722;
  wire [8 : 0] IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2727,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306,
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665,
	       x__h15515,
	       x__h9307;
  wire [7 : 0] IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2228,
	       IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2230,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2712,
	       IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2714,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2385,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2387,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2781,
	       IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2783,
	       IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d395,
	       IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d421,
	       IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d423,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d433,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d752,
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868,
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q67,
	       _theResult___exp__h15387,
	       _theResult___exp__h15939,
	       _theResult___exp__h73466,
	       _theResult___exp__h82078,
	       _theResult___exp__h91319,
	       _theResult___exp__h9178,
	       _theResult___exp__h9731,
	       _theResult___exp__h99985,
	       _theResult___fst_exp__h100083,
	       _theResult___fst_exp__h100086,
	       _theResult___fst_exp__h100095,
	       _theResult___fst_exp__h100098,
	       _theResult___fst_exp__h15483,
	       _theResult___fst_exp__h16035,
	       _theResult___fst_exp__h16038,
	       _theResult___fst_exp__h64815,
	       _theResult___fst_exp__h72940,
	       _theResult___fst_exp__h73005,
	       _theResult___fst_exp__h73011,
	       _theResult___fst_exp__h73014,
	       _theResult___fst_exp__h73564,
	       _theResult___fst_exp__h73567,
	       _theResult___fst_exp__h81617,
	       _theResult___fst_exp__h81623,
	       _theResult___fst_exp__h81626,
	       _theResult___fst_exp__h82176,
	       _theResult___fst_exp__h82179,
	       _theResult___fst_exp__h90793,
	       _theResult___fst_exp__h90858,
	       _theResult___fst_exp__h90864,
	       _theResult___fst_exp__h90867,
	       _theResult___fst_exp__h91417,
	       _theResult___fst_exp__h91420,
	       _theResult___fst_exp__h9275,
	       _theResult___fst_exp__h9828,
	       _theResult___fst_exp__h9831,
	       _theResult___fst_exp__h99460,
	       _theResult___fst_exp__h99499,
	       _theResult___fst_exp__h99505,
	       _theResult___fst_exp__h99508,
	       _theResult___snd_fst_exp__h100089,
	       _theResult___snd_fst_exp__h16041,
	       _theResult___snd_fst_exp__h16044,
	       _theResult___snd_fst_exp__h16047,
	       _theResult___snd_fst_exp__h82182,
	       _theResult___snd_fst_exp__h9834,
	       _theResult___snd_fst_exp__h9837,
	       _theResult___snd_fst_exp__h9840,
	       din_inc___2_exp__h100117,
	       din_inc___2_exp__h100141,
	       din_inc___2_exp__h100171,
	       din_inc___2_exp__h100195,
	       din_inc___2_exp__h16077,
	       din_inc___2_exp__h9874,
	       out_exp__h15390,
	       out_exp__h15942,
	       out_exp__h73469,
	       out_exp__h82081,
	       out_exp__h91322,
	       out_exp__h9181,
	       out_exp__h9734,
	       out_exp__h99988,
	       sV1_exp__h1279,
	       sV2_exp__h1396,
	       x__h52982;
  wire [5 : 0] IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653,
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170,
	       IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d1318,
	       IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d303,
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331,
	       IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d1534,
	       IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d662;
  wire [4 : 0] _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953,
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777,
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982,
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760,
	       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965,
	       x__h10000,
	       x__h100695,
	       x__h142516,
	       x__h147023,
	       x__h156962,
	       x__h16181,
	       x__h17836,
	       x__h18630,
	       x__h20952,
	       x__h26875,
	       x__h40559,
	       x__h50262,
	       x__h51900,
	       x__h52694;
  wire [1 : 0] IF_sfd___34964_BIT_7_THEN_2_ELSE_0__q21,
	       IF_sfd___34964_BIT_8_THEN_2_ELSE_0__q20,
	       IF_sfd___3752_BIT_7_THEN_2_ELSE_0__q7,
	       IF_sfd___3752_BIT_8_THEN_2_ELSE_0__q6,
	       IF_sfd___38643_BIT_1_THEN_2_ELSE_0__q48,
	       IF_sfd___38643_BIT_2_THEN_2_ELSE_0__q47,
	       IF_sfd___38912_BIT_1_THEN_2_ELSE_0__q34,
	       IF_sfd___38912_BIT_2_THEN_2_ELSE_0__q33,
	       IF_sfdin0787_BIT_33_THEN_2_ELSE_0__q66,
	       IF_sfdin2934_BIT_33_THEN_2_ELSE_0__q61,
	       IF_sfdin32157_BIT_4_THEN_2_ELSE_0__q98,
	       IF_theResult___snd1577_BIT_33_THEN_2_ELSE_0__q63,
	       IF_theResult___snd22541_BIT_4_THEN_2_ELSE_0__q95,
	       IF_theResult___snd40940_BIT_4_THEN_2_ELSE_0__q101,
	       IF_theResult___snd9454_BIT_33_THEN_2_ELSE_0__q69,
	       IF_x1503_BIT_53_THEN_2_ELSE_0__q58,
	       IF_x2616_BIT_53_THEN_2_ELSE_0__q59,
	       IF_x7422_BIT_24_THEN_2_ELSE_0__q31,
	       IF_x8552_BIT_24_THEN_2_ELSE_0__q32,
	       guard__h114629,
	       guard__h123937,
	       guard__h133004,
	       guard__h14974,
	       guard__h15500,
	       guard__h16679,
	       guard__h17233,
	       guard__h18331,
	       guard__h38922,
	       guard__h39652,
	       guard__h48653,
	       guard__h49382,
	       guard__h50760,
	       guard__h51314,
	       guard__h52395,
	       guard__h64843,
	       guard__h73578,
	       guard__h82567,
	       guard__h8762,
	       guard__h91431,
	       guard__h9292;
  wire IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_8_ETC___d2915,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1377,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1492,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d373,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d523,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d1676,
       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d838,
       IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3734,
       IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFF_ETC___d3742,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3746,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3781,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3784,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3791,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3805,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3817,
       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3829,
       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d958,
       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1792,
       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1378,
       IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3726,
       IF_NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1076,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3744,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3803,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3815,
       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3827,
       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2933,
       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3011,
       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3024,
       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3037,
       IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_ETC___d1056,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2935,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2986,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2997,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3013,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3026,
       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3039,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1018,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1042,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1052,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1090,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1142,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1146,
       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d864,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1728,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1760,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1823,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d894,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d926,
       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d989,
       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d514,
       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d517,
       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d526,
       IF_requestR_3_BIT_191_276_THEN_NOT_requestR_3__ETC___d3883,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905,
       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970,
       NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739,
       NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3005,
       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3033,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1012,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1079,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1141,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1147,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1167,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143,
       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d947,
       NOT_IF_requestR_3_BIT_159_0_THEN_NEG_requestR__ETC___d311,
       NOT_requestR_3_BITS_159_TO_128_72_EQ_0_73_74_A_ETC___d830,
       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1781,
       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1846,
       NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887,
       NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3956,
       NOT_requestR_3_BITS_190_TO_180_689_ULT_request_ETC___d3931,
       NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_ETC___d1145,
       NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628,
       NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276,
       NOT_verbosity_ULE_1_4___d25,
       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242,
       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243,
       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407,
       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408,
       _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2171,
       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3492,
       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2655,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3172,
       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3565,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2333,
       _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2728,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2968,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2993,
       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d3020,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667,
       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099,
       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100,
       guard__h124535,
       guard__h83165,
       requestR_3_BITS_126_TO_116_842_EQ_0_856_AND_re_ETC___d3863,
       requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875,
       requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880,
       requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3859,
       requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3935,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1852,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3851,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3896,
       requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920,
       requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874,
       requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872,
       requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3930,
       requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879,
       requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_9_A_ETC___d1078,
       requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819,
       requestR_3_BIT_159_0_OR_requestR_3_BIT_158_37__ETC___d841;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = resetReqsF$FULL_N ;
  assign CAN_FIRE_server_reset_request_put = resetReqsF$FULL_N ;
  assign WILL_FIRE_server_reset_request_put = EN_server_reset_request_put ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign CAN_FIRE_server_reset_response_get = resetRspsF$EMPTY_N ;
  assign WILL_FIRE_server_reset_response_get = EN_server_reset_response_get ;

  // action method req
  assign CAN_FIRE_req = 1'd1 ;
  assign WILL_FIRE_req = EN_req ;

  // value method valid
  assign valid = dw_valid$whas && dw_valid$wget ;

  // value method word_fst
  assign word_fst = dw_result$wget[68:5] ;

  // value method word_snd
  assign word_snd = dw_result$wget[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .server_core_request_put(fpu$server_core_request_put),
	    .EN_server_core_request_put(fpu$EN_server_core_request_put),
	    .EN_server_core_response_get(fpu$EN_server_core_response_get),
	    .EN_server_reset_request_put(fpu$EN_server_reset_request_put),
	    .EN_server_reset_response_get(fpu$EN_server_reset_response_get),
	    .RDY_server_core_request_put(fpu$RDY_server_core_request_put),
	    .server_core_response_get(fpu$server_core_response_get),
	    .RDY_server_core_response_get(fpu$RDY_server_core_response_get),
	    .RDY_server_reset_request_put(fpu$RDY_server_reset_request_put),
	    .RDY_server_reset_response_get(fpu$RDY_server_reset_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(32'd1)) frmFpuF(.RST(RST_N),
						  .CLK(CLK),
						  .D_IN(frmFpuF$D_IN),
						  .ENQ(frmFpuF$ENQ),
						  .DEQ(frmFpuF$DEQ),
						  .CLR(frmFpuF$CLR),
						  .D_OUT(),
						  .FULL_N(),
						  .EMPTY_N());

  // submodule resetReqsF
  FIFO20 #(.guarded(32'd1)) resetReqsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetReqsF$ENQ),
				       .DEQ(resetReqsF$DEQ),
				       .CLR(resetReqsF$CLR),
				       .FULL_N(resetReqsF$FULL_N),
				       .EMPTY_N(resetReqsF$EMPTY_N));

  // submodule resetRspsF
  FIFO20 #(.guarded(32'd1)) resetRspsF(.RST(RST_N),
				       .CLK(CLK),
				       .ENQ(resetRspsF$ENQ),
				       .DEQ(resetRspsF$DEQ),
				       .CLR(resetRspsF$CLR),
				       .FULL_N(resetRspsF$FULL_N),
				       .EMPTY_N(resetRspsF$EMPTY_N));

  // rule RL_rl_reset_end
  assign CAN_FIRE_RL_rl_reset_end =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign WILL_FIRE_RL_rl_reset_end = CAN_FIRE_RL_rl_reset_end ;

  // rule RL_doFADD_S
  assign CAN_FIRE_RL_doFADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;
  assign WILL_FIRE_RL_doFADD_S = CAN_FIRE_RL_doFADD_S ;

  // rule RL_doFSUB_S
  assign CAN_FIRE_RL_doFSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;
  assign WILL_FIRE_RL_doFSUB_S = CAN_FIRE_RL_doFSUB_S ;

  // rule RL_doFMUL_S
  assign CAN_FIRE_RL_doFMUL_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;
  assign WILL_FIRE_RL_doFMUL_S = CAN_FIRE_RL_doFMUL_S ;

  // rule RL_doFMADD_S
  assign CAN_FIRE_RL_doFMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMADD_S = CAN_FIRE_RL_doFMADD_S ;

  // rule RL_doFMSUB_S
  assign CAN_FIRE_RL_doFMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFMSUB_S = CAN_FIRE_RL_doFMSUB_S ;

  // rule RL_doFNMADD_S
  assign CAN_FIRE_RL_doFNMADD_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMADD_S = CAN_FIRE_RL_doFNMADD_S ;

  // rule RL_doFNMSUB_S
  assign CAN_FIRE_RL_doFNMSUB_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd0 ;
  assign WILL_FIRE_RL_doFNMSUB_S = CAN_FIRE_RL_doFNMSUB_S ;

  // rule RL_doFDIV_S
  assign CAN_FIRE_RL_doFDIV_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0C ;
  assign WILL_FIRE_RL_doFDIV_S = CAN_FIRE_RL_doFDIV_S ;

  // rule RL_doFSQRT_S
  assign CAN_FIRE_RL_doFSQRT_S =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h2C ;
  assign WILL_FIRE_RL_doFSQRT_S = CAN_FIRE_RL_doFSQRT_S ;

  // rule RL_doFSGNJ_S
  assign CAN_FIRE_RL_doFSGNJ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_S = CAN_FIRE_RL_doFSGNJ_S ;

  // rule RL_doFSGNJN_S
  assign CAN_FIRE_RL_doFSGNJN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_S = CAN_FIRE_RL_doFSGNJN_S ;

  // rule RL_doFSGNJX_S
  assign CAN_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_S = CAN_FIRE_RL_doFSGNJX_S ;

  // rule RL_doFCVT_S_W
  assign CAN_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_S_W = CAN_FIRE_RL_doFCVT_S_W ;

  // rule RL_doFCVT_S_WU
  assign CAN_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_WU = CAN_FIRE_RL_doFCVT_S_WU ;

  // rule RL_doFCVT_W_S
  assign CAN_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_S = CAN_FIRE_RL_doFCVT_W_S ;

  // rule RL_doFCVT_WU_S
  assign CAN_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_S = CAN_FIRE_RL_doFCVT_WU_S ;

  // rule RL_doFMIN_S
  assign CAN_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_S = CAN_FIRE_RL_doFMIN_S ;

  // rule RL_doFMAX_S
  assign CAN_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_S = CAN_FIRE_RL_doFMAX_S ;

  // rule RL_doFMV_W_X
  assign CAN_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_W_X = CAN_FIRE_RL_doFMV_W_X ;

  // rule RL_doFMV_X_W
  assign CAN_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_W = CAN_FIRE_RL_doFMV_X_W ;

  // rule RL_doFEQ_S
  assign CAN_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_S = CAN_FIRE_RL_doFEQ_S ;

  // rule RL_doFLT_S
  assign CAN_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_S = CAN_FIRE_RL_doFLT_S ;

  // rule RL_doFLE_S
  assign CAN_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_S = CAN_FIRE_RL_doFLE_S ;

  // rule RL_doFCLASS_S
  assign CAN_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_S = CAN_FIRE_RL_doFCLASS_S ;

  // rule RL_doFADD_D
  assign CAN_FIRE_RL_doFADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h01 ;
  assign WILL_FIRE_RL_doFADD_D = CAN_FIRE_RL_doFADD_D ;

  // rule RL_doFSUB_D
  assign CAN_FIRE_RL_doFSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h05 ;
  assign WILL_FIRE_RL_doFSUB_D = CAN_FIRE_RL_doFSUB_D ;

  // rule RL_doFMUL_D
  assign CAN_FIRE_RL_doFMUL_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h09 ;
  assign WILL_FIRE_RL_doFMUL_D = CAN_FIRE_RL_doFMUL_D ;

  // rule RL_doFMADD_D
  assign CAN_FIRE_RL_doFMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMADD_D = CAN_FIRE_RL_doFMADD_D ;

  // rule RL_doFMSUB_D
  assign CAN_FIRE_RL_doFMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFMSUB_D = CAN_FIRE_RL_doFMSUB_D ;

  // rule RL_doFNMADD_D
  assign CAN_FIRE_RL_doFNMADD_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMADD_D = CAN_FIRE_RL_doFNMADD_D ;

  // rule RL_doFNMSUB_D
  assign CAN_FIRE_RL_doFNMSUB_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR[201:200] == 2'd1 ;
  assign WILL_FIRE_RL_doFNMSUB_D = CAN_FIRE_RL_doFNMSUB_D ;

  // rule RL_doFDIV_D
  assign CAN_FIRE_RL_doFDIV_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0D ;
  assign WILL_FIRE_RL_doFDIV_D = CAN_FIRE_RL_doFDIV_D ;

  // rule RL_doFSQRT_D
  assign CAN_FIRE_RL_doFSQRT_D =
	     fpu$RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h2D ;
  assign WILL_FIRE_RL_doFSQRT_D = CAN_FIRE_RL_doFSQRT_D ;

  // rule RL_doFSGNJ_D
  assign CAN_FIRE_RL_doFSGNJ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFSGNJ_D = CAN_FIRE_RL_doFSGNJ_D ;

  // rule RL_doFSGNJN_D
  assign CAN_FIRE_RL_doFSGNJN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFSGNJN_D = CAN_FIRE_RL_doFSGNJN_D ;

  // rule RL_doFSGNJX_D
  assign CAN_FIRE_RL_doFSGNJX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h11 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFSGNJX_D = CAN_FIRE_RL_doFSGNJX_D ;

  // rule RL_doFCVT_D_W
  assign CAN_FIRE_RL_doFCVT_D_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_W = CAN_FIRE_RL_doFCVT_D_W ;

  // rule RL_doFCVT_D_WU
  assign CAN_FIRE_RL_doFCVT_D_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h69 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_D_WU = CAN_FIRE_RL_doFCVT_D_WU ;

  // rule RL_doFCVT_W_D
  assign CAN_FIRE_RL_doFCVT_W_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_W_D = CAN_FIRE_RL_doFCVT_W_D ;

  // rule RL_doFCVT_WU_D
  assign CAN_FIRE_RL_doFCVT_WU_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h61 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_WU_D = CAN_FIRE_RL_doFCVT_WU_D ;

  // rule RL_doFCVT_S_D
  assign CAN_FIRE_RL_doFCVT_S_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h20 &&
	     requestR[199:195] == 5'd1 ;
  assign WILL_FIRE_RL_doFCVT_S_D = CAN_FIRE_RL_doFCVT_S_D ;

  // rule RL_doFCVT_D_S
  assign CAN_FIRE_RL_doFCVT_D_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h21 &&
	     requestR[199:195] == 5'd0 ;
  assign WILL_FIRE_RL_doFCVT_D_S = CAN_FIRE_RL_doFCVT_D_S ;

  // rule RL_doFMIN_D
  assign CAN_FIRE_RL_doFMIN_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMIN_D = CAN_FIRE_RL_doFMIN_D ;

  // rule RL_doFMAX_D
  assign CAN_FIRE_RL_doFMAX_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h15 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFMAX_D = CAN_FIRE_RL_doFMAX_D ;

  // rule RL_doFEQ_D
  assign CAN_FIRE_RL_doFEQ_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h2 ;
  assign WILL_FIRE_RL_doFEQ_D = CAN_FIRE_RL_doFEQ_D ;

  // rule RL_doFLT_D
  assign CAN_FIRE_RL_doFLT_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFLT_D = CAN_FIRE_RL_doFLT_D ;

  // rule RL_doFLE_D
  assign CAN_FIRE_RL_doFLE_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h51 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFLE_D = CAN_FIRE_RL_doFLE_D ;

  // rule RL_doFMV_D_X
  assign CAN_FIRE_RL_doFMV_D_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h79 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_D_X = CAN_FIRE_RL_doFMV_D_X ;

  // rule RL_doFMV_X_D
  assign CAN_FIRE_RL_doFMV_X_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h0 ;
  assign WILL_FIRE_RL_doFMV_X_D = CAN_FIRE_RL_doFMV_X_D ;

  // rule RL_doFCLASS_D
  assign CAN_FIRE_RL_doFCLASS_D =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h71 &&
	     requestR[194:192] == 3'h1 ;
  assign WILL_FIRE_RL_doFCLASS_D = CAN_FIRE_RL_doFCLASS_D ;

  // rule RL_rl_get_fpu_result
  assign CAN_FIRE_RL_rl_get_fpu_result = MUX_dw_result$wset_1__SEL_1 ;
  assign WILL_FIRE_RL_rl_get_fpu_result = MUX_dw_result$wset_1__SEL_1 ;

  // rule RL_rl_drive_fpu_result
  assign CAN_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;
  assign WILL_FIRE_RL_rl_drive_fpu_result = stateR == 2'd3 ;

  // rule RL_rl_reset_begin
  assign CAN_FIRE_RL_rl_reset_begin =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign WILL_FIRE_RL_rl_reset_begin = CAN_FIRE_RL_rl_reset_begin ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result$wset_1__SEL_1 =
	     fpu$RDY_server_core_response_get && stateR == 2'd2 ;
  assign MUX_dw_result$wset_1__VAL_1 =
	     { x__h160032, fpu$server_core_response_get[4:0] } ;
  assign MUX_fpu$server_core_request_put_1__VAL_1 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_2 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_3 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_4 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_5 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_6 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_7 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd8 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_8 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       33'h1AAAAAAAA,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42,
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd3 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_9 =
	     { 33'h1AAAAAAAA,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33,
	       130'h15555555555555554AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd4 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_10 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd0 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_11 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd1 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_12 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd2 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_13 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd5 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_14 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd6 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_15 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd7 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_16 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       1'd0,
	       requestR[63:0],
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd8 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_17 =
	     { 1'd0,
	       requestR[191:128],
	       1'd0,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd3 } ;
  assign MUX_fpu$server_core_request_put_1__VAL_18 =
	     { 1'd0,
	       requestR[191:128],
	       130'h15555555555555554AAAAAAAAAAAAAAAA,
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54,
	       4'd4 } ;
  assign MUX_requestR$write_1__VAL_2 =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign MUX_resultR$write_1__VAL_3 =
	     { 1'd1, x__h160032, fpu$server_core_response_get[4:0] } ;
  assign MUX_resultR$write_1__VAL_4 = { 1'd1, x__h159406, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_5 = { 1'd1, requestR[191:128], 5'd0 } ;
  assign MUX_resultR$write_1__VAL_7 = { 1'd1, x__h157177, x__h156962 } ;
  assign MUX_resultR$write_1__VAL_8 = { 1'd1, x__h155265, x__h156962 } ;
  assign MUX_resultR$write_1__VAL_9 = { 1'd1, x__h152535, x__h147023 } ;
  assign MUX_resultR$write_1__VAL_10 = { 1'd1, x__h148056, x__h147023 } ;
  assign MUX_resultR$write_1__VAL_11 = { 1'd1, x__h143473, x__h147023 } ;
  assign MUX_resultR$write_1__VAL_12 = { 1'd1, x__h101712, x__h142516 } ;
  assign MUX_resultR$write_1__VAL_13 = { 1'd1, x__h52972, x__h100695 } ;
  assign MUX_resultR$write_1__VAL_14 = { 1'd1, x__h52192, x__h52694 } ;
  assign MUX_resultR$write_1__VAL_15 = { 1'd1, x__h50581, x__h51900 } ;
  assign MUX_resultR$write_1__VAL_16 = { 1'd1, x__h40879, x__h50262 } ;
  assign MUX_resultR$write_1__VAL_17 = { 1'd1, x__h30896, x__h40559 } ;
  assign MUX_resultR$write_1__VAL_18 = { 1'd1, x__h30731, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_19 = { 1'd1, x__h30573, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_20 = { 1'd1, x__h30417, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_21 = { 1'd1, x__h28210, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_22 = { 1'd1, x__h27090, x__h26875 } ;
  assign MUX_resultR$write_1__VAL_23 = { 1'd1, x__h25986, x__h26875 } ;
  assign MUX_resultR$write_1__VAL_24 = { 1'd1, x__h24468, x__h20952 } ;
  assign MUX_resultR$write_1__VAL_25 = { 1'd1, x__h24296, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_26 = { 1'd1, x__h24141, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_27 = { 1'd1, x__h21581, x__h20952 } ;
  assign MUX_resultR$write_1__VAL_28 = { 1'd1, x__h18912, x__h20952 } ;
  assign MUX_resultR$write_1__VAL_29 = { 1'd1, x__h18128, x__h18630 } ;
  assign MUX_resultR$write_1__VAL_30 = { 1'd1, x__h16500, x__h17836 } ;
  assign MUX_resultR$write_1__VAL_31 = { 1'd1, x__h10323, x__h16181 } ;
  assign MUX_resultR$write_1__VAL_32 = { 1'd1, x__h3827, x__h10000 } ;
  assign MUX_resultR$write_1__VAL_33 = { 1'd1, x__h3623, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_34 = { 1'd1, x__h3455, 5'd0 } ;
  assign MUX_resultR$write_1__VAL_35 = { 1'd1, x__h3284, 5'd0 } ;

  // inlined wires
  assign dw_valid$wget = !WILL_FIRE_RL_rl_drive_fpu_result || resultR[69] ;
  assign dw_valid$whas =
	     WILL_FIRE_RL_rl_drive_fpu_result ||
	     WILL_FIRE_RL_rl_get_fpu_result ;
  assign dw_result$wget =
	     WILL_FIRE_RL_rl_get_fpu_result ?
	       MUX_dw_result$wset_1__VAL_1 :
	       resultR[68:0] ;

  // register requestR
  assign requestR$D_IN =
	     WILL_FIRE_RL_rl_reset_begin ?
	       215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_requestR$write_1__VAL_2 ;
  assign requestR$EN = WILL_FIRE_RL_rl_reset_begin || EN_req ;

  // register resultR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR$write_1__VAL_3 or
	  WILL_FIRE_RL_doFCLASS_D or
	  MUX_resultR$write_1__VAL_4 or
	  WILL_FIRE_RL_doFMV_X_D or
	  MUX_resultR$write_1__VAL_5 or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  MUX_resultR$write_1__VAL_7 or
	  WILL_FIRE_RL_doFLT_D or
	  MUX_resultR$write_1__VAL_8 or
	  WILL_FIRE_RL_doFEQ_D or
	  MUX_resultR$write_1__VAL_9 or
	  WILL_FIRE_RL_doFMAX_D or
	  MUX_resultR$write_1__VAL_10 or
	  WILL_FIRE_RL_doFMIN_D or
	  MUX_resultR$write_1__VAL_11 or
	  WILL_FIRE_RL_doFCVT_D_S or
	  MUX_resultR$write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_S_D or
	  MUX_resultR$write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  MUX_resultR$write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_W_D or
	  MUX_resultR$write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  MUX_resultR$write_1__VAL_16 or
	  WILL_FIRE_RL_doFCVT_D_W or
	  MUX_resultR$write_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJX_D or
	  MUX_resultR$write_1__VAL_18 or
	  WILL_FIRE_RL_doFSGNJN_D or
	  MUX_resultR$write_1__VAL_19 or
	  WILL_FIRE_RL_doFSGNJ_D or
	  MUX_resultR$write_1__VAL_20 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR$write_1__VAL_21 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR$write_1__VAL_22 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR$write_1__VAL_23 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR$write_1__VAL_24 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR$write_1__VAL_25 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR$write_1__VAL_26 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR$write_1__VAL_27 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR$write_1__VAL_28 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR$write_1__VAL_29 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR$write_1__VAL_30 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR$write_1__VAL_31 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR$write_1__VAL_32 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR$write_1__VAL_33 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR$write_1__VAL_34 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR$write_1__VAL_35)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin || EN_req:
	resultR$D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR$D_IN = MUX_resultR$write_1__VAL_3;
    WILL_FIRE_RL_doFCLASS_D: resultR$D_IN = MUX_resultR$write_1__VAL_4;
    WILL_FIRE_RL_doFMV_X_D: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFMV_D_X: resultR$D_IN = MUX_resultR$write_1__VAL_5;
    WILL_FIRE_RL_doFLE_D: resultR$D_IN = MUX_resultR$write_1__VAL_7;
    WILL_FIRE_RL_doFLT_D: resultR$D_IN = MUX_resultR$write_1__VAL_8;
    WILL_FIRE_RL_doFEQ_D: resultR$D_IN = MUX_resultR$write_1__VAL_9;
    WILL_FIRE_RL_doFMAX_D: resultR$D_IN = MUX_resultR$write_1__VAL_10;
    WILL_FIRE_RL_doFMIN_D: resultR$D_IN = MUX_resultR$write_1__VAL_11;
    WILL_FIRE_RL_doFCVT_D_S: resultR$D_IN = MUX_resultR$write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_S_D: resultR$D_IN = MUX_resultR$write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_WU_D: resultR$D_IN = MUX_resultR$write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_W_D: resultR$D_IN = MUX_resultR$write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_D_WU: resultR$D_IN = MUX_resultR$write_1__VAL_16;
    WILL_FIRE_RL_doFCVT_D_W: resultR$D_IN = MUX_resultR$write_1__VAL_17;
    WILL_FIRE_RL_doFSGNJX_D: resultR$D_IN = MUX_resultR$write_1__VAL_18;
    WILL_FIRE_RL_doFSGNJN_D: resultR$D_IN = MUX_resultR$write_1__VAL_19;
    WILL_FIRE_RL_doFSGNJ_D: resultR$D_IN = MUX_resultR$write_1__VAL_20;
    WILL_FIRE_RL_doFCLASS_S: resultR$D_IN = MUX_resultR$write_1__VAL_21;
    WILL_FIRE_RL_doFLE_S: resultR$D_IN = MUX_resultR$write_1__VAL_22;
    WILL_FIRE_RL_doFLT_S: resultR$D_IN = MUX_resultR$write_1__VAL_23;
    WILL_FIRE_RL_doFEQ_S: resultR$D_IN = MUX_resultR$write_1__VAL_24;
    WILL_FIRE_RL_doFMV_X_W: resultR$D_IN = MUX_resultR$write_1__VAL_25;
    WILL_FIRE_RL_doFMV_W_X: resultR$D_IN = MUX_resultR$write_1__VAL_26;
    WILL_FIRE_RL_doFMAX_S: resultR$D_IN = MUX_resultR$write_1__VAL_27;
    WILL_FIRE_RL_doFMIN_S: resultR$D_IN = MUX_resultR$write_1__VAL_28;
    WILL_FIRE_RL_doFCVT_WU_S: resultR$D_IN = MUX_resultR$write_1__VAL_29;
    WILL_FIRE_RL_doFCVT_W_S: resultR$D_IN = MUX_resultR$write_1__VAL_30;
    WILL_FIRE_RL_doFCVT_S_WU: resultR$D_IN = MUX_resultR$write_1__VAL_31;
    WILL_FIRE_RL_doFCVT_S_W: resultR$D_IN = MUX_resultR$write_1__VAL_32;
    WILL_FIRE_RL_doFSGNJX_S: resultR$D_IN = MUX_resultR$write_1__VAL_33;
    WILL_FIRE_RL_doFSGNJN_S: resultR$D_IN = MUX_resultR$write_1__VAL_34;
    WILL_FIRE_RL_doFSGNJ_S: resultR$D_IN = MUX_resultR$write_1__VAL_35;
    default: resultR$D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR$EN =
	     WILL_FIRE_RL_rl_reset_begin || EN_req ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_D or
	  WILL_FIRE_RL_doFMV_X_D or
	  WILL_FIRE_RL_doFMV_D_X or
	  WILL_FIRE_RL_doFLE_D or
	  WILL_FIRE_RL_doFLT_D or
	  WILL_FIRE_RL_doFEQ_D or
	  WILL_FIRE_RL_doFMAX_D or
	  WILL_FIRE_RL_doFMIN_D or
	  WILL_FIRE_RL_doFCVT_D_S or
	  WILL_FIRE_RL_doFCVT_S_D or
	  WILL_FIRE_RL_doFCVT_WU_D or
	  WILL_FIRE_RL_doFCVT_W_D or
	  WILL_FIRE_RL_doFCVT_D_WU or
	  WILL_FIRE_RL_doFCVT_D_W or
	  WILL_FIRE_RL_doFSGNJX_D or
	  WILL_FIRE_RL_doFSGNJN_D or
	  WILL_FIRE_RL_doFSGNJ_D or
	  WILL_FIRE_RL_doFSQRT_D or
	  WILL_FIRE_RL_doFDIV_D or
	  WILL_FIRE_RL_doFNMSUB_D or
	  WILL_FIRE_RL_doFNMADD_D or
	  WILL_FIRE_RL_doFMSUB_D or
	  WILL_FIRE_RL_doFMADD_D or
	  WILL_FIRE_RL_doFMUL_D or
	  WILL_FIRE_RL_doFSUB_D or
	  WILL_FIRE_RL_doFADD_D or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFSQRT_S or
	  WILL_FIRE_RL_doFDIV_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or
	  WILL_FIRE_RL_doFADD_S or WILL_FIRE_RL_rl_reset_end)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin: stateR$D_IN = 2'd0;
    EN_req: stateR$D_IN = 2'd1;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_D ||
    WILL_FIRE_RL_doFMV_X_D ||
    WILL_FIRE_RL_doFMV_D_X ||
    WILL_FIRE_RL_doFLE_D ||
    WILL_FIRE_RL_doFLT_D ||
    WILL_FIRE_RL_doFEQ_D ||
    WILL_FIRE_RL_doFMAX_D ||
    WILL_FIRE_RL_doFMIN_D ||
    WILL_FIRE_RL_doFCVT_D_S ||
    WILL_FIRE_RL_doFCVT_S_D ||
    WILL_FIRE_RL_doFCVT_WU_D ||
    WILL_FIRE_RL_doFCVT_W_D ||
    WILL_FIRE_RL_doFCVT_D_WU ||
    WILL_FIRE_RL_doFCVT_D_W ||
    WILL_FIRE_RL_doFSGNJX_D ||
    WILL_FIRE_RL_doFSGNJN_D ||
    WILL_FIRE_RL_doFSGNJ_D:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFSQRT_D || WILL_FIRE_RL_doFDIV_D ||
    WILL_FIRE_RL_doFNMSUB_D ||
    WILL_FIRE_RL_doFNMADD_D ||
    WILL_FIRE_RL_doFMSUB_D ||
    WILL_FIRE_RL_doFMADD_D ||
    WILL_FIRE_RL_doFMUL_D ||
    WILL_FIRE_RL_doFSUB_D ||
    WILL_FIRE_RL_doFADD_D:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_doFCLASS_S || WILL_FIRE_RL_doFLE_S || WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR$D_IN = 2'd3;
    WILL_FIRE_RL_doFSQRT_S || WILL_FIRE_RL_doFDIV_S ||
    WILL_FIRE_RL_doFNMSUB_S ||
    WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR$D_IN = 2'd2;
    WILL_FIRE_RL_rl_reset_end: stateR$D_IN = 2'd1;
    default: stateR$D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR$EN =
	     WILL_FIRE_RL_rl_reset_begin || WILL_FIRE_RL_rl_reset_end ||
	     EN_req ||
	     WILL_FIRE_RL_doFSQRT_D ||
	     WILL_FIRE_RL_doFDIV_D ||
	     WILL_FIRE_RL_doFNMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSQRT_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_D ||
	     WILL_FIRE_RL_doFMV_X_D ||
	     WILL_FIRE_RL_doFMV_D_X ||
	     WILL_FIRE_RL_doFLE_D ||
	     WILL_FIRE_RL_doFLT_D ||
	     WILL_FIRE_RL_doFEQ_D ||
	     WILL_FIRE_RL_doFMAX_D ||
	     WILL_FIRE_RL_doFMIN_D ||
	     WILL_FIRE_RL_doFCVT_D_S ||
	     WILL_FIRE_RL_doFCVT_S_D ||
	     WILL_FIRE_RL_doFCVT_WU_D ||
	     WILL_FIRE_RL_doFCVT_W_D ||
	     WILL_FIRE_RL_doFCVT_D_WU ||
	     WILL_FIRE_RL_doFCVT_D_W ||
	     WILL_FIRE_RL_doFSGNJX_D ||
	     WILL_FIRE_RL_doFSGNJN_D ||
	     WILL_FIRE_RL_doFSGNJ_D ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu$server_core_request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu$server_core_request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu$server_core_request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFDIV_S or
	  MUX_fpu$server_core_request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSQRT_S or
	  MUX_fpu$server_core_request_put_1__VAL_9 or
	  WILL_FIRE_RL_doFADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_10 or
	  WILL_FIRE_RL_doFSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_11 or
	  WILL_FIRE_RL_doFMUL_D or
	  MUX_fpu$server_core_request_put_1__VAL_12 or
	  WILL_FIRE_RL_doFMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_13 or
	  WILL_FIRE_RL_doFMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_14 or
	  WILL_FIRE_RL_doFNMADD_D or
	  MUX_fpu$server_core_request_put_1__VAL_15 or
	  WILL_FIRE_RL_doFNMSUB_D or
	  MUX_fpu$server_core_request_put_1__VAL_16 or
	  WILL_FIRE_RL_doFDIV_D or
	  MUX_fpu$server_core_request_put_1__VAL_17 or
	  WILL_FIRE_RL_doFSQRT_D or MUX_fpu$server_core_request_put_1__VAL_18)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_7;
      WILL_FIRE_RL_doFDIV_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_8;
      WILL_FIRE_RL_doFSQRT_S:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_9;
      WILL_FIRE_RL_doFADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_10;
      WILL_FIRE_RL_doFSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_11;
      WILL_FIRE_RL_doFMUL_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_12;
      WILL_FIRE_RL_doFMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_13;
      WILL_FIRE_RL_doFMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_14;
      WILL_FIRE_RL_doFNMADD_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_15;
      WILL_FIRE_RL_doFNMSUB_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_16;
      WILL_FIRE_RL_doFDIV_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_17;
      WILL_FIRE_RL_doFSQRT_D:
	  fpu$server_core_request_put =
	      MUX_fpu$server_core_request_put_1__VAL_18;
      default: fpu$server_core_request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu$EN_server_core_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFSQRT_S ||
	     WILL_FIRE_RL_doFADD_D ||
	     WILL_FIRE_RL_doFSUB_D ||
	     WILL_FIRE_RL_doFMUL_D ||
	     WILL_FIRE_RL_doFMADD_D ||
	     WILL_FIRE_RL_doFMSUB_D ||
	     WILL_FIRE_RL_doFNMADD_D ||
	     WILL_FIRE_RL_doFNMSUB_D ||
	     WILL_FIRE_RL_doFDIV_D ||
	     WILL_FIRE_RL_doFSQRT_D ;
  assign fpu$EN_server_core_response_get = MUX_dw_result$wset_1__SEL_1 ;
  assign fpu$EN_server_reset_request_put = CAN_FIRE_RL_rl_reset_begin ;
  assign fpu$EN_server_reset_response_get = CAN_FIRE_RL_rl_reset_end ;

  // submodule frmFpuF
  assign frmFpuF$D_IN = 1'b0 ;
  assign frmFpuF$ENQ = 1'b0 ;
  assign frmFpuF$DEQ = 1'b0 ;
  assign frmFpuF$CLR = CAN_FIRE_RL_rl_reset_begin ;

  // submodule resetReqsF
  assign resetReqsF$ENQ = EN_server_reset_request_put ;
  assign resetReqsF$DEQ =
	     fpu$RDY_server_reset_request_put && resetReqsF$EMPTY_N ;
  assign resetReqsF$CLR = 1'b0 ;

  // submodule resetRspsF
  assign resetRspsF$ENQ =
	     fpu$RDY_server_reset_response_get && resetRspsF$FULL_N &&
	     stateR == 2'd0 ;
  assign resetRspsF$DEQ = EN_server_reset_response_get ;
  assign resetRspsF$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60 =
	     _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2171 ?
	       _theResult___snd__h73003 :
	       _theResult____h64833 ;
  assign IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97 =
	     _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3492 ?
	       _theResult___snd__h132226 :
	       _theResult____h123927 ;
  assign IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65 =
	     _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2655 ?
	       _theResult___snd__h90856 :
	       _theResult____h82557 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q100 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3565 ?
	       _theResult___snd__h122579 :
	       _theResult___snd__h140978 ;
  assign IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q94 =
	     _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3172 ?
	       _theResult___snd__h122579 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q62 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2333 ?
	       _theResult___snd__h81615 :
	       57'd0 ;
  assign IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q68 =
	     _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2728 ?
	       _theResult___snd__h81615 :
	       _theResult___snd__h99492 ;
  assign IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_8_ETC___d2915 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
	       ((_theResult___fst_exp__h72940 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard4843_0b0_requestR_BIT_191_0b1_reques_ETC__q86 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87)) :
	       ((_theResult___fst_exp__h81626 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard3578_0b0_requestR_BIT_191_0b1_reques_ETC__q88 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1377 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard8922_0b0_requestR_BIT_159_0b1_reques_ETC__q35 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36) :
	       ((x__h39667[10:0] == 11'd2047) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard9652_0b0_requestR_BIT_159_0b1_reques_ETC__q37 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1492 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 ?
	       guard__h38922 != 2'b0 :
	       x__h39667[10:0] != 11'd2047 && guard__h39652 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d373 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard762_0b0_requestR_BIT_159_0b1_request_ETC__q8 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9) :
	       ((x__h9307[7:0] == 8'd255) ?
		  requestR[159] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard292_0b0_requestR_BIT_159_0b1_request_ETC__q10 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d523 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 ?
	       guard__h8762 != 2'b0 :
	       x__h9307[7:0] != 8'd255 && guard__h9292 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d1676 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 ?
	       guard__h48653 != 2'b0 :
	       x__h49397[10:0] != 11'd2047 && guard__h49382 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d838 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 ?
	       guard__h14974 != 2'b0 :
	       x__h15515[7:0] != 8'd255 && guard__h15500 != 2'b0 ;
  assign IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169 =
	     (_theResult____h64833[56] ?
		6'd0 :
		(_theResult____h64833[55] ?
		   6'd1 :
		   (_theResult____h64833[54] ?
		      6'd2 :
		      (_theResult____h64833[53] ?
			 6'd3 :
			 (_theResult____h64833[52] ?
			    6'd4 :
			    (_theResult____h64833[51] ?
			       6'd5 :
			       (_theResult____h64833[50] ?
				  6'd6 :
				  (_theResult____h64833[49] ?
				     6'd7 :
				     (_theResult____h64833[48] ?
					6'd8 :
					(_theResult____h64833[47] ?
					   6'd9 :
					   (_theResult____h64833[46] ?
					      6'd10 :
					      (_theResult____h64833[45] ?
						 6'd11 :
						 (_theResult____h64833[44] ?
						    6'd12 :
						    (_theResult____h64833[43] ?
						       6'd13 :
						       (_theResult____h64833[42] ?
							  6'd14 :
							  (_theResult____h64833[41] ?
							     6'd15 :
							     (_theResult____h64833[40] ?
								6'd16 :
								(_theResult____h64833[39] ?
								   6'd17 :
								   (_theResult____h64833[38] ?
								      6'd18 :
								      (_theResult____h64833[37] ?
									 6'd19 :
									 (_theResult____h64833[36] ?
									    6'd20 :
									    (_theResult____h64833[35] ?
									       6'd21 :
									       (_theResult____h64833[34] ?
										  6'd22 :
										  (_theResult____h64833[33] ?
										     6'd23 :
										     (_theResult____h64833[32] ?
											6'd24 :
											(_theResult____h64833[31] ?
											   6'd25 :
											   (_theResult____h64833[30] ?
											      6'd26 :
											      (_theResult____h64833[29] ?
												 6'd27 :
												 (_theResult____h64833[28] ?
												    6'd28 :
												    (_theResult____h64833[27] ?
												       6'd29 :
												       (_theResult____h64833[26] ?
													  6'd30 :
													  (_theResult____h64833[25] ?
													     6'd31 :
													     (_theResult____h64833[24] ?
														6'd32 :
														(_theResult____h64833[23] ?
														   6'd33 :
														   (_theResult____h64833[22] ?
														      6'd34 :
														      (_theResult____h64833[21] ?
															 6'd35 :
															 (_theResult____h64833[20] ?
															    6'd36 :
															    (_theResult____h64833[19] ?
															       6'd37 :
															       (_theResult____h64833[18] ?
																  6'd38 :
																  (_theResult____h64833[17] ?
																     6'd39 :
																     (_theResult____h64833[16] ?
																	6'd40 :
																	(_theResult____h64833[15] ?
																	   6'd41 :
																	   (_theResult____h64833[14] ?
																	      6'd42 :
																	      (_theResult____h64833[13] ?
																		 6'd43 :
																		 (_theResult____h64833[12] ?
																		    6'd44 :
																		    (_theResult____h64833[11] ?
																		       6'd45 :
																		       (_theResult____h64833[10] ?
																			  6'd46 :
																			  (_theResult____h64833[9] ?
																			     6'd47 :
																			     (_theResult____h64833[8] ?
																				6'd48 :
																				(_theResult____h64833[7] ?
																				   6'd49 :
																				   (_theResult____h64833[6] ?
																				      6'd50 :
																				      (_theResult____h64833[5] ?
																					 6'd51 :
																					 (_theResult____h64833[4] ?
																					    6'd52 :
																					    (_theResult____h64833[3] ?
																					       6'd53 :
																					       (_theResult____h64833[2] ?
																						  6'd54 :
																						  (_theResult____h64833[1] ?
																						     6'd55 :
																						     (_theResult____h64833[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490 =
	     (_theResult____h123927[56] ?
		6'd0 :
		(_theResult____h123927[55] ?
		   6'd1 :
		   (_theResult____h123927[54] ?
		      6'd2 :
		      (_theResult____h123927[53] ?
			 6'd3 :
			 (_theResult____h123927[52] ?
			    6'd4 :
			    (_theResult____h123927[51] ?
			       6'd5 :
			       (_theResult____h123927[50] ?
				  6'd6 :
				  (_theResult____h123927[49] ?
				     6'd7 :
				     (_theResult____h123927[48] ?
					6'd8 :
					(_theResult____h123927[47] ?
					   6'd9 :
					   (_theResult____h123927[46] ?
					      6'd10 :
					      (_theResult____h123927[45] ?
						 6'd11 :
						 (_theResult____h123927[44] ?
						    6'd12 :
						    (_theResult____h123927[43] ?
						       6'd13 :
						       (_theResult____h123927[42] ?
							  6'd14 :
							  (_theResult____h123927[41] ?
							     6'd15 :
							     (_theResult____h123927[40] ?
								6'd16 :
								(_theResult____h123927[39] ?
								   6'd17 :
								   (_theResult____h123927[38] ?
								      6'd18 :
								      (_theResult____h123927[37] ?
									 6'd19 :
									 (_theResult____h123927[36] ?
									    6'd20 :
									    (_theResult____h123927[35] ?
									       6'd21 :
									       (_theResult____h123927[34] ?
										  6'd22 :
										  (_theResult____h123927[33] ?
										     6'd23 :
										     (_theResult____h123927[32] ?
											6'd24 :
											(_theResult____h123927[31] ?
											   6'd25 :
											   (_theResult____h123927[30] ?
											      6'd26 :
											      (_theResult____h123927[29] ?
												 6'd27 :
												 (_theResult____h123927[28] ?
												    6'd28 :
												    (_theResult____h123927[27] ?
												       6'd29 :
												       (_theResult____h123927[26] ?
													  6'd30 :
													  (_theResult____h123927[25] ?
													     6'd31 :
													     (_theResult____h123927[24] ?
														6'd32 :
														(_theResult____h123927[23] ?
														   6'd33 :
														   (_theResult____h123927[22] ?
														      6'd34 :
														      (_theResult____h123927[21] ?
															 6'd35 :
															 (_theResult____h123927[20] ?
															    6'd36 :
															    (_theResult____h123927[19] ?
															       6'd37 :
															       (_theResult____h123927[18] ?
																  6'd38 :
																  (_theResult____h123927[17] ?
																     6'd39 :
																     (_theResult____h123927[16] ?
																	6'd40 :
																	(_theResult____h123927[15] ?
																	   6'd41 :
																	   (_theResult____h123927[14] ?
																	      6'd42 :
																	      (_theResult____h123927[13] ?
																		 6'd43 :
																		 (_theResult____h123927[12] ?
																		    6'd44 :
																		    (_theResult____h123927[11] ?
																		       6'd45 :
																		       (_theResult____h123927[10] ?
																			  6'd46 :
																			  (_theResult____h123927[9] ?
																			     6'd47 :
																			     (_theResult____h123927[8] ?
																				6'd48 :
																				(_theResult____h123927[7] ?
																				   6'd49 :
																				   (_theResult____h123927[6] ?
																				      6'd50 :
																				      (_theResult____h123927[5] ?
																					 6'd51 :
																					 (_theResult____h123927[4] ?
																					    6'd52 :
																					    (_theResult____h123927[3] ?
																					       6'd53 :
																					       (_theResult____h123927[2] ?
																						  6'd54 :
																						  (_theResult____h123927[1] ?
																						     6'd55 :
																						     (_theResult____h123927[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653 =
	     (_theResult____h82557[56] ?
		6'd0 :
		(_theResult____h82557[55] ?
		   6'd1 :
		   (_theResult____h82557[54] ?
		      6'd2 :
		      (_theResult____h82557[53] ?
			 6'd3 :
			 (_theResult____h82557[52] ?
			    6'd4 :
			    (_theResult____h82557[51] ?
			       6'd5 :
			       (_theResult____h82557[50] ?
				  6'd6 :
				  (_theResult____h82557[49] ?
				     6'd7 :
				     (_theResult____h82557[48] ?
					6'd8 :
					(_theResult____h82557[47] ?
					   6'd9 :
					   (_theResult____h82557[46] ?
					      6'd10 :
					      (_theResult____h82557[45] ?
						 6'd11 :
						 (_theResult____h82557[44] ?
						    6'd12 :
						    (_theResult____h82557[43] ?
						       6'd13 :
						       (_theResult____h82557[42] ?
							  6'd14 :
							  (_theResult____h82557[41] ?
							     6'd15 :
							     (_theResult____h82557[40] ?
								6'd16 :
								(_theResult____h82557[39] ?
								   6'd17 :
								   (_theResult____h82557[38] ?
								      6'd18 :
								      (_theResult____h82557[37] ?
									 6'd19 :
									 (_theResult____h82557[36] ?
									    6'd20 :
									    (_theResult____h82557[35] ?
									       6'd21 :
									       (_theResult____h82557[34] ?
										  6'd22 :
										  (_theResult____h82557[33] ?
										     6'd23 :
										     (_theResult____h82557[32] ?
											6'd24 :
											(_theResult____h82557[31] ?
											   6'd25 :
											   (_theResult____h82557[30] ?
											      6'd26 :
											      (_theResult____h82557[29] ?
												 6'd27 :
												 (_theResult____h82557[28] ?
												    6'd28 :
												    (_theResult____h82557[27] ?
												       6'd29 :
												       (_theResult____h82557[26] ?
													  6'd30 :
													  (_theResult____h82557[25] ?
													     6'd31 :
													     (_theResult____h82557[24] ?
														6'd32 :
														(_theResult____h82557[23] ?
														   6'd33 :
														   (_theResult____h82557[22] ?
														      6'd34 :
														      (_theResult____h82557[21] ?
															 6'd35 :
															 (_theResult____h82557[20] ?
															    6'd36 :
															    (_theResult____h82557[19] ?
															       6'd37 :
															       (_theResult____h82557[18] ?
																  6'd38 :
																  (_theResult____h82557[17] ?
																     6'd39 :
																     (_theResult____h82557[16] ?
																	6'd40 :
																	(_theResult____h82557[15] ?
																	   6'd41 :
																	   (_theResult____h82557[14] ?
																	      6'd42 :
																	      (_theResult____h82557[13] ?
																		 6'd43 :
																		 (_theResult____h82557[12] ?
																		    6'd44 :
																		    (_theResult____h82557[11] ?
																		       6'd45 :
																		       (_theResult____h82557[10] ?
																			  6'd46 :
																			  (_theResult____h82557[9] ?
																			     6'd47 :
																			     (_theResult____h82557[8] ?
																				6'd48 :
																				(_theResult____h82557[7] ?
																				   6'd49 :
																				   (_theResult____h82557[6] ?
																				      6'd50 :
																				      (_theResult____h82557[5] ?
																					 6'd51 :
																					 (_theResult____h82557[4] ?
																					    6'd52 :
																					    (_theResult____h82557[3] ?
																					       6'd53 :
																					       (_theResult____h82557[2] ?
																						  6'd54 :
																						  (_theResult____h82557[1] ?
																						     6'd55 :
																						     (_theResult____h82557[0] ?
																							6'd56 :
																							6'd57))))))))))))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3734 =
	     (_theResult___fst_exp__h132163 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard23937_0b0_requestR_BITS_191_TO_160_E_ETC__q112 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2228 =
	     (guard__h64843 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h72940 :
	       _theResult___exp__h73466 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2230 =
	     (guard__h64843 == 2'b0) ?
	       _theResult___fst_exp__h72940 :
	       (requestR[191] ?
		  _theResult___exp__h73466 :
		  _theResult___fst_exp__h72940) ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2815 =
	     (guard__h64843 == 2'b0 || requestR[191]) ?
	       sfdin__h72934[56:34] :
	       _theResult___sfd__h73467 ;
  assign IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2817 =
	     (guard__h64843 == 2'b0) ?
	       sfdin__h72934[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h73467 :
		  sfdin__h72934[56:34]) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3549 =
	     (guard__h123937 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h132163 :
	       _theResult___exp__h132892 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3551 =
	     (guard__h123937 == 2'b0) ?
	       _theResult___fst_exp__h132163 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h132892 :
		  _theResult___fst_exp__h132163) ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3678 =
	     (guard__h123937 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       sfdin__h132157[56:5] :
	       _theResult___sfd__h132893 ;
  assign IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3680 =
	     (guard__h123937 == 2'b0) ?
	       sfdin__h132157[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h132893 :
		  sfdin__h132157[56:5]) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2712 =
	     (guard__h82567 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h90793 :
	       _theResult___exp__h91319 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2714 =
	     (guard__h82567 == 2'b0) ?
	       _theResult___fst_exp__h90793 :
	       (requestR[191] ?
		  _theResult___exp__h91319 :
		  _theResult___fst_exp__h90793) ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2861 =
	     (guard__h82567 == 2'b0 || requestR[191]) ?
	       sfdin__h90787[56:34] :
	       _theResult___sfd__h91320 ;
  assign IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2863 =
	     (guard__h82567 == 2'b0) ?
	       sfdin__h90787[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h91320 :
		  sfdin__h90787[56:34]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3224 =
	     (guard__h114629 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h122590 :
	       _theResult___exp__h123245 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3226 =
	     (guard__h114629 == 2'b0) ?
	       _theResult___fst_exp__h122590 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h123245 :
		  _theResult___fst_exp__h122590) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3618 =
	     (guard__h133004 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___fst_exp__h140994 :
	       _theResult___exp__h141674 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3620 =
	     (guard__h133004 == 2'b0) ?
	       _theResult___fst_exp__h140994 :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___exp__h141674 :
		  _theResult___fst_exp__h140994) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3651 =
	     (guard__h114629 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h122541[56:5] :
	       _theResult___sfd__h123246 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3653 =
	     (guard__h114629 == 2'b0) ?
	       _theResult___snd__h122541[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h123246 :
		  _theResult___snd__h122541[56:5]) ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3697 =
	     (guard__h133004 == 2'b0 ||
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       _theResult___snd__h140940[56:5] :
	       _theResult___sfd__h141675 ;
  assign IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3699 =
	     (guard__h133004 == 2'b0) ?
	       _theResult___snd__h140940[56:5] :
	       ((requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		  _theResult___sfd__h141675 :
		  _theResult___snd__h140940[56:5]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2385 =
	     (guard__h73578 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h81626 :
	       _theResult___exp__h82078 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2387 =
	     (guard__h73578 == 2'b0) ?
	       _theResult___fst_exp__h81626 :
	       (requestR[191] ?
		  _theResult___exp__h82078 :
		  _theResult___fst_exp__h81626) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2781 =
	     (guard__h91431 == 2'b0 || requestR[191]) ?
	       _theResult___fst_exp__h99508 :
	       _theResult___exp__h99985 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2783 =
	     (guard__h91431 == 2'b0) ?
	       _theResult___fst_exp__h99508 :
	       (requestR[191] ?
		  _theResult___exp__h99985 :
		  _theResult___fst_exp__h99508) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2834 =
	     (guard__h73578 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h81577[56:34] :
	       _theResult___sfd__h82079 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2836 =
	     (guard__h73578 == 2'b0) ?
	       _theResult___snd__h81577[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h82079 :
		  _theResult___snd__h81577[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2880 =
	     (guard__h91431 == 2'b0 || requestR[191]) ?
	       _theResult___snd__h99454[56:34] :
	       _theResult___sfd__h99986 ;
  assign IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2882 =
	     (guard__h91431 == 2'b0) ?
	       _theResult___snd__h99454[56:34] :
	       (requestR[191] ?
		  _theResult___sfd__h99986 :
		  _theResult___snd__h99454[56:34]) ;
  assign IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFF_ETC___d3742 =
	     (_theResult___fst_exp__h140994 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard33004_0b0_requestR_BITS_191_TO_160_E_ETC__q110 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1398 =
	     (guard__h38922 == 2'b0) ?
	       11'd0 :
	       (requestR[159] ? _theResult___exp__h39538 : 11'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1424 =
	     (guard__h39652 == 2'b0 || requestR[159]) ?
	       x__h39667[10:0] :
	       _theResult___exp__h40294 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1426 =
	     (guard__h39652 == 2'b0) ?
	       x__h39667[10:0] :
	       (requestR[159] ? _theResult___exp__h40294 : x__h39667[10:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1447 =
	     (guard__h38922 == 2'b0 || requestR[159]) ?
	       sfd___3__h38912[54:3] :
	       _theResult___sfd__h39539 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1449 =
	     (guard__h38922 == 2'b0) ?
	       sfd___3__h38912[54:3] :
	       (requestR[159] ?
		  _theResult___sfd__h39539 :
		  sfd___3__h38912[54:3]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1465 =
	     (guard__h39652 == 2'b0 || requestR[159]) ?
	       sfd___3__h38912[53:2] :
	       _theResult___sfd__h40295 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1467 =
	     (guard__h39652 == 2'b0) ?
	       sfd___3__h38912[53:2] :
	       (requestR[159] ?
		  _theResult___sfd__h40295 :
		  sfd___3__h38912[53:2]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d395 =
	     (guard__h8762 == 2'b0) ?
	       8'd0 :
	       (requestR[159] ? _theResult___exp__h9178 : 8'd0) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d421 =
	     (guard__h9292 == 2'b0 || requestR[159]) ?
	       x__h9307[7:0] :
	       _theResult___exp__h9731 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d423 =
	     (guard__h9292 == 2'b0) ?
	       x__h9307[7:0] :
	       (requestR[159] ? _theResult___exp__h9731 : x__h9307[7:0]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d444 =
	     (guard__h8762 == 2'b0 || requestR[159]) ?
	       sfd___3__h8752[31:9] :
	       _theResult___sfd__h9179 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d446 =
	     (guard__h8762 == 2'b0) ?
	       sfd___3__h8752[31:9] :
	       (requestR[159] ?
		  _theResult___sfd__h9179 :
		  sfd___3__h8752[31:9]) ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d462 =
	     (guard__h9292 == 2'b0 || requestR[159]) ?
	       sfd___3__h8752[30:8] :
	       _theResult___sfd__h9732 ;
  assign IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d464 =
	     (guard__h9292 == 2'b0) ?
	       sfd___3__h8752[30:8] :
	       (requestR[159] ?
		  _theResult___sfd__h9732 :
		  sfd___3__h8752[30:8]) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1083 =
	     (sV2_exp__h1396 == 8'd255 && sV2_sfd__h1397[22] ||
	      IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1052) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } :
	       (IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_ETC___d1056 ?
		  requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
		  IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1081) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1087 =
	     (sV2_exp__h1396 == 8'd255 && sV2_sfd__h1397 != 23'd0 &&
	      !sV2_sfd__h1397[22]) ?
	       res__h19828 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1086 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1098 =
	     IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_ETC___d1056 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } :
	       IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1097 ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1100 =
	     (sV2_exp__h1396 == 8'd255 && sV2_sfd__h1397[22]) ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } :
	       (IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1052 ?
		  requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
		  IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1098) ;
  assign IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1104 =
	     (sV2_exp__h1396 == 8'd255 && sV2_sfd__h1397 != 23'd0 &&
	      !sV2_sfd__h1397[22]) ?
	       res__h19828 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1103 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1084 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280[22]) ?
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
	       IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1083 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1086 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280[22] &&
	      sV2_exp__h1396 == 8'd255 &&
	      sV2_sfd__h1397[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1084 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1088 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 &&
	      !sV1_sfd__h1280[22]) ?
	       res__h19591 :
	       IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1087 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1101 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280[22]) ?
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
	       IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1100 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1103 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280[22] &&
	      sV2_exp__h1396 == 8'd255 &&
	      sV2_sfd__h1397[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       { 32'hFFFFFFFF,
		 IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1101 } ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1105 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 &&
	      !sV1_sfd__h1280[22]) ?
	       res__h19591 :
	       IF_IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFF_ETC___d1104 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1181 =
	     (sV1_exp__h1279 == 8'd0 && sV1_sfd__h1280 == 23'd0) ?
	       res___1__h28476 :
	       ((sV1_exp__h1279 == 8'd0) ? res___1__h28495 : res__h28511) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1182 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 == 23'd0) ?
	       res___1__h28466 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1181 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 =
	     ((sV1_exp__h1279 == 8'd0) ?
		(sV1_sfd__h1280[22] ?
		   6'd2 :
		   (sV1_sfd__h1280[21] ?
		      6'd3 :
		      (sV1_sfd__h1280[20] ?
			 6'd4 :
			 (sV1_sfd__h1280[19] ?
			    6'd5 :
			    (sV1_sfd__h1280[18] ?
			       6'd6 :
			       (sV1_sfd__h1280[17] ?
				  6'd7 :
				  (sV1_sfd__h1280[16] ?
				     6'd8 :
				     (sV1_sfd__h1280[15] ?
					6'd9 :
					(sV1_sfd__h1280[14] ?
					   6'd10 :
					   (sV1_sfd__h1280[13] ?
					      6'd11 :
					      (sV1_sfd__h1280[12] ?
						 6'd12 :
						 (sV1_sfd__h1280[11] ?
						    6'd13 :
						    (sV1_sfd__h1280[10] ?
						       6'd14 :
						       (sV1_sfd__h1280[9] ?
							  6'd15 :
							  (sV1_sfd__h1280[8] ?
							     6'd16 :
							     (sV1_sfd__h1280[7] ?
								6'd17 :
								(sV1_sfd__h1280[6] ?
								   6'd18 :
								   (sV1_sfd__h1280[5] ?
								      6'd19 :
								      (sV1_sfd__h1280[4] ?
									 6'd20 :
									 (sV1_sfd__h1280[3] ?
									    6'd21 :
									    (sV1_sfd__h1280[2] ?
									       6'd22 :
									       (sV1_sfd__h1280[1] ?
										  6'd23 :
										  (sV1_sfd__h1280[0] ?
										     6'd24 :
										     6'd57))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3710 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0) ?
	       _theResult___snd_fst_sfd__h103664 :
	       _theResult___fst_sfd__h141791 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3746 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 ||
	      (sV1_exp__h1279 == 8'd255 || sV1_exp__h1279 == 8'd0) &&
	      sV1_sfd__h1280 == 23'd0) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((sV1_exp__h1279 == 8'd0) ?
		  IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3726 :
		  IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3744) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3781 =
	     (sV1_exp__h1279 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[4] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[4] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3784 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0) ?
	       sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 &&
	       !sV1_sfd__h1280[22] :
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 != 23'd0) &&
	       (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3781 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3791 =
	     (sV1_exp__h1279 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 &&
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[3] :
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 &&
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 &&
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[3] ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3805 =
	     (sV1_exp__h1279 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[2] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3803 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3817 =
	     (sV1_exp__h1279 == 8'd0) ?
	       _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 &&
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 ||
		_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[1]) :
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 &&
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3815 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3829 =
	     (sV1_exp__h1279 == 8'd0) ?
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ||
	       !_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 &&
	       _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760[0] :
	       !SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ||
	       IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3827 ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d936 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 == 23'd0) ?
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865 :
	       ((sV1_exp__h1279 == 8'd0 && sV1_sfd__h1280 == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d934) ;
  assign IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d997 =
	     (sV1_exp__h1279 == 8'd0 && sV1_sfd__h1280 == 23'd0) ?
	       32'd0 :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d995) ;
  assign IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d1318 =
	     sfd__h3848[31] ?
	       6'd0 :
	       (sfd__h3848[30] ?
		  6'd1 :
		  (sfd__h3848[29] ?
		     6'd2 :
		     (sfd__h3848[28] ?
			6'd3 :
			(sfd__h3848[27] ?
			   6'd4 :
			   (sfd__h3848[26] ?
			      6'd5 :
			      (sfd__h3848[25] ?
				 6'd6 :
				 (sfd__h3848[24] ?
				    6'd7 :
				    (sfd__h3848[23] ?
				       6'd8 :
				       (sfd__h3848[22] ?
					  6'd9 :
					  (sfd__h3848[21] ?
					     6'd10 :
					     (sfd__h3848[20] ?
						6'd11 :
						(sfd__h3848[19] ?
						   6'd12 :
						   (sfd__h3848[18] ?
						      6'd13 :
						      (sfd__h3848[17] ?
							 6'd14 :
							 (sfd__h3848[16] ?
							    6'd15 :
							    (sfd__h3848[15] ?
							       6'd16 :
							       (sfd__h3848[14] ?
								  6'd17 :
								  (sfd__h3848[13] ?
								     6'd18 :
								     (sfd__h3848[12] ?
									6'd19 :
									(sfd__h3848[11] ?
									   6'd20 :
									   (sfd__h3848[10] ?
									      6'd21 :
									      (sfd__h3848[9] ?
										 6'd22 :
										 (sfd__h3848[8] ?
										    6'd23 :
										    (sfd__h3848[7] ?
										       6'd24 :
										       (sfd__h3848[6] ?
											  6'd25 :
											  (sfd__h3848[5] ?
											     6'd26 :
											     (sfd__h3848[4] ?
												6'd27 :
												(sfd__h3848[3] ?
												   6'd28 :
												   (sfd__h3848[2] ?
												      6'd29 :
												      (sfd__h3848[1] ?
													 6'd30 :
													 (sfd__h3848[0] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d303 =
	     sfd__h3848[31] ?
	       6'd0 :
	       (sfd__h3848[30] ?
		  6'd1 :
		  (sfd__h3848[29] ?
		     6'd2 :
		     (sfd__h3848[28] ?
			6'd3 :
			(sfd__h3848[27] ?
			   6'd4 :
			   (sfd__h3848[26] ?
			      6'd5 :
			      (sfd__h3848[25] ?
				 6'd6 :
				 (sfd__h3848[24] ?
				    6'd7 :
				    (sfd__h3848[23] ?
				       6'd8 :
				       (sfd__h3848[22] ?
					  6'd9 :
					  (sfd__h3848[21] ?
					     6'd10 :
					     (sfd__h3848[20] ?
						6'd11 :
						(sfd__h3848[19] ?
						   6'd12 :
						   (sfd__h3848[18] ?
						      6'd13 :
						      (sfd__h3848[17] ?
							 6'd14 :
							 (sfd__h3848[16] ?
							    6'd15 :
							    (sfd__h3848[15] ?
							       6'd16 :
							       (sfd__h3848[14] ?
								  6'd17 :
								  (sfd__h3848[13] ?
								     6'd18 :
								     (sfd__h3848[12] ?
									6'd19 :
									(sfd__h3848[11] ?
									   6'd20 :
									   (sfd__h3848[10] ?
									      6'd21 :
									      (sfd__h3848[9] ?
										 6'd22 :
										 (sfd__h3848[8] ?
										    6'd23 :
										    (sfd__h3848[7] ?
										       6'd24 :
										       (sfd__h3848[6] ?
											  6'd25 :
											  (sfd__h3848[5] ?
											     6'd26 :
											     (sfd__h3848[4] ?
												6'd27 :
												(sfd__h3848[3] ?
												   6'd28 :
												   (sfd__h3848[2] ?
												      6'd29 :
												      (sfd__h3848[1] ?
													 6'd30 :
													 (sfd__h3848[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d932 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905 ?
	       (IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d926 ?
		  ((x__h17422[56:25] == 32'h7FFFFFFF) ?
		     x__h17422[56:25] :
		     x__h17422[56:25] + 32'd1) :
		  x__h17422[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d934 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 ==
	      20'd1048545) ?
	       ((_theResult_____2__h16681[32:31] == 2'b11) ?
		  _theResult_____2__h16681[31:0] :
		  IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865) :
	       (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903[19] ?
		  IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865 :
		  IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d932) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d958 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 ==
	      20'd1048545) ?
	       _theResult_____2__h16681[32:31] == 2'b11 &&
	       guard__h16679 != 2'd0 :
	       !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903[19] &&
	       (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905 ||
		guard__h17233 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d995 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970 ?
	       (IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d989 ?
		  ((x__h18552[56:25] == 32'hFFFFFFFF) ?
		     x__h18552[56:25] :
		     x__h18552[56:25] + 32'd1) :
		  x__h18552[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1766 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739 ?
	       (IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1760 ?
		  ((x__h51503[85:54] == 32'h7FFFFFFF) ?
		     x__h51503[85:54] :
		     x__h51503[85:54] + 32'd1) :
		  x__h51503[85:54]) :
	       32'd0 ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1768 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 ==
	      24'd16777185) ?
	       ((_theResult_____2__h50762[32:31] == 2'b11) ?
		  _theResult_____2__h50762[31:0] :
		  IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699) :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737[23] ?
		  IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1766) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1792 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 ==
	      24'd16777185) ?
	       _theResult_____2__h50762[32:31] == 2'b11 &&
	       guard__h50760 != 2'd0 :
	       !NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737[23] &&
	       (!NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739 ||
		guard__h51314 != 2'd0) ;
  assign IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1829 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804 ?
	       (IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1823 ?
		  ((x__h52616[85:54] == 32'hFFFFFFFF) ?
		     x__h52616[85:54] :
		     x__h52616[85:54] + 32'd1) :
		  x__h52616[85:54]) :
	       32'd0 ;
  assign IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1378 =
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324) ?
	       requestR[159] :
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1377 ;
  assign IF_NOT_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BI_ETC___d3726 =
	     (!_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ||
	      _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 ||
	      _theResult___fst_exp__h122590 == 11'd2047) ?
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard14629_0b0_requestR_BITS_191_TO_160_E_ETC__q108 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109) ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1081 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080 ?
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } :
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 ;
  assign IF_NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFF_ETC___d1097 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080 ?
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 :
	       { requestR[191:160] == 32'hFFFFFFFF && requestR[159],
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign IF_NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1076 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065 ||
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 &&
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067 :
	       !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070 ||
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 &&
	       !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3564 =
	     ((SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] ==
	       11'd0) ?
		12'd3074 :
		{ SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q99[10],
		  SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q99 }) -
	     12'd3074 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3744 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ?
	       (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
		  IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_19_ETC___d3734 :
		  IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFF_ETC___d3742) :
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159] ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3803 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[2] :
	       _theResult___fst_exp__h141775 == 11'd2047 &&
	       _theResult___fst_sfd__h141776 == 52'd0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3815 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[1] :
	       _theResult___fst_exp__h140994 == 11'd0 &&
	       guard__h133004 != 2'b0 ;
  assign IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3827 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777[0] :
	       _theResult___fst_exp__h140994 != 11'd2047 &&
	       guard__h133004 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2727 =
	     ((SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] ==
	       8'd0) ?
		9'd386 :
		{ SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q67[7],
		  SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q67 }) -
	     9'd386 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2933 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       ((_theResult___fst_exp__h90793 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard2567_0b0_requestR_BIT_191_0b1_reques_ETC__q90 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91)) :
	       ((_theResult___fst_exp__h99508 == 8'd255) ?
		  requestR[191] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard1431_0b0_requestR_BIT_191_0b1_reques_ETC__q92 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93)) ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3011 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[2] :
	       _theResult___fst_exp__h100086 == 8'd255 &&
	       _theResult___fst_sfd__h100087 == 23'd0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3024 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[1] :
	       _theResult___fst_exp__h99508 == 8'd0 && guard__h91431 != 2'b0 ;
  assign IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3037 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[0] :
	       _theResult___fst_exp__h99508 != 8'd255 &&
	       guard__h91431 != 2'b0 ;
  assign IF_requestR_3_BITS_126_TO_116_842_EQ_2047_843__ETC___d3890 =
	     (requestR[126:116] == 11'd2047 && requestR[115] ||
	      requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3859) ?
	       requestR[191:128] :
	       (requestR_3_BITS_126_TO_116_842_EQ_0_856_AND_re_ETC___d3863 ?
		  requestR[127:64] :
		  res__h146891) ;
  assign IF_requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_ETC___d1056 =
	     sV2_exp__h1396 == 8'd0 && sV2_sfd__h1397 == 23'd0 &&
	     requestR[127:96] == 32'hFFFFFFFF &&
	     requestR[95] &&
	     sV1_exp__h1279 == 8'd0 &&
	     sV1_sfd__h1280 == 23'd0 &&
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ;
  assign IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1475 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 ||
	      _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h40398 ;
  assign IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1659 =
	     (requestR[159:128] == 32'd0 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 ||
	      _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539) ?
	       52'd0 :
	       _theResult___snd_fst_sfd__h50127 ;
  assign IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d433 =
	     (requestR[159:128] == 32'd0 ||
	      !sfd__h3848[31] && !sfd__h3848[30] && !sfd__h3848[29] &&
	      !sfd__h3848[28] &&
	      !sfd__h3848[27] &&
	      !sfd__h3848[26] &&
	      !sfd__h3848[25] &&
	      !sfd__h3848[24] &&
	      !sfd__h3848[23] &&
	      !sfd__h3848[22] &&
	      !sfd__h3848[21] &&
	      !sfd__h3848[20] &&
	      !sfd__h3848[19] &&
	      !sfd__h3848[18] &&
	      !sfd__h3848[17] &&
	      !sfd__h3848[16] &&
	      !sfd__h3848[15] &&
	      !sfd__h3848[14] &&
	      !sfd__h3848[13] &&
	      !sfd__h3848[12] &&
	      !sfd__h3848[11] &&
	      !sfd__h3848[10] &&
	      !sfd__h3848[9] &&
	      !sfd__h3848[8] &&
	      !sfd__h3848[7] &&
	      !sfd__h3848[6] &&
	      !sfd__h3848[5] &&
	      !sfd__h3848[4] &&
	      !sfd__h3848[3] &&
	      !sfd__h3848[2] &&
	      !sfd__h3848[1] &&
	      !sfd__h3848[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h9840 ;
  assign IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d752 =
	     (requestR[159:128] == 32'd0 ||
	      !requestR[159] &&
	      NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h16047 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d1831 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       32'd0 :
	       (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802[23] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1829) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3905 =
	     requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3859 ?
	       requestR[127:64] :
	       (requestR_3_BITS_126_TO_116_842_EQ_0_856_AND_re_ETC___d3863 ?
		  requestR[191:128] :
		  res__h151474) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3983 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       res___1__h159874 :
	       ((requestR[190:180] == 11'd0) ?
		  res___1__h159893 :
		  res__h159909) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 =
	     ((requestR[190:180] == 11'd0) ?
		(requestR[179] ?
		   6'd2 :
		   (requestR[178] ?
		      6'd3 :
		      (requestR[177] ?
			 6'd4 :
			 (requestR[176] ?
			    6'd5 :
			    (requestR[175] ?
			       6'd6 :
			       (requestR[174] ?
				  6'd7 :
				  (requestR[173] ?
				     6'd8 :
				     (requestR[172] ?
					6'd9 :
					(requestR[171] ?
					   6'd10 :
					   (requestR[170] ?
					      6'd11 :
					      (requestR[169] ?
						 6'd12 :
						 (requestR[168] ?
						    6'd13 :
						    (requestR[167] ?
						       6'd14 :
						       (requestR[166] ?
							  6'd15 :
							  (requestR[165] ?
							     6'd16 :
							     (requestR[164] ?
								6'd17 :
								(requestR[163] ?
								   6'd18 :
								   (requestR[162] ?
								      6'd19 :
								      (requestR[161] ?
									 6'd20 :
									 (requestR[160] ?
									    6'd21 :
									    (requestR[159] ?
									       6'd22 :
									       (requestR[158] ?
										  6'd23 :
										  (requestR[157] ?
										     6'd24 :
										     (requestR[156] ?
											6'd25 :
											(requestR[155] ?
											   6'd26 :
											   (requestR[154] ?
											      6'd27 :
											      (requestR[153] ?
												 6'd28 :
												 (requestR[152] ?
												    6'd29 :
												    (requestR[151] ?
												       6'd30 :
												       (requestR[150] ?
													  6'd31 :
													  (requestR[149] ?
													     6'd32 :
													     (requestR[148] ?
														6'd33 :
														(requestR[147] ?
														   6'd34 :
														   (requestR[146] ?
														      6'd35 :
														      (requestR[145] ?
															 6'd36 :
															 (requestR[144] ?
															    6'd37 :
															    (requestR[143] ?
															       6'd38 :
															       (requestR[142] ?
																  6'd39 :
																  (requestR[141] ?
																     6'd40 :
																     (requestR[140] ?
																	6'd41 :
																	(requestR[139] ?
																	   6'd42 :
																	   (requestR[138] ?
																	      6'd43 :
																	      (requestR[137] ?
																		 6'd44 :
																		 (requestR[136] ?
																		    6'd45 :
																		    (requestR[135] ?
																		       6'd46 :
																		       (requestR[134] ?
																			  6'd47 :
																			  (requestR[133] ?
																			     6'd48 :
																			     (requestR[132] ?
																				6'd49 :
																				(requestR[131] ?
																				   6'd50 :
																				   (requestR[130] ?
																				      6'd51 :
																				      (requestR[129] ?
																					 6'd52 :
																					 (requestR[128] ?
																					    6'd53 :
																					    6'd57)))))))))))))))))))))))))))))))))))))))))))))))))))) :
		6'd1) -
	     6'd1 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2935 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ?
		  IF_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_8_ETC___d2915 :
		  requestR[191]) :
	       (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ?
		  IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2933 :
		  requestR[191]) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2986 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2968 :
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 &&
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[4] ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2997 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2993 :
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 &&
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 &&
	       _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982[3] ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3013 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3005 :
	       !SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3011 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3026 =
	     (requestR[190:180] == 11'd0) ?
	       _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d3020 :
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 &&
	       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3024 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3039 =
	     (requestR[190:180] == 11'd0) ?
	       NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3033 :
	       !SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ||
	       IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d3037 ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d1770 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0) ?
	       IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699 :
	       ((requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1768) ;
  assign IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d2893 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       _theResult___snd_fst_sfd__h57157 :
	       _theResult___fst_sfd__h100102 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007 =
	     sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 ||
	     sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 == 23'd0 ||
	     (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0) &&
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968[19] ||
	      NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970 &&
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d989 &&
	      x__h18552[56:25] == 32'hFFFFFFFF) ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1018 =
	     { IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007,
	       3'd0,
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1012 } ==
	     5'd0 ||
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1042 =
	     sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 &&
	     !sV1_sfd__h1280[22] &&
	     sV2_exp__h1396 == 8'd255 &&
	     sV2_sfd__h1397 != 23'd0 &&
	     !sV2_sfd__h1397[22] ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1052 =
	     sV1_exp__h1279 == 8'd0 && sV1_sfd__h1280 == 23'd0 &&
	     requestR[191:160] == 32'hFFFFFFFF &&
	     requestR[159] &&
	     sV2_exp__h1396 == 8'd0 &&
	     sV2_sfd__h1397 == 23'd0 &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065 =
	     sV1_exp__h1279 < sV2_exp__h1396 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 =
	     sV1_exp__h1279 == sV2_exp__h1396 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067 =
	     sV1_sfd__h1280 < sV2_sfd__h1397 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070 =
	     sV1_exp__h1279 <= sV2_exp__h1396 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072 =
	     sV1_sfd__h1280 <= sV2_sfd__h1397 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1090 =
	     sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 &&
	     !sV1_sfd__h1280[22] ||
	     sV2_exp__h1396 == 8'd255 && sV2_sfd__h1397 != 23'd0 &&
	     !sV2_sfd__h1397[22] ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1090 ||
	     sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280[22] ||
	     sV2_exp__h1396 == 8'd255 && sV2_sfd__h1397[22] ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1142 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070 &&
	     (!IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 ||
	      IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072) &&
	     !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065 &&
	     (!IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 ||
	      !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067) ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1146 =
	     sV1_exp__h1279 == 8'd0 && sV1_sfd__h1280 == 23'd0 &&
	     sV2_exp__h1396 == 8'd0 &&
	     sV2_sfd__h1397 == 23'd0 ||
	     NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_ETC___d1145 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:128] :
	       31'h7FC00000 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d864 =
	     sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 ||
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) &&
	     sV1_exp__h1279 == 8'd255 &&
	     sV1_sfd__h1280 == 23'd0 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d865 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'h80000000 :
	       32'h7FFFFFFF ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868 =
	     sV1_exp__h1279 - 8'd127 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       -b__h16746 :
	       b__h16746 ;
  assign IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d999 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       32'd0 :
	       ((sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 == 23'd0) ?
		  32'hFFFFFFFF :
		  IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d997) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1728 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h50760 == 2'b10) ?
		  IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[53] :
		  guard__h50760 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h50760 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[85] &&
		  guard__h50760 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1760 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h51314 == 2'b10) ?
		  x__h51503[54] :
		  guard__h51314 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h51314 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h51503[85] &&
		  guard__h51314 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1823 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h52395 == 2'b10) ?
		  x__h52616[54] :
		  guard__h52395 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h52395 != 2'd0 ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d894 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h16679 == 2'b10) ?
		  IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[24] :
		  guard__h16679 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h16679 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[56] &&
		  guard__h16679 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d926 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h17233 == 2'b10) ?
		  x__h17422[25] :
		  guard__h17233 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h17233 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h17422[56] &&
		  guard__h17233 != 2'd0) ;
  assign IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d989 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h18331 == 2'b10) ?
		  x__h18552[25] :
		  guard__h18331 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h18331 != 2'd0 ;
  assign IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d1534 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd55))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d662 =
	     requestR[159] ?
	       6'd0 :
	       (requestR[158] ?
		  6'd1 :
		  (requestR[157] ?
		     6'd2 :
		     (requestR[156] ?
			6'd3 :
			(requestR[155] ?
			   6'd4 :
			   (requestR[154] ?
			      6'd5 :
			      (requestR[153] ?
				 6'd6 :
				 (requestR[152] ?
				    6'd7 :
				    (requestR[151] ?
				       6'd8 :
				       (requestR[150] ?
					  6'd9 :
					  (requestR[149] ?
					     6'd10 :
					     (requestR[148] ?
						6'd11 :
						(requestR[147] ?
						   6'd12 :
						   (requestR[146] ?
						      6'd13 :
						      (requestR[145] ?
							 6'd14 :
							 (requestR[144] ?
							    6'd15 :
							    (requestR[143] ?
							       6'd16 :
							       (requestR[142] ?
								  6'd17 :
								  (requestR[141] ?
								     6'd18 :
								     (requestR[140] ?
									6'd19 :
									(requestR[139] ?
									   6'd20 :
									   (requestR[138] ?
									      6'd21 :
									      (requestR[137] ?
										 6'd22 :
										 (requestR[136] ?
										    6'd23 :
										    (requestR[135] ?
										       6'd24 :
										       (requestR[134] ?
											  6'd25 :
											  (requestR[133] ?
											     6'd26 :
											     (requestR[132] ?
												6'd27 :
												(requestR[131] ?
												   6'd28 :
												   (requestR[130] ?
												      6'd29 :
												      (requestR[129] ?
													 6'd30 :
													 (requestR[128] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d514 =
	     (sfd__h3848[31] || sfd__h3848[30] || sfd__h3848[29] ||
	      sfd__h3848[28] ||
	      sfd__h3848[27] ||
	      sfd__h3848[26] ||
	      sfd__h3848[25] ||
	      sfd__h3848[24] ||
	      sfd__h3848[23] ||
	      sfd__h3848[22] ||
	      sfd__h3848[21] ||
	      sfd__h3848[20] ||
	      sfd__h3848[19] ||
	      sfd__h3848[18] ||
	      sfd__h3848[17] ||
	      sfd__h3848[16] ||
	      sfd__h3848[15] ||
	      sfd__h3848[14] ||
	      sfd__h3848[13] ||
	      sfd__h3848[12] ||
	      sfd__h3848[11] ||
	      sfd__h3848[10] ||
	      sfd__h3848[9] ||
	      sfd__h3848[8] ||
	      sfd__h3848[7] ||
	      sfd__h3848[6] ||
	      sfd__h3848[5] ||
	      sfd__h3848[4] ||
	      sfd__h3848[3] ||
	      sfd__h3848[2] ||
	      sfd__h3848[1] ||
	      sfd__h3848[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 &&
	      _theResult___fst_exp__h9831 == 8'd255 &&
	      _theResult___fst_sfd__h9832 == 23'd0) ;
  assign IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d517 =
	     (sfd__h3848[31] || sfd__h3848[30] || sfd__h3848[29] ||
	      sfd__h3848[28] ||
	      sfd__h3848[27] ||
	      sfd__h3848[26] ||
	      sfd__h3848[25] ||
	      sfd__h3848[24] ||
	      sfd__h3848[23] ||
	      sfd__h3848[22] ||
	      sfd__h3848[21] ||
	      sfd__h3848[20] ||
	      sfd__h3848[19] ||
	      sfd__h3848[18] ||
	      sfd__h3848[17] ||
	      sfd__h3848[16] ||
	      sfd__h3848[15] ||
	      sfd__h3848[14] ||
	      sfd__h3848[13] ||
	      sfd__h3848[12] ||
	      sfd__h3848[11] ||
	      sfd__h3848[10] ||
	      sfd__h3848[9] ||
	      sfd__h3848[8] ||
	      sfd__h3848[7] ||
	      sfd__h3848[6] ||
	      sfd__h3848[5] ||
	      sfd__h3848[4] ||
	      sfd__h3848[3] ||
	      sfd__h3848[2] ||
	      sfd__h3848[1] ||
	      sfd__h3848[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 ;
  assign IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d526 =
	     (sfd__h3848[31] || sfd__h3848[30] || sfd__h3848[29] ||
	      sfd__h3848[28] ||
	      sfd__h3848[27] ||
	      sfd__h3848[26] ||
	      sfd__h3848[25] ||
	      sfd__h3848[24] ||
	      sfd__h3848[23] ||
	      sfd__h3848[22] ||
	      sfd__h3848[21] ||
	      sfd__h3848[20] ||
	      sfd__h3848[19] ||
	      sfd__h3848[18] ||
	      sfd__h3848[17] ||
	      sfd__h3848[16] ||
	      sfd__h3848[15] ||
	      sfd__h3848[14] ||
	      sfd__h3848[13] ||
	      sfd__h3848[12] ||
	      sfd__h3848[11] ||
	      sfd__h3848[10] ||
	      sfd__h3848[9] ||
	      sfd__h3848[8] ||
	      sfd__h3848[7] ||
	      sfd__h3848[6] ||
	      sfd__h3848[5] ||
	      sfd__h3848[4] ||
	      sfd__h3848[3] ||
	      sfd__h3848[2] ||
	      sfd__h3848[1] ||
	      sfd__h3848[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d523 ;
  assign IF_requestR_3_BIT_191_276_THEN_2147483648_ELSE_ETC___d1699 =
	     requestR[191] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711 =
	     requestR[191] ? -b__h50827 : b__h50827 ;
  assign IF_requestR_3_BIT_191_276_THEN_NOT_requestR_3__ETC___d3883 =
	     requestR[191] ?
	       !requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872 ||
	       requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 &&
	       !requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875 :
	       requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879 ||
	       requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 &&
	       requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880 ;
  assign IF_sfd___34964_BIT_7_THEN_2_ELSE_0__q21 =
	     sfd___3__h14964[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___34964_BIT_8_THEN_2_ELSE_0__q20 =
	     sfd___3__h14964[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3752_BIT_7_THEN_2_ELSE_0__q7 =
	     sfd___3__h8752[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3752_BIT_8_THEN_2_ELSE_0__q6 =
	     sfd___3__h8752[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38643_BIT_1_THEN_2_ELSE_0__q48 =
	     sfd___3__h48643[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38643_BIT_2_THEN_2_ELSE_0__q47 =
	     sfd___3__h48643[2] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38912_BIT_1_THEN_2_ELSE_0__q34 =
	     sfd___3__h38912[1] ? 2'd2 : 2'd0 ;
  assign IF_sfd___38912_BIT_2_THEN_2_ELSE_0__q33 =
	     sfd___3__h38912[2] ? 2'd2 : 2'd0 ;
  assign IF_sfdin0787_BIT_33_THEN_2_ELSE_0__q66 =
	     sfdin__h90787[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin2934_BIT_33_THEN_2_ELSE_0__q61 =
	     sfdin__h72934[33] ? 2'd2 : 2'd0 ;
  assign IF_sfdin32157_BIT_4_THEN_2_ELSE_0__q98 =
	     sfdin__h132157[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd1577_BIT_33_THEN_2_ELSE_0__q63 =
	     _theResult___snd__h81577[33] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd22541_BIT_4_THEN_2_ELSE_0__q95 =
	     _theResult___snd__h122541[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd40940_BIT_4_THEN_2_ELSE_0__q101 =
	     _theResult___snd__h140940[4] ? 2'd2 : 2'd0 ;
  assign IF_theResult___snd9454_BIT_33_THEN_2_ELSE_0__q69 =
	     _theResult___snd__h99454[33] ? 2'd2 : 2'd0 ;
  assign IF_x1503_BIT_53_THEN_2_ELSE_0__q58 = x__h51503[53] ? 2'd2 : 2'd0 ;
  assign IF_x2616_BIT_53_THEN_2_ELSE_0__q59 = x__h52616[53] ? 2'd2 : 2'd0 ;
  assign IF_x7422_BIT_24_THEN_2_ELSE_0__q31 = x__h17422[24] ? 2'd2 : 2'd0 ;
  assign IF_x8552_BIT_24_THEN_2_ELSE_0__q32 = x__h18552[24] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 =
	     -{ {12{IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868[7]}},
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868 } ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d902 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d902 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968 =
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d902 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970 =
	     (NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 =
	     -{ {13{requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702[10]}},
		requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702 } ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1736 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 +
	     24'd32 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1736 -
	     24'd2 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802 =
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1736 -
	     24'd1 ;
  assign NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804 =
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802 ^
	      24'h800000) <=
	     24'd8388640 ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3005 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[2] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[2]) ;
  assign NOT_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179__ETC___d3033 =
	     !_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ||
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[0] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[0]) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1012 =
	     (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0) &&
	     !NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968[19] &&
	     (!NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d970 ||
	      guard__h18331 != 2'd0) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1079 =
	     (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0 ||
	      sV2_exp__h1396 != 8'd0 ||
	      sV2_sfd__h1397 != 23'd0) &&
	     requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_9_A_ETC___d1078 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080 =
	     (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	     (sV2_exp__h1396 != 8'd255 || sV2_sfd__h1397 == 23'd0) &&
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1079 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1141 =
	     !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1065 &&
	     (!IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 ||
	      !IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1067) &&
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1070 &&
	     (!IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1066 ||
	      IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1072) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1147 =
	     (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	     (sV2_exp__h1396 != 8'd255 || sV2_sfd__h1397 == 23'd0) &&
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1146 ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1167 =
	     (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	     (sV2_exp__h1396 != 8'd255 || sV2_sfd__h1397 == 23'd0) &&
	     (requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_9_A_ETC___d1078 ||
	      IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1146) ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143 =
	     !sV1_sfd__h1280[21] && !sV1_sfd__h1280[20] &&
	     !sV1_sfd__h1280[19] &&
	     !sV1_sfd__h1280[18] &&
	     !sV1_sfd__h1280[17] &&
	     !sV1_sfd__h1280[16] &&
	     !sV1_sfd__h1280[15] &&
	     !sV1_sfd__h1280[14] &&
	     !sV1_sfd__h1280[13] &&
	     !sV1_sfd__h1280[12] &&
	     !sV1_sfd__h1280[11] &&
	     !sV1_sfd__h1280[10] &&
	     !sV1_sfd__h1280[9] &&
	     !sV1_sfd__h1280[8] &&
	     !sV1_sfd__h1280[7] &&
	     !sV1_sfd__h1280[6] &&
	     !sV1_sfd__h1280[5] &&
	     !sV1_sfd__h1280[4] &&
	     !sV1_sfd__h1280[3] &&
	     !sV1_sfd__h1280[2] &&
	     !sV1_sfd__h1280[1] &&
	     !sV1_sfd__h1280[0] ;
  assign NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d947 =
	     (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d870 ==
	       20'd1048545) ?
		_theResult_____2__h16681[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903[19] ||
		NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d905 &&
		IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d926 &&
		x__h17422[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_3_BIT_159_0_THEN_NEG_requestR__ETC___d311 =
	     !sfd__h3848[31] && !sfd__h3848[30] && !sfd__h3848[29] &&
	     !sfd__h3848[28] &&
	     !sfd__h3848[27] &&
	     !sfd__h3848[26] &&
	     !sfd__h3848[25] &&
	     !sfd__h3848[24] &&
	     !sfd__h3848[23] &&
	     !sfd__h3848[22] &&
	     !sfd__h3848[21] &&
	     !sfd__h3848[20] &&
	     !sfd__h3848[19] &&
	     !sfd__h3848[18] &&
	     !sfd__h3848[17] &&
	     !sfd__h3848[16] &&
	     !sfd__h3848[15] &&
	     !sfd__h3848[14] &&
	     !sfd__h3848[13] &&
	     !sfd__h3848[12] &&
	     !sfd__h3848[11] &&
	     !sfd__h3848[10] &&
	     !sfd__h3848[9] &&
	     !sfd__h3848[8] &&
	     !sfd__h3848[7] &&
	     !sfd__h3848[6] &&
	     !sfd__h3848[5] &&
	     !sfd__h3848[4] &&
	     !sfd__h3848[3] &&
	     !sfd__h3848[2] &&
	     !sfd__h3848[1] &&
	     !sfd__h3848[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 ;
  assign NOT_requestR_3_BITS_159_TO_128_72_EQ_0_73_74_A_ETC___d830 =
	     requestR[159:128] != 32'd0 &&
	     (requestR[159] ||
	      requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819) &&
	     (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 ||
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667 &&
	      !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 &&
	      _theResult___fst_exp__h16038 == 8'd255 &&
	      _theResult___fst_sfd__h16039 == 23'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1781 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     ((NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1704 ==
	       24'd16777185) ?
		_theResult_____2__h50762[32:31] != 2'b11 :
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737[23] ||
		NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1739 &&
		IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1760 &&
		x__h51503[85:54] == 32'h7FFFFFFF) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1846 =
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     !NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802[23] &&
	     (!NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804 ||
	      guard__h52395 != 2'd0) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0 ||
	      requestR[126:116] != 11'd0 ||
	      requestR[115:64] != 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_276_THEN_NOT_requestR_3__ETC___d3883) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3956 =
	     (requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	     (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	     (requestR[191] && !requestR[127] ||
	      (requestR[191] || !requestR[127]) &&
	      IF_requestR_3_BIT_191_276_THEN_NOT_requestR_3__ETC___d3883 ||
	      requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3935) ;
  assign NOT_requestR_3_BITS_190_TO_180_689_ULT_request_ETC___d3931 =
	     !requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879 &&
	     (!requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 ||
	      !requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880) &&
	     requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872 &&
	     (!requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 ||
	      requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875) ;
  assign NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_ETC___d1145 =
	     (requestR[191:160] != 32'hFFFFFFFF || !requestR[159] ||
	      requestR[127:96] == 32'hFFFFFFFF && requestR[95]) &&
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     ((requestR[191:160] != 32'hFFFFFFFF || !requestR[159]) ?
		NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1141 :
		IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1142) ;
  assign NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628 =
	     !requestR[158] && !requestR[157] && !requestR[156] &&
	     !requestR[155] &&
	     !requestR[154] &&
	     !requestR[153] &&
	     !requestR[152] &&
	     !requestR[151] &&
	     !requestR[150] &&
	     !requestR[149] &&
	     !requestR[148] &&
	     !requestR[147] &&
	     !requestR[146] &&
	     !requestR[145] &&
	     !requestR[144] &&
	     !requestR[143] &&
	     !requestR[142] &&
	     !requestR[141] &&
	     !requestR[140] &&
	     !requestR[139] &&
	     !requestR[138] &&
	     !requestR[137] &&
	     !requestR[136] &&
	     !requestR[135] &&
	     !requestR[134] &&
	     !requestR[133] &&
	     !requestR[132] &&
	     !requestR[131] &&
	     !requestR[130] &&
	     !requestR[129] &&
	     !requestR[128] ;
  assign NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276 =
	     !requestR[179] && !requestR[178] && !requestR[177] &&
	     !requestR[176] &&
	     !requestR[175] &&
	     !requestR[174] &&
	     !requestR[173] &&
	     !requestR[172] &&
	     !requestR[171] &&
	     !requestR[170] &&
	     !requestR[169] &&
	     !requestR[168] &&
	     !requestR[167] &&
	     !requestR[166] &&
	     !requestR[165] &&
	     !requestR[164] &&
	     !requestR[163] &&
	     !requestR[162] &&
	     !requestR[161] &&
	     !requestR[160] &&
	     !requestR[159] &&
	     NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628 ;
  assign NOT_verbosity_ULE_1_4___d25 = verbosity > 4'd1 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 =
	     { {4{IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868[7]}},
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d868 } ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 ^
	      12'h800) <=
	     12'd3071 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 ^
	      12'h800) <
	     12'd1026 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 +
	     12'd1023 ;
  assign SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q99 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] -
	     11'd1023 ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 =
	     { requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702[10],
	       requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702 } ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 =
	     (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 ^
	      12'h800) <=
	     12'd2175 ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 =
	     (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 ^
	      12'h800) <
	     12'd1922 ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 +
	     12'd127 ;
  assign SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q67 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] -
	     8'd127 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2171 =
	     ({ 3'd0,
		IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953 =
	     { 3'd0,
	       _theResult___fst_exp__h72940 == 8'd0 &&
	       (sfdin__h72934[56:34] == 23'd0 || guard__h64843 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h73567 == 8'd255 &&
	       _theResult___fst_sfd__h73568 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h72940 != 8'd255 &&
	       guard__h64843 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3492 =
	     ({ 6'd0,
		IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490 } ^
	      12'h800) <=
	     12'd2048 ;
  assign _0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3777 =
	     { 3'd0,
	       _theResult___fst_exp__h132163 == 11'd0 &&
	       (sfdin__h132157[56:5] == 52'd0 || guard__h123937 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h132993 == 11'd2047 &&
	       _theResult___fst_sfd__h132994 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h132163 != 11'd2047 &&
	       guard__h123937 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2655 =
	     ({ 3'd0,
		IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653 } ^
	      9'h100) <=
	     9'd256 ;
  assign _0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2982 =
	     { 3'd0,
	       _theResult___fst_exp__h90793 == 8'd0 &&
	       (sfdin__h90787[56:34] == 23'd0 || guard__h82567 != 2'b0),
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h91420 == 8'd255 &&
	       _theResult___fst_sfd__h91421 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h90793 != 8'd255 &&
	       guard__h82567 != 2'b0 } ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3172 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 } ^
	      12'h800) <=
	     12'd2944 ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3565 =
	     ({ 6'd0,
		IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 } ^
	      12'h800) <=
	     (IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3564 ^
	      12'h800) ;
  assign _0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3760 =
	     { 3'd0,
	       _theResult___fst_exp__h122590 == 11'd0 &&
	       guard__h114629 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h123346 == 11'd2047 &&
	       _theResult___fst_sfd__h123347 == 52'd0,
	       1'd0,
	       _theResult___fst_exp__h122590 != 11'd2047 &&
	       guard__h114629 != 2'b0 } ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2333 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 } ^
	      9'h100) <=
	     9'd384 ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2728 =
	     ({ 3'd0,
		IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 } ^
	      9'h100) <=
	     (IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2727 ^
	      9'h100) ;
  assign _0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965 =
	     { 3'd0,
	       _theResult___fst_exp__h81626 == 8'd0 && guard__h73578 != 2'b0,
	       1'd0 } |
	     { 2'd0,
	       _theResult___fst_exp__h82179 == 8'd255 &&
	       _theResult___fst_sfd__h82180 == 23'd0,
	       1'd0,
	       _theResult___fst_exp__h81626 != 8'd255 &&
	       guard__h73578 != 2'b0 } ;
  assign _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_8_ETC___d3248 =
	     b__h16746 >>
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244 ;
  assign _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_689__ETC___d2413 =
	     sfd__h57203 >>
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409 ;
  assign _1_CONCAT_DONTCARE_CONCAT_requestR_3_BITS_63_TO_ETC___d88 =
	     { 33'h1AAAAAAAA,
	       requestR[63:32] == 32'hFFFFFFFF && requestR[31],
	       (requestR[63:32] == 32'hFFFFFFFF) ?
		 requestR[30:0] :
		 31'h7FC00000 } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1935 =
	     12'd3074 -
	     { 6'd0,
	       requestR[179] ?
		 6'd0 :
		 (requestR[178] ?
		    6'd1 :
		    (requestR[177] ?
		       6'd2 :
		       (requestR[176] ?
			  6'd3 :
			  (requestR[175] ?
			     6'd4 :
			     (requestR[174] ?
				6'd5 :
				(requestR[173] ?
				   6'd6 :
				   (requestR[172] ?
				      6'd7 :
				      (requestR[171] ?
					 6'd8 :
					 (requestR[170] ?
					    6'd9 :
					    (requestR[169] ?
					       6'd10 :
					       (requestR[168] ?
						  6'd11 :
						  (requestR[167] ?
						     6'd12 :
						     (requestR[166] ?
							6'd13 :
							(requestR[165] ?
							   6'd14 :
							   (requestR[164] ?
							      6'd15 :
							      (requestR[163] ?
								 6'd16 :
								 (requestR[162] ?
								    6'd17 :
								    (requestR[161] ?
								       6'd18 :
								       (requestR[160] ?
									  6'd19 :
									  (requestR[159] ?
									     6'd20 :
									     (requestR[158] ?
										6'd21 :
										(requestR[157] ?
										   6'd22 :
										   (requestR[156] ?
										      6'd23 :
										      (requestR[155] ?
											 6'd24 :
											 (requestR[154] ?
											    6'd25 :
											    (requestR[153] ?
											       6'd26 :
											       (requestR[152] ?
												  6'd27 :
												  (requestR[151] ?
												     6'd28 :
												     (requestR[150] ?
													6'd29 :
													(requestR[149] ?
													   6'd30 :
													   (requestR[148] ?
													      6'd31 :
													      (requestR[147] ?
														 6'd32 :
														 (requestR[146] ?
														    6'd33 :
														    (requestR[145] ?
														       6'd34 :
														       (requestR[144] ?
															  6'd35 :
															  (requestR[143] ?
															     6'd36 :
															     (requestR[142] ?
																6'd37 :
																(requestR[141] ?
																   6'd38 :
																   (requestR[140] ?
																      6'd39 :
																      (requestR[139] ?
																	 6'd40 :
																	 (requestR[138] ?
																	    6'd41 :
																	    (requestR[137] ?
																	       6'd42 :
																	       (requestR[136] ?
																		  6'd43 :
																		  (requestR[135] ?
																		     6'd44 :
																		     (requestR[134] ?
																			6'd45 :
																			(requestR[133] ?
																			   6'd46 :
																			   (requestR[132] ?
																			      6'd47 :
																			      (requestR[131] ?
																				 6'd48 :
																				 (requestR[130] ?
																				    6'd49 :
																				    (requestR[129] ?
																				       6'd50 :
																				       (requestR[128] ?
																					  6'd51 :
																					  6'd52))))))))))))))))))))))))))))))))))))))))))))))))))) } ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1935 ^
	      12'h800) <=
	     12'd2175 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 =
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1935 ^
	      12'h800) <
	     12'd1922 ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2968 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[4] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[4]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d2993 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[3] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[3]) ;
  assign _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d3020 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 &&
	     (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
		_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2953[1] :
		_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2965[1]) ;
  assign _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244 =
	     12'd3074 -
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3241 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 =
	     (12'd32 -
	      { 6'd0,
		IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d1318 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d303 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 =
	     (12'd32 -
	      { 6'd0,
		IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d1534 }) -
	     12'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 ^
	      12'h800) <=
	     12'd3071 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 ^
	      12'h800) <
	     12'd974 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 ^
	      12'h800) <
	     12'd1026 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 =
	     (9'd32 -
	      { 3'd0,
		IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d662 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 =
	     (_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 ^
	      9'h100) <
	     9'd130 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3098 =
	     12'd3970 -
	     { 7'd0,
	       sV1_sfd__h1280[22] ?
		 5'd0 :
		 (sV1_sfd__h1280[21] ?
		    5'd1 :
		    (sV1_sfd__h1280[20] ?
		       5'd2 :
		       (sV1_sfd__h1280[19] ?
			  5'd3 :
			  (sV1_sfd__h1280[18] ?
			     5'd4 :
			     (sV1_sfd__h1280[17] ?
				5'd5 :
				(sV1_sfd__h1280[16] ?
				   5'd6 :
				   (sV1_sfd__h1280[15] ?
				      5'd7 :
				      (sV1_sfd__h1280[14] ?
					 5'd8 :
					 (sV1_sfd__h1280[13] ?
					    5'd9 :
					    (sV1_sfd__h1280[12] ?
					       5'd10 :
					       (sV1_sfd__h1280[11] ?
						  5'd11 :
						  (sV1_sfd__h1280[10] ?
						     5'd12 :
						     (sV1_sfd__h1280[9] ?
							5'd13 :
							(sV1_sfd__h1280[8] ?
							   5'd14 :
							   (sV1_sfd__h1280[7] ?
							      5'd15 :
							      (sV1_sfd__h1280[6] ?
								 5'd16 :
								 (sV1_sfd__h1280[5] ?
								    5'd17 :
								    (sV1_sfd__h1280[4] ?
								       5'd18 :
								       (sV1_sfd__h1280[3] ?
									  5'd19 :
									  (sV1_sfd__h1280[2] ?
									     5'd20 :
									     (sV1_sfd__h1280[1] ?
										5'd21 :
										(sV1_sfd__h1280[0] ?
										   5'd22 :
										   5'd23)))))))))))))))))))))) } ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3098 ^
	      12'h800) <=
	     12'd3071 ;
  assign _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 =
	     (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3098 ^
	      12'h800) <
	     12'd1026 ;
  assign _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409 =
	     12'd3970 -
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2406 ;
  assign _theResult_____2__h16681 =
	     IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d894 ?
	       out1___1__h17173 :
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[56:24] ;
  assign _theResult_____2__h50762 =
	     IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1728 ?
	       out1___1__h51254 :
	       IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[85:53] ;
  assign _theResult____h123927 =
	     ((_3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244 ^
	       12'h800) <
	      12'd2105) ?
	       result__h124540 :
	       ((value__h16748 == 25'd0) ? b__h16746 : 57'd1) ;
  assign _theResult____h64833 =
	     (value__h50829 == 54'd0) ? sfd__h57203 : 57'd1 ;
  assign _theResult____h82557 =
	     ((_3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409 ^
	       12'h800) <
	      12'd2105) ?
	       result__h83170 :
	       _theResult____h64833 ;
  assign _theResult___exp__h123245 =
	     sfd__h122608[53] ?
	       ((_theResult___fst_exp__h122590 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h141810) :
	       ((_theResult___fst_exp__h122590 == 11'd0 &&
		 sfd__h122608[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h122590) ;
  assign _theResult___exp__h132892 =
	     sfd__h132255[53] ?
	       ((_theResult___fst_exp__h132163 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h141840) :
	       ((_theResult___fst_exp__h132163 == 11'd0 &&
		 sfd__h132255[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h132163) ;
  assign _theResult___exp__h141674 =
	     sfd__h141013[53] ?
	       ((_theResult___fst_exp__h140994 == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h141864) :
	       ((_theResult___fst_exp__h140994 == 11'd0 &&
		 sfd__h141013[53:52] == 2'b01) ?
		  11'd1 :
		  _theResult___fst_exp__h140994) ;
  assign _theResult___exp__h15387 =
	     (sfd__h14991[24] || sfd__h14991[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h15939 =
	     sfd__h15530[24] ?
	       ((x__h15515[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h16077) :
	       ((x__h15515[7:0] == 8'd0 && sfd__h15530[24:23] == 2'b01) ?
		  8'd1 :
		  x__h15515[7:0]) ;
  assign _theResult___exp__h39538 =
	     (sfd__h38939[53] || sfd__h38939[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h40294 =
	     sfd__h39682[53] ?
	       ((x__h39667[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h40437) :
	       ((x__h39667[10:0] == 11'd0 && sfd__h39682[53:52] == 2'b01) ?
		  11'd1 :
		  x__h39667[10:0]) ;
  assign _theResult___exp__h49269 =
	     (sfd__h48670[53] || sfd__h48670[53:52] == 2'b01) ?
	       11'd1 :
	       11'd0 ;
  assign _theResult___exp__h50024 =
	     sfd__h49412[53] ?
	       ((x__h49397[10:0] == 11'd2046) ?
		  11'd2047 :
		  din_inc___2_exp__h50162) :
	       ((x__h49397[10:0] == 11'd0 && sfd__h49412[53:52] == 2'b01) ?
		  11'd1 :
		  x__h49397[10:0]) ;
  assign _theResult___exp__h73466 =
	     sfd__h73032[24] ?
	       ((_theResult___fst_exp__h72940 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h100117) :
	       ((_theResult___fst_exp__h72940 == 8'd0 &&
		 sfd__h73032[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h72940) ;
  assign _theResult___exp__h82078 =
	     sfd__h81644[24] ?
	       ((_theResult___fst_exp__h81626 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h100141) :
	       ((_theResult___fst_exp__h81626 == 8'd0 &&
		 sfd__h81644[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h81626) ;
  assign _theResult___exp__h91319 =
	     sfd__h90885[24] ?
	       ((_theResult___fst_exp__h90793 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h100171) :
	       ((_theResult___fst_exp__h90793 == 8'd0 &&
		 sfd__h90885[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h90793) ;
  assign _theResult___exp__h9178 =
	     (sfd__h8779[24] || sfd__h8779[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h9731 =
	     sfd__h9322[24] ?
	       ((x__h9307[7:0] == 8'd254) ? 8'd255 : din_inc___2_exp__h9874) :
	       ((x__h9307[7:0] == 8'd0 && sfd__h9322[24:23] == 2'b01) ?
		  8'd1 :
		  x__h9307[7:0]) ;
  assign _theResult___exp__h99985 =
	     sfd__h99527[24] ?
	       ((_theResult___fst_exp__h99508 == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h100195) :
	       ((_theResult___fst_exp__h99508 == 8'd0 &&
		 sfd__h99527[24:23] == 2'b01) ?
		  8'd1 :
		  _theResult___fst_exp__h99508) ;
  assign _theResult___fst_exp__h100083 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q77 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 ;
  assign _theResult___fst_exp__h100086 =
	     (_theResult___fst_exp__h99508 == 8'd255) ?
	       _theResult___fst_exp__h99508 :
	       _theResult___fst_exp__h100083 ;
  assign _theResult___fst_exp__h100095 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ?
		  _theResult___snd_fst_exp__h82182 :
		  _theResult___fst_exp__h64815) :
	       (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ?
		  _theResult___snd_fst_exp__h100089 :
		  _theResult___fst_exp__h64815) ;
  assign _theResult___fst_exp__h100098 =
	     (requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0) ?
	       8'd0 :
	       _theResult___fst_exp__h100095 ;
  assign _theResult___fst_exp__h107517 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       11'd2047 :
	       CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 ;
  assign _theResult___fst_exp__h122581 =
	     11'd897 -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 } ;
  assign _theResult___fst_exp__h122587 =
	     (sV1_exp__h1279 == 8'd0 && !sV1_sfd__h1280[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3172) ?
	       11'd0 :
	       _theResult___fst_exp__h122581 ;
  assign _theResult___fst_exp__h122590 =
	     (sV1_exp__h1279 == 8'd0) ?
	       _theResult___fst_exp__h122587 :
	       11'd897 ;
  assign _theResult___fst_exp__h123343 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q103 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 ;
  assign _theResult___fst_exp__h123346 =
	     (_theResult___fst_exp__h122590 == 11'd2047) ?
	       _theResult___fst_exp__h122590 :
	       _theResult___fst_exp__h123343 ;
  assign _theResult___fst_exp__h132163 =
	     _theResult____h123927[56] ?
	       11'd2 :
	       _theResult___fst_exp__h132237 ;
  assign _theResult___fst_exp__h132228 =
	     11'd0 -
	     { 5'd0,
	       IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490 } ;
  assign _theResult___fst_exp__h132234 =
	     (!_theResult____h123927[56] && !_theResult____h123927[55] &&
	      !_theResult____h123927[54] &&
	      !_theResult____h123927[53] &&
	      !_theResult____h123927[52] &&
	      !_theResult____h123927[51] &&
	      !_theResult____h123927[50] &&
	      !_theResult____h123927[49] &&
	      !_theResult____h123927[48] &&
	      !_theResult____h123927[47] &&
	      !_theResult____h123927[46] &&
	      !_theResult____h123927[45] &&
	      !_theResult____h123927[44] &&
	      !_theResult____h123927[43] &&
	      !_theResult____h123927[42] &&
	      !_theResult____h123927[41] &&
	      !_theResult____h123927[40] &&
	      !_theResult____h123927[39] &&
	      !_theResult____h123927[38] &&
	      !_theResult____h123927[37] &&
	      !_theResult____h123927[36] &&
	      !_theResult____h123927[35] &&
	      !_theResult____h123927[34] &&
	      !_theResult____h123927[33] &&
	      !_theResult____h123927[32] &&
	      !_theResult____h123927[31] &&
	      !_theResult____h123927[30] &&
	      !_theResult____h123927[29] &&
	      !_theResult____h123927[28] &&
	      !_theResult____h123927[27] &&
	      !_theResult____h123927[26] &&
	      !_theResult____h123927[25] &&
	      !_theResult____h123927[24] &&
	      !_theResult____h123927[23] &&
	      !_theResult____h123927[22] &&
	      !_theResult____h123927[21] &&
	      !_theResult____h123927[20] &&
	      !_theResult____h123927[19] &&
	      !_theResult____h123927[18] &&
	      !_theResult____h123927[17] &&
	      !_theResult____h123927[16] &&
	      !_theResult____h123927[15] &&
	      !_theResult____h123927[14] &&
	      !_theResult____h123927[13] &&
	      !_theResult____h123927[12] &&
	      !_theResult____h123927[11] &&
	      !_theResult____h123927[10] &&
	      !_theResult____h123927[9] &&
	      !_theResult____h123927[8] &&
	      !_theResult____h123927[7] &&
	      !_theResult____h123927[6] &&
	      !_theResult____h123927[5] &&
	      !_theResult____h123927[4] &&
	      !_theResult____h123927[3] &&
	      !_theResult____h123927[2] &&
	      !_theResult____h123927[1] &&
	      !_theResult____h123927[0] ||
	      !_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR_3_B_ETC___d3492) ?
	       11'd0 :
	       _theResult___fst_exp__h132228 ;
  assign _theResult___fst_exp__h132237 =
	     (!_theResult____h123927[56] && _theResult____h123927[55]) ?
	       11'd1 :
	       _theResult___fst_exp__h132234 ;
  assign _theResult___fst_exp__h132990 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q107 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 ;
  assign _theResult___fst_exp__h132993 =
	     (_theResult___fst_exp__h132163 == 11'd2047) ?
	       _theResult___fst_exp__h132163 :
	       _theResult___fst_exp__h132990 ;
  assign _theResult___fst_exp__h140946 =
	     (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] ==
	      11'd0) ?
	       11'd1 :
	       SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] ;
  assign _theResult___fst_exp__h140985 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC__q96[10:0] -
	     { 5'd0,
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 } ;
  assign _theResult___fst_exp__h140991 =
	     (sV1_exp__h1279 == 8'd0 && !sV1_sfd__h1280[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143 ||
	      !_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d3565) ?
	       11'd0 :
	       _theResult___fst_exp__h140985 ;
  assign _theResult___fst_exp__h140994 =
	     (sV1_exp__h1279 == 8'd0) ?
	       _theResult___fst_exp__h140991 :
	       _theResult___fst_exp__h140946 ;
  assign _theResult___fst_exp__h141772 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q105 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 ;
  assign _theResult___fst_exp__h141775 =
	     (_theResult___fst_exp__h140994 == 11'd2047) ?
	       _theResult___fst_exp__h140994 :
	       _theResult___fst_exp__h141772 ;
  assign _theResult___fst_exp__h141784 =
	     (sV1_exp__h1279 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ?
		  _theResult___snd_fst_exp__h123349 :
		  _theResult___fst_exp__h107517) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ?
		  _theResult___snd_fst_exp__h141778 :
		  _theResult___fst_exp__h107517) ;
  assign _theResult___fst_exp__h141787 =
	     (sV1_exp__h1279 == 8'd0 && sV1_sfd__h1280 == 23'd0) ?
	       11'd0 :
	       _theResult___fst_exp__h141784 ;
  assign _theResult___fst_exp__h15483 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4974_0b0_0_0b1_0_0b10_out_exp5390_0b_ETC__q22 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard4974_ETC__q24 ;
  assign _theResult___fst_exp__h16035 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_x5515_ETC__q26 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 ;
  assign _theResult___fst_exp__h16038 =
	     (x__h15515[7:0] == 8'd255) ?
	       x__h15515[7:0] :
	       _theResult___fst_exp__h16035 ;
  assign _theResult___fst_exp__h39635 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8922_0b0_0_0b1_0_0b10_out_exp9541_0b_ETC__q44 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 ;
  assign _theResult___fst_exp__h40391 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_x966_ETC__q40 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 ;
  assign _theResult___fst_exp__h40394 =
	     (x__h39667[10:0] == 11'd2047) ?
	       x__h39667[10:0] :
	       _theResult___fst_exp__h40391 ;
  assign _theResult___fst_exp__h49365 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8653_0b0_0_0b1_0_0b10_out_exp9272_0b_ETC__q49 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard8653_ETC__q51 ;
  assign _theResult___fst_exp__h50120 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_x939_ETC__q53 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 ;
  assign _theResult___fst_exp__h50123 =
	     (x__h49397[10:0] == 11'd2047) ?
	       x__h49397[10:0] :
	       _theResult___fst_exp__h50120 ;
  assign _theResult___fst_exp__h64815 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       8'd255 :
	       CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 ;
  assign _theResult___fst_exp__h72940 =
	     _theResult____h64833[56] ? 8'd2 : _theResult___fst_exp__h73014 ;
  assign _theResult___fst_exp__h73005 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169 } ;
  assign _theResult___fst_exp__h73011 =
	     (!_theResult____h64833[56] && !_theResult____h64833[55] &&
	      !_theResult____h64833[54] &&
	      !_theResult____h64833[53] &&
	      !_theResult____h64833[52] &&
	      !_theResult____h64833[51] &&
	      !_theResult____h64833[50] &&
	      !_theResult____h64833[49] &&
	      !_theResult____h64833[48] &&
	      !_theResult____h64833[47] &&
	      !_theResult____h64833[46] &&
	      !_theResult____h64833[45] &&
	      !_theResult____h64833[44] &&
	      !_theResult____h64833[43] &&
	      !_theResult____h64833[42] &&
	      !_theResult____h64833[41] &&
	      !_theResult____h64833[40] &&
	      !_theResult____h64833[39] &&
	      !_theResult____h64833[38] &&
	      !_theResult____h64833[37] &&
	      !_theResult____h64833[36] &&
	      !_theResult____h64833[35] &&
	      !_theResult____h64833[34] &&
	      !_theResult____h64833[33] &&
	      !_theResult____h64833[32] &&
	      !_theResult____h64833[31] &&
	      !_theResult____h64833[30] &&
	      !_theResult____h64833[29] &&
	      !_theResult____h64833[28] &&
	      !_theResult____h64833[27] &&
	      !_theResult____h64833[26] &&
	      !_theResult____h64833[25] &&
	      !_theResult____h64833[24] &&
	      !_theResult____h64833[23] &&
	      !_theResult____h64833[22] &&
	      !_theResult____h64833[21] &&
	      !_theResult____h64833[20] &&
	      !_theResult____h64833[19] &&
	      !_theResult____h64833[18] &&
	      !_theResult____h64833[17] &&
	      !_theResult____h64833[16] &&
	      !_theResult____h64833[15] &&
	      !_theResult____h64833[14] &&
	      !_theResult____h64833[13] &&
	      !_theResult____h64833[12] &&
	      !_theResult____h64833[11] &&
	      !_theResult____h64833[10] &&
	      !_theResult____h64833[9] &&
	      !_theResult____h64833[8] &&
	      !_theResult____h64833[7] &&
	      !_theResult____h64833[6] &&
	      !_theResult____h64833[5] &&
	      !_theResult____h64833[4] &&
	      !_theResult____h64833[3] &&
	      !_theResult____h64833[2] &&
	      !_theResult____h64833[1] &&
	      !_theResult____h64833[0] ||
	      !_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS__ETC___d2171) ?
	       8'd0 :
	       _theResult___fst_exp__h73005 ;
  assign _theResult___fst_exp__h73014 =
	     (!_theResult____h64833[56] && _theResult____h64833[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h73011 ;
  assign _theResult___fst_exp__h73564 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q71 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 ;
  assign _theResult___fst_exp__h73567 =
	     (_theResult___fst_exp__h72940 == 8'd255) ?
	       _theResult___fst_exp__h72940 :
	       _theResult___fst_exp__h73564 ;
  assign _theResult___fst_exp__h81617 =
	     8'd129 -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 } ;
  assign _theResult___fst_exp__h81623 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2333) ?
	       8'd0 :
	       _theResult___fst_exp__h81617 ;
  assign _theResult___fst_exp__h81626 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h81623 :
	       8'd129 ;
  assign _theResult___fst_exp__h82176 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q73 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 ;
  assign _theResult___fst_exp__h82179 =
	     (_theResult___fst_exp__h81626 == 8'd255) ?
	       _theResult___fst_exp__h81626 :
	       _theResult___fst_exp__h82176 ;
  assign _theResult___fst_exp__h90793 =
	     _theResult____h82557[56] ? 8'd2 : _theResult___fst_exp__h90867 ;
  assign _theResult___fst_exp__h90858 =
	     8'd0 -
	     { 2'd0,
	       IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653 } ;
  assign _theResult___fst_exp__h90864 =
	     (!_theResult____h82557[56] && !_theResult____h82557[55] &&
	      !_theResult____h82557[54] &&
	      !_theResult____h82557[53] &&
	      !_theResult____h82557[52] &&
	      !_theResult____h82557[51] &&
	      !_theResult____h82557[50] &&
	      !_theResult____h82557[49] &&
	      !_theResult____h82557[48] &&
	      !_theResult____h82557[47] &&
	      !_theResult____h82557[46] &&
	      !_theResult____h82557[45] &&
	      !_theResult____h82557[44] &&
	      !_theResult____h82557[43] &&
	      !_theResult____h82557[42] &&
	      !_theResult____h82557[41] &&
	      !_theResult____h82557[40] &&
	      !_theResult____h82557[39] &&
	      !_theResult____h82557[38] &&
	      !_theResult____h82557[37] &&
	      !_theResult____h82557[36] &&
	      !_theResult____h82557[35] &&
	      !_theResult____h82557[34] &&
	      !_theResult____h82557[33] &&
	      !_theResult____h82557[32] &&
	      !_theResult____h82557[31] &&
	      !_theResult____h82557[30] &&
	      !_theResult____h82557[29] &&
	      !_theResult____h82557[28] &&
	      !_theResult____h82557[27] &&
	      !_theResult____h82557[26] &&
	      !_theResult____h82557[25] &&
	      !_theResult____h82557[24] &&
	      !_theResult____h82557[23] &&
	      !_theResult____h82557[22] &&
	      !_theResult____h82557[21] &&
	      !_theResult____h82557[20] &&
	      !_theResult____h82557[19] &&
	      !_theResult____h82557[18] &&
	      !_theResult____h82557[17] &&
	      !_theResult____h82557[16] &&
	      !_theResult____h82557[15] &&
	      !_theResult____h82557[14] &&
	      !_theResult____h82557[13] &&
	      !_theResult____h82557[12] &&
	      !_theResult____h82557[11] &&
	      !_theResult____h82557[10] &&
	      !_theResult____h82557[9] &&
	      !_theResult____h82557[8] &&
	      !_theResult____h82557[7] &&
	      !_theResult____h82557[6] &&
	      !_theResult____h82557[5] &&
	      !_theResult____h82557[4] &&
	      !_theResult____h82557[3] &&
	      !_theResult____h82557[2] &&
	      !_theResult____h82557[1] &&
	      !_theResult____h82557[0] ||
	      !_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_ETC___d2655) ?
	       8'd0 :
	       _theResult___fst_exp__h90858 ;
  assign _theResult___fst_exp__h90867 =
	     (!_theResult____h82557[56] && _theResult____h82557[55]) ?
	       8'd1 :
	       _theResult___fst_exp__h90864 ;
  assign _theResult___fst_exp__h91417 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q75 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 ;
  assign _theResult___fst_exp__h91420 =
	     (_theResult___fst_exp__h90793 == 8'd255) ?
	       _theResult___fst_exp__h90793 :
	       _theResult___fst_exp__h91417 ;
  assign _theResult___fst_exp__h9275 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard762_0b0_0_0b1_0_0b10_out_exp181_0b11_ETC__q13 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 ;
  assign _theResult___fst_exp__h9828 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_x307_BI_ETC__q15 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 ;
  assign _theResult___fst_exp__h9831 =
	     (x__h9307[7:0] == 8'd255) ?
	       x__h9307[7:0] :
	       _theResult___fst_exp__h9828 ;
  assign _theResult___fst_exp__h99460 =
	     (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] ==
	      8'd0) ?
	       8'd1 :
	       SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] ;
  assign _theResult___fst_exp__h99499 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC__q64[7:0] -
	     { 2'd0,
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 } ;
  assign _theResult___fst_exp__h99505 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276 ||
	      !_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689_EQ__ETC___d2728) ?
	       8'd0 :
	       _theResult___fst_exp__h99499 ;
  assign _theResult___fst_exp__h99508 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___fst_exp__h99505 :
	       _theResult___fst_exp__h99460 ;
  assign _theResult___fst_sfd__h100084 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q85 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 ;
  assign _theResult___fst_sfd__h100087 =
	     (_theResult___fst_exp__h99508 == 8'd255) ?
	       _theResult___snd__h99454[56:34] :
	       _theResult___fst_sfd__h100084 ;
  assign _theResult___fst_sfd__h100096 =
	     (requestR[190:180] == 11'd0) ?
	       (_3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1936 ?
		  _theResult___snd_fst_sfd__h82183 :
		  _theResult___fst_sfd__h64816) :
	       (SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2407 ?
		  _theResult___snd_fst_sfd__h100090 :
		  _theResult___fst_sfd__h64816) ;
  assign _theResult___fst_sfd__h100102 =
	     ((requestR[190:180] == 11'd2047 || requestR[190:180] == 11'd0) &&
	      requestR[179:128] == 52'd0) ?
	       23'd0 :
	       _theResult___fst_sfd__h100096 ;
  assign _theResult___fst_sfd__h102036 = { 1'd1, sV1_sfd__h1280[21:0] } ;
  assign _theResult___fst_sfd__h107518 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       52'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 ;
  assign _theResult___fst_sfd__h123344 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q115 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 ;
  assign _theResult___fst_sfd__h123347 =
	     (_theResult___fst_exp__h122590 == 11'd2047) ?
	       _theResult___snd__h122541[56:5] :
	       _theResult___fst_sfd__h123344 ;
  assign _theResult___fst_sfd__h132991 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q117 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 ;
  assign _theResult___fst_sfd__h132994 =
	     (_theResult___fst_exp__h132163 == 11'd2047) ?
	       sfdin__h132157[56:5] :
	       _theResult___fst_sfd__h132991 ;
  assign _theResult___fst_sfd__h141773 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q119 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 ;
  assign _theResult___fst_sfd__h141776 =
	     (_theResult___fst_exp__h140994 == 11'd2047) ?
	       _theResult___snd__h140940[56:5] :
	       _theResult___fst_sfd__h141773 ;
  assign _theResult___fst_sfd__h141785 =
	     (sV1_exp__h1279 == 8'd0) ?
	       (_3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3099 ?
		  _theResult___snd_fst_sfd__h123350 :
		  _theResult___fst_sfd__h107518) :
	       (SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3242 ?
		  _theResult___snd_fst_sfd__h141779 :
		  _theResult___fst_sfd__h107518) ;
  assign _theResult___fst_sfd__h141791 =
	     ((sV1_exp__h1279 == 8'd255 || sV1_exp__h1279 == 8'd0) &&
	      sV1_sfd__h1280 == 23'd0) ?
	       52'd0 :
	       _theResult___fst_sfd__h141785 ;
  assign _theResult___fst_sfd__h15484 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q30 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 ;
  assign _theResult___fst_sfd__h16036 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q28 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 ;
  assign _theResult___fst_sfd__h16039 =
	     (x__h15515[7:0] == 8'd255) ?
	       sfd___3__h14964[30:8] :
	       _theResult___fst_sfd__h16036 ;
  assign _theResult___fst_sfd__h39636 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q46 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 ;
  assign _theResult___fst_sfd__h40392 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q42 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 ;
  assign _theResult___fst_sfd__h40395 =
	     (x__h39667[10:0] == 11'd2047) ?
	       sfd___3__h38912[53:2] :
	       _theResult___fst_sfd__h40392 ;
  assign _theResult___fst_sfd__h49366 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q57 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 ;
  assign _theResult___fst_sfd__h50121 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q55 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 ;
  assign _theResult___fst_sfd__h50124 =
	     (x__h49397[10:0] == 11'd2047) ?
	       sfd___3__h48643[53:2] :
	       _theResult___fst_sfd__h50121 ;
  assign _theResult___fst_sfd__h53499 = { 1'd1, requestR[178:128] } ;
  assign _theResult___fst_sfd__h64816 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3) ?
	       23'd0 :
	       CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 ;
  assign _theResult___fst_sfd__h73565 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q79 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 ;
  assign _theResult___fst_sfd__h73568 =
	     (_theResult___fst_exp__h72940 == 8'd255) ?
	       sfdin__h72934[56:34] :
	       _theResult___fst_sfd__h73565 ;
  assign _theResult___fst_sfd__h82177 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q81 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 ;
  assign _theResult___fst_sfd__h82180 =
	     (_theResult___fst_exp__h81626 == 8'd255) ?
	       _theResult___snd__h81577[56:34] :
	       _theResult___fst_sfd__h82177 ;
  assign _theResult___fst_sfd__h91418 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q83 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 ;
  assign _theResult___fst_sfd__h91421 =
	     (_theResult___fst_exp__h90793 == 8'd255) ?
	       sfdin__h90787[56:34] :
	       _theResult___fst_sfd__h91418 ;
  assign _theResult___fst_sfd__h9276 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q17 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 ;
  assign _theResult___fst_sfd__h9829 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q19 :
	       IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 ;
  assign _theResult___fst_sfd__h9832 =
	     (x__h9307[7:0] == 8'd255) ?
	       sfd___3__h8752[30:8] :
	       _theResult___fst_sfd__h9829 ;
  assign _theResult___sfd__h123246 =
	     sfd__h122608[53] ?
	       ((_theResult___fst_exp__h122590 == 11'd2046) ?
		  52'd0 :
		  sfd__h122608[52:1]) :
	       sfd__h122608[51:0] ;
  assign _theResult___sfd__h132893 =
	     sfd__h132255[53] ?
	       ((_theResult___fst_exp__h132163 == 11'd2046) ?
		  52'd0 :
		  sfd__h132255[52:1]) :
	       sfd__h132255[51:0] ;
  assign _theResult___sfd__h141675 =
	     sfd__h141013[53] ?
	       ((_theResult___fst_exp__h140994 == 11'd2046) ?
		  52'd0 :
		  sfd__h141013[52:1]) :
	       sfd__h141013[51:0] ;
  assign _theResult___sfd__h15388 =
	     sfd__h14991[24] ? sfd__h14991[23:1] : sfd__h14991[22:0] ;
  assign _theResult___sfd__h15940 =
	     sfd__h15530[24] ?
	       ((x__h15515[7:0] == 8'd254) ? 23'd0 : sfd__h15530[23:1]) :
	       sfd__h15530[22:0] ;
  assign _theResult___sfd__h39539 =
	     sfd__h38939[53] ? sfd__h38939[52:1] : sfd__h38939[51:0] ;
  assign _theResult___sfd__h40295 =
	     sfd__h39682[53] ?
	       ((x__h39667[10:0] == 11'd2046) ? 52'd0 : sfd__h39682[52:1]) :
	       sfd__h39682[51:0] ;
  assign _theResult___sfd__h49270 =
	     sfd__h48670[53] ? sfd__h48670[52:1] : sfd__h48670[51:0] ;
  assign _theResult___sfd__h50025 =
	     sfd__h49412[53] ?
	       ((x__h49397[10:0] == 11'd2046) ? 52'd0 : sfd__h49412[52:1]) :
	       sfd__h49412[51:0] ;
  assign _theResult___sfd__h73467 =
	     sfd__h73032[24] ?
	       ((_theResult___fst_exp__h72940 == 8'd254) ?
		  23'd0 :
		  sfd__h73032[23:1]) :
	       sfd__h73032[22:0] ;
  assign _theResult___sfd__h82079 =
	     sfd__h81644[24] ?
	       ((_theResult___fst_exp__h81626 == 8'd254) ?
		  23'd0 :
		  sfd__h81644[23:1]) :
	       sfd__h81644[22:0] ;
  assign _theResult___sfd__h91320 =
	     sfd__h90885[24] ?
	       ((_theResult___fst_exp__h90793 == 8'd254) ?
		  23'd0 :
		  sfd__h90885[23:1]) :
	       sfd__h90885[22:0] ;
  assign _theResult___sfd__h9179 =
	     sfd__h8779[24] ? sfd__h8779[23:1] : sfd__h8779[22:0] ;
  assign _theResult___sfd__h9732 =
	     sfd__h9322[24] ?
	       ((x__h9307[7:0] == 8'd254) ? 23'd0 : sfd__h9322[23:1]) :
	       sfd__h9322[22:0] ;
  assign _theResult___sfd__h99986 =
	     sfd__h99527[24] ?
	       ((_theResult___fst_exp__h99508 == 8'd254) ?
		  23'd0 :
		  sfd__h99527[23:1]) :
	       sfd__h99527[22:0] ;
  assign _theResult___snd__h122541 =
	     (sV1_exp__h1279 == 8'd0) ?
	       _theResult___snd__h122550 :
	       _theResult___snd__h122543 ;
  assign _theResult___snd__h122543 = { sV1_sfd__h1280, 34'd0 } ;
  assign _theResult___snd__h122550 =
	     (sV1_exp__h1279 == 8'd0 && !sV1_sfd__h1280[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143) ?
	       b__h16746 :
	       _theResult___snd__h122556 ;
  assign _theResult___snd__h122556 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q94[54:0],
	       2'd0 } ;
  assign _theResult___snd__h122579 =
	     b__h16746 <<
	     IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3170 ;
  assign _theResult___snd__h132174 = { _theResult____h123927[55:0], 1'd0 } ;
  assign _theResult___snd__h132185 =
	     (!_theResult____h123927[56] && _theResult____h123927[55]) ?
	       _theResult___snd__h132187 :
	       _theResult___snd__h132197 ;
  assign _theResult___snd__h132187 = { _theResult____h123927[54:0], 2'd0 } ;
  assign _theResult___snd__h132197 =
	     (!_theResult____h123927[56] && !_theResult____h123927[55] &&
	      !_theResult____h123927[54] &&
	      !_theResult____h123927[53] &&
	      !_theResult____h123927[52] &&
	      !_theResult____h123927[51] &&
	      !_theResult____h123927[50] &&
	      !_theResult____h123927[49] &&
	      !_theResult____h123927[48] &&
	      !_theResult____h123927[47] &&
	      !_theResult____h123927[46] &&
	      !_theResult____h123927[45] &&
	      !_theResult____h123927[44] &&
	      !_theResult____h123927[43] &&
	      !_theResult____h123927[42] &&
	      !_theResult____h123927[41] &&
	      !_theResult____h123927[40] &&
	      !_theResult____h123927[39] &&
	      !_theResult____h123927[38] &&
	      !_theResult____h123927[37] &&
	      !_theResult____h123927[36] &&
	      !_theResult____h123927[35] &&
	      !_theResult____h123927[34] &&
	      !_theResult____h123927[33] &&
	      !_theResult____h123927[32] &&
	      !_theResult____h123927[31] &&
	      !_theResult____h123927[30] &&
	      !_theResult____h123927[29] &&
	      !_theResult____h123927[28] &&
	      !_theResult____h123927[27] &&
	      !_theResult____h123927[26] &&
	      !_theResult____h123927[25] &&
	      !_theResult____h123927[24] &&
	      !_theResult____h123927[23] &&
	      !_theResult____h123927[22] &&
	      !_theResult____h123927[21] &&
	      !_theResult____h123927[20] &&
	      !_theResult____h123927[19] &&
	      !_theResult____h123927[18] &&
	      !_theResult____h123927[17] &&
	      !_theResult____h123927[16] &&
	      !_theResult____h123927[15] &&
	      !_theResult____h123927[14] &&
	      !_theResult____h123927[13] &&
	      !_theResult____h123927[12] &&
	      !_theResult____h123927[11] &&
	      !_theResult____h123927[10] &&
	      !_theResult____h123927[9] &&
	      !_theResult____h123927[8] &&
	      !_theResult____h123927[7] &&
	      !_theResult____h123927[6] &&
	      !_theResult____h123927[5] &&
	      !_theResult____h123927[4] &&
	      !_theResult____h123927[3] &&
	      !_theResult____h123927[2] &&
	      !_theResult____h123927[1] &&
	      !_theResult____h123927[0]) ?
	       _theResult____h123927 :
	       _theResult___snd__h132203 ;
  assign _theResult___snd__h132203 =
	     { IF_0_CONCAT_IF_IF_3074_MINUS_SEXT_IF_requestR__ETC__q97[54:0],
	       2'd0 } ;
  assign _theResult___snd__h132226 =
	     _theResult____h123927 <<
	     IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_191_T_ETC___d3490 ;
  assign _theResult___snd__h140940 =
	     (sV1_exp__h1279 == 8'd0) ?
	       _theResult___snd__h140954 :
	       _theResult___snd__h122543 ;
  assign _theResult___snd__h140954 =
	     (sV1_exp__h1279 == 8'd0 && !sV1_sfd__h1280[22] &&
	      NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d3143) ?
	       b__h16746 :
	       _theResult___snd__h140960 ;
  assign _theResult___snd__h140960 =
	     { IF_0_CONCAT_IF_IF_requestR_3_BITS_191_TO_160_8_ETC__q100[54:0],
	       2'd0 } ;
  assign _theResult___snd__h140978 =
	     b__h16746 <<
	     IF_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xF_ETC___d3564 ;
  assign _theResult___snd__h72951 = { _theResult____h64833[55:0], 1'd0 } ;
  assign _theResult___snd__h72962 =
	     (!_theResult____h64833[56] && _theResult____h64833[55]) ?
	       _theResult___snd__h72964 :
	       _theResult___snd__h72974 ;
  assign _theResult___snd__h72964 = { _theResult____h64833[54:0], 2'd0 } ;
  assign _theResult___snd__h72974 =
	     (!_theResult____h64833[56] && !_theResult____h64833[55] &&
	      !_theResult____h64833[54] &&
	      !_theResult____h64833[53] &&
	      !_theResult____h64833[52] &&
	      !_theResult____h64833[51] &&
	      !_theResult____h64833[50] &&
	      !_theResult____h64833[49] &&
	      !_theResult____h64833[48] &&
	      !_theResult____h64833[47] &&
	      !_theResult____h64833[46] &&
	      !_theResult____h64833[45] &&
	      !_theResult____h64833[44] &&
	      !_theResult____h64833[43] &&
	      !_theResult____h64833[42] &&
	      !_theResult____h64833[41] &&
	      !_theResult____h64833[40] &&
	      !_theResult____h64833[39] &&
	      !_theResult____h64833[38] &&
	      !_theResult____h64833[37] &&
	      !_theResult____h64833[36] &&
	      !_theResult____h64833[35] &&
	      !_theResult____h64833[34] &&
	      !_theResult____h64833[33] &&
	      !_theResult____h64833[32] &&
	      !_theResult____h64833[31] &&
	      !_theResult____h64833[30] &&
	      !_theResult____h64833[29] &&
	      !_theResult____h64833[28] &&
	      !_theResult____h64833[27] &&
	      !_theResult____h64833[26] &&
	      !_theResult____h64833[25] &&
	      !_theResult____h64833[24] &&
	      !_theResult____h64833[23] &&
	      !_theResult____h64833[22] &&
	      !_theResult____h64833[21] &&
	      !_theResult____h64833[20] &&
	      !_theResult____h64833[19] &&
	      !_theResult____h64833[18] &&
	      !_theResult____h64833[17] &&
	      !_theResult____h64833[16] &&
	      !_theResult____h64833[15] &&
	      !_theResult____h64833[14] &&
	      !_theResult____h64833[13] &&
	      !_theResult____h64833[12] &&
	      !_theResult____h64833[11] &&
	      !_theResult____h64833[10] &&
	      !_theResult____h64833[9] &&
	      !_theResult____h64833[8] &&
	      !_theResult____h64833[7] &&
	      !_theResult____h64833[6] &&
	      !_theResult____h64833[5] &&
	      !_theResult____h64833[4] &&
	      !_theResult____h64833[3] &&
	      !_theResult____h64833[2] &&
	      !_theResult____h64833[1] &&
	      !_theResult____h64833[0]) ?
	       _theResult____h64833 :
	       _theResult___snd__h72980 ;
  assign _theResult___snd__h72980 =
	     { IF_0_CONCAT_IF_IF_0b0_CONCAT_NOT_requestR_3_BI_ETC__q60[54:0],
	       2'd0 } ;
  assign _theResult___snd__h73003 =
	     _theResult____h64833 <<
	     IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_TO_18_ETC___d2169 ;
  assign _theResult___snd__h81577 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h81586 :
	       _theResult___snd__h81579 ;
  assign _theResult___snd__h81579 = { requestR[179:128], 5'd0 } ;
  assign _theResult___snd__h81586 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276) ?
	       sfd__h57203 :
	       _theResult___snd__h81592 ;
  assign _theResult___snd__h81592 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q62[54:0],
	       2'd0 } ;
  assign _theResult___snd__h81615 =
	     sfd__h57203 <<
	     IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2331 ;
  assign _theResult___snd__h90804 = { _theResult____h82557[55:0], 1'd0 } ;
  assign _theResult___snd__h90815 =
	     (!_theResult____h82557[56] && _theResult____h82557[55]) ?
	       _theResult___snd__h90817 :
	       _theResult___snd__h90827 ;
  assign _theResult___snd__h90817 = { _theResult____h82557[54:0], 2'd0 } ;
  assign _theResult___snd__h90827 =
	     (!_theResult____h82557[56] && !_theResult____h82557[55] &&
	      !_theResult____h82557[54] &&
	      !_theResult____h82557[53] &&
	      !_theResult____h82557[52] &&
	      !_theResult____h82557[51] &&
	      !_theResult____h82557[50] &&
	      !_theResult____h82557[49] &&
	      !_theResult____h82557[48] &&
	      !_theResult____h82557[47] &&
	      !_theResult____h82557[46] &&
	      !_theResult____h82557[45] &&
	      !_theResult____h82557[44] &&
	      !_theResult____h82557[43] &&
	      !_theResult____h82557[42] &&
	      !_theResult____h82557[41] &&
	      !_theResult____h82557[40] &&
	      !_theResult____h82557[39] &&
	      !_theResult____h82557[38] &&
	      !_theResult____h82557[37] &&
	      !_theResult____h82557[36] &&
	      !_theResult____h82557[35] &&
	      !_theResult____h82557[34] &&
	      !_theResult____h82557[33] &&
	      !_theResult____h82557[32] &&
	      !_theResult____h82557[31] &&
	      !_theResult____h82557[30] &&
	      !_theResult____h82557[29] &&
	      !_theResult____h82557[28] &&
	      !_theResult____h82557[27] &&
	      !_theResult____h82557[26] &&
	      !_theResult____h82557[25] &&
	      !_theResult____h82557[24] &&
	      !_theResult____h82557[23] &&
	      !_theResult____h82557[22] &&
	      !_theResult____h82557[21] &&
	      !_theResult____h82557[20] &&
	      !_theResult____h82557[19] &&
	      !_theResult____h82557[18] &&
	      !_theResult____h82557[17] &&
	      !_theResult____h82557[16] &&
	      !_theResult____h82557[15] &&
	      !_theResult____h82557[14] &&
	      !_theResult____h82557[13] &&
	      !_theResult____h82557[12] &&
	      !_theResult____h82557[11] &&
	      !_theResult____h82557[10] &&
	      !_theResult____h82557[9] &&
	      !_theResult____h82557[8] &&
	      !_theResult____h82557[7] &&
	      !_theResult____h82557[6] &&
	      !_theResult____h82557[5] &&
	      !_theResult____h82557[4] &&
	      !_theResult____h82557[3] &&
	      !_theResult____h82557[2] &&
	      !_theResult____h82557[1] &&
	      !_theResult____h82557[0]) ?
	       _theResult____h82557 :
	       _theResult___snd__h90833 ;
  assign _theResult___snd__h90833 =
	     { IF_0_CONCAT_IF_IF_3970_MINUS_SEXT_requestR_3_B_ETC__q65[54:0],
	       2'd0 } ;
  assign _theResult___snd__h90856 =
	     _theResult____h82557 <<
	     IF_IF_3970_MINUS_SEXT_requestR_3_BITS_190_TO_1_ETC___d2653 ;
  assign _theResult___snd__h99454 =
	     (requestR[190:180] == 11'd0) ?
	       _theResult___snd__h99468 :
	       _theResult___snd__h81579 ;
  assign _theResult___snd__h99468 =
	     (requestR[190:180] == 11'd0 &&
	      NOT_requestR_3_BIT_179_862_237_AND_NOT_request_ETC___d2276) ?
	       sfd__h57203 :
	       _theResult___snd__h99474 ;
  assign _theResult___snd__h99474 =
	     { IF_0_CONCAT_IF_requestR_3_BITS_190_TO_180_689__ETC__q68[54:0],
	       2'd0 } ;
  assign _theResult___snd__h99492 =
	     sfd__h57203 <<
	     IF_SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1_ETC___d2727 ;
  assign _theResult___snd_fst_exp__h100089 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _theResult___fst_exp__h91420 :
	       _theResult___fst_exp__h100086 ;
  assign _theResult___snd_fst_exp__h123349 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 ?
	       11'd0 :
	       _theResult___fst_exp__h123346 ;
  assign _theResult___snd_fst_exp__h141778 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _theResult___fst_exp__h132993 :
	       _theResult___fst_exp__h141775 ;
  assign _theResult___snd_fst_exp__h16041 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 ?
	       _theResult___fst_exp__h15483 :
	       _theResult___fst_exp__h16038 ;
  assign _theResult___snd_fst_exp__h16044 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h16041 ;
  assign _theResult___snd_fst_exp__h16047 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 ?
	       _theResult___snd_fst_exp__h16044 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h40397 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 ?
	       _theResult___fst_exp__h39635 :
	       _theResult___fst_exp__h40394 ;
  assign _theResult___snd_fst_exp__h40400 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h40397 ;
  assign _theResult___snd_fst_exp__h40403 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 ?
	       _theResult___snd_fst_exp__h40400 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h50126 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 ?
	       _theResult___fst_exp__h49365 :
	       _theResult___fst_exp__h50123 ;
  assign _theResult___snd_fst_exp__h50129 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539 ?
	       11'd0 :
	       _theResult___snd_fst_exp__h50126 ;
  assign _theResult___snd_fst_exp__h50132 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 ?
	       _theResult___snd_fst_exp__h50129 :
	       11'd2047 ;
  assign _theResult___snd_fst_exp__h82182 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
	       _theResult___fst_exp__h73567 :
	       _theResult___fst_exp__h82179 ;
  assign _theResult___snd_fst_exp__h9834 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 ?
	       _theResult___fst_exp__h9275 :
	       _theResult___fst_exp__h9831 ;
  assign _theResult___snd_fst_exp__h9837 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d309 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h9834 ;
  assign _theResult___snd_fst_exp__h9840 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d307 ?
	       _theResult___snd_fst_exp__h9837 :
	       8'd255 ;
  assign _theResult___snd_fst_sfd__h100090 =
	     SEXT_requestR_3_BITS_190_TO_180_689_MINUS_1023_ETC___d2408 ?
	       _theResult___fst_sfd__h91421 :
	       _theResult___fst_sfd__h100087 ;
  assign _theResult___snd_fst_sfd__h103664 =
	     (value__h101781 == 23'd0) ?
	       52'h4000000000000 :
	       out___1_sfd__h101778 ;
  assign _theResult___snd_fst_sfd__h123350 =
	     _3970_MINUS_0_CONCAT_IF_IF_requestR_3_BITS_191__ETC___d3100 ?
	       52'd0 :
	       _theResult___fst_sfd__h123347 ;
  assign _theResult___snd_fst_sfd__h141779 =
	     SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFF_ETC___d3243 ?
	       _theResult___fst_sfd__h132994 :
	       _theResult___fst_sfd__h141776 ;
  assign _theResult___snd_fst_sfd__h16042 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d668 ?
	       _theResult___fst_sfd__h15484 :
	       _theResult___fst_sfd__h16039 ;
  assign _theResult___snd_fst_sfd__h40398 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 ?
	       _theResult___fst_sfd__h39636 :
	       _theResult___fst_sfd__h40395 ;
  assign _theResult___snd_fst_sfd__h50127 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 ?
	       _theResult___fst_sfd__h49366 :
	       _theResult___fst_sfd__h50124 ;
  assign _theResult___snd_fst_sfd__h57157 =
	     (value__h53042[51:29] == 23'd0) ?
	       23'd2097152 :
	       value__h53042[51:29] ;
  assign _theResult___snd_fst_sfd__h82183 =
	     _3074_MINUS_0_CONCAT_IF_requestR_3_BIT_179_862__ETC___d1937 ?
	       _theResult___fst_sfd__h73568 :
	       _theResult___fst_sfd__h82180 ;
  assign _theResult___snd_fst_sfd__h9835 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d312 ?
	       _theResult___fst_sfd__h9276 :
	       _theResult___fst_sfd__h9832 ;
  assign b__h16746 = { value__h16748, 32'd0 } ;
  assign b__h50827 = { value__h50829, 32'd0 } ;
  assign din_inc___2_exp__h100117 = _theResult___fst_exp__h72940 + 8'd1 ;
  assign din_inc___2_exp__h100141 = _theResult___fst_exp__h81626 + 8'd1 ;
  assign din_inc___2_exp__h100171 = _theResult___fst_exp__h90793 + 8'd1 ;
  assign din_inc___2_exp__h100195 = _theResult___fst_exp__h99508 + 8'd1 ;
  assign din_inc___2_exp__h141810 = _theResult___fst_exp__h122590 + 11'd1 ;
  assign din_inc___2_exp__h141840 = _theResult___fst_exp__h132163 + 11'd1 ;
  assign din_inc___2_exp__h141864 = _theResult___fst_exp__h140994 + 11'd1 ;
  assign din_inc___2_exp__h16077 = x__h15515[7:0] + 8'd1 ;
  assign din_inc___2_exp__h40437 = x__h39667[10:0] + 11'd1 ;
  assign din_inc___2_exp__h50162 = x__h49397[10:0] + 11'd1 ;
  assign din_inc___2_exp__h9874 = x__h9307[7:0] + 8'd1 ;
  assign guard__h114629 =
	     { IF_theResult___snd22541_BIT_4_THEN_2_ELSE_0__q95[1],
	       { _theResult___snd__h122541[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h123937 =
	     { IF_sfdin32157_BIT_4_THEN_2_ELSE_0__q98[1],
	       { sfdin__h132157[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h124535 = x__h124635 != 57'd0 ;
  assign guard__h133004 =
	     { IF_theResult___snd40940_BIT_4_THEN_2_ELSE_0__q101[1],
	       { _theResult___snd__h140940[3:0], 52'd0 } != 56'd0 } ;
  assign guard__h14974 =
	     { IF_sfd___34964_BIT_8_THEN_2_ELSE_0__q20[1],
	       { sfd___3__h14964[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h15500 =
	     { IF_sfd___34964_BIT_7_THEN_2_ELSE_0__q21[1],
	       { sfd___3__h14964[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h16679 =
	     { IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[23],
	       { IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h17233 =
	     { IF_x7422_BIT_24_THEN_2_ELSE_0__q31[1],
	       { x__h17422[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h18331 =
	     { IF_x8552_BIT_24_THEN_2_ELSE_0__q32[1],
	       { x__h18552[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h38922 =
	     { IF_sfd___38912_BIT_2_THEN_2_ELSE_0__q33[1],
	       { sfd___3__h38912[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h39652 =
	     { IF_sfd___38912_BIT_1_THEN_2_ELSE_0__q34[1],
	       { sfd___3__h38912[0], 53'd0 } != 54'd0 } ;
  assign guard__h48653 =
	     { IF_sfd___38643_BIT_2_THEN_2_ELSE_0__q47[1],
	       { sfd___3__h48643[1:0], 52'd0 } != 54'd0 } ;
  assign guard__h49382 =
	     { IF_sfd___38643_BIT_1_THEN_2_ELSE_0__q48[1],
	       { sfd___3__h48643[0], 53'd0 } != 54'd0 } ;
  assign guard__h50760 =
	     { IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[52],
	       { IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[51:0],
		 33'd0 } !=
	       85'd0 } ;
  assign guard__h51314 =
	     { IF_x1503_BIT_53_THEN_2_ELSE_0__q58[1],
	       { x__h51503[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h52395 =
	     { IF_x2616_BIT_53_THEN_2_ELSE_0__q59[1],
	       { x__h52616[52:0], 32'd0 } != 85'd0 } ;
  assign guard__h64843 =
	     { IF_sfdin2934_BIT_33_THEN_2_ELSE_0__q61[1],
	       { sfdin__h72934[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h73578 =
	     { IF_theResult___snd1577_BIT_33_THEN_2_ELSE_0__q63[1],
	       { _theResult___snd__h81577[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h82567 =
	     { IF_sfdin0787_BIT_33_THEN_2_ELSE_0__q66[1],
	       { sfdin__h90787[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h83165 = x__h83265 != 57'd0 ;
  assign guard__h8762 =
	     { IF_sfd___3752_BIT_8_THEN_2_ELSE_0__q6[1],
	       { sfd___3__h8752[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h91431 =
	     { IF_theResult___snd9454_BIT_33_THEN_2_ELSE_0__q69[1],
	       { _theResult___snd__h99454[32:0], 23'd0 } != 56'd0 } ;
  assign guard__h9292 =
	     { IF_sfd___3752_BIT_7_THEN_2_ELSE_0__q7[1],
	       { sfd___3__h8752[6:0], 24'd0 } != 31'd0 } ;
  assign out1___1__h17173 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[56:24] +
	     33'd1 ;
  assign out1___1__h51254 =
	     IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[85:53] +
	     33'd1 ;
  assign out___1_sfd__h101778 = { value__h101781, 29'd0 } ;
  assign out_exp__h123248 =
	     _theResult___snd__h122541[5] ?
	       _theResult___exp__h123245 :
	       _theResult___fst_exp__h122590 ;
  assign out_exp__h132895 =
	     sfdin__h132157[5] ?
	       _theResult___exp__h132892 :
	       _theResult___fst_exp__h132163 ;
  assign out_exp__h141677 =
	     _theResult___snd__h140940[5] ?
	       _theResult___exp__h141674 :
	       _theResult___fst_exp__h140994 ;
  assign out_exp__h15390 =
	     sfd___3__h14964[9] ? _theResult___exp__h15387 : 8'd0 ;
  assign out_exp__h15942 =
	     sfd___3__h14964[8] ? _theResult___exp__h15939 : x__h15515[7:0] ;
  assign out_exp__h39541 =
	     sfd___3__h38912[3] ? _theResult___exp__h39538 : 11'd0 ;
  assign out_exp__h40297 =
	     sfd___3__h38912[2] ? _theResult___exp__h40294 : x__h39667[10:0] ;
  assign out_exp__h49272 =
	     sfd___3__h48643[3] ? _theResult___exp__h49269 : 11'd0 ;
  assign out_exp__h50027 =
	     sfd___3__h48643[2] ? _theResult___exp__h50024 : x__h49397[10:0] ;
  assign out_exp__h73469 =
	     sfdin__h72934[34] ?
	       _theResult___exp__h73466 :
	       _theResult___fst_exp__h72940 ;
  assign out_exp__h82081 =
	     _theResult___snd__h81577[34] ?
	       _theResult___exp__h82078 :
	       _theResult___fst_exp__h81626 ;
  assign out_exp__h91322 =
	     sfdin__h90787[34] ?
	       _theResult___exp__h91319 :
	       _theResult___fst_exp__h90793 ;
  assign out_exp__h9181 = sfd___3__h8752[9] ? _theResult___exp__h9178 : 8'd0 ;
  assign out_exp__h9734 =
	     sfd___3__h8752[8] ? _theResult___exp__h9731 : x__h9307[7:0] ;
  assign out_exp__h99988 =
	     _theResult___snd__h99454[34] ?
	       _theResult___exp__h99985 :
	       _theResult___fst_exp__h99508 ;
  assign out_sfd__h123249 =
	     _theResult___snd__h122541[5] ?
	       _theResult___sfd__h123246 :
	       _theResult___snd__h122541[56:5] ;
  assign out_sfd__h132896 =
	     sfdin__h132157[5] ?
	       _theResult___sfd__h132893 :
	       sfdin__h132157[56:5] ;
  assign out_sfd__h141678 =
	     _theResult___snd__h140940[5] ?
	       _theResult___sfd__h141675 :
	       _theResult___snd__h140940[56:5] ;
  assign out_sfd__h15391 =
	     sfd___3__h14964[9] ?
	       _theResult___sfd__h15388 :
	       sfd___3__h14964[31:9] ;
  assign out_sfd__h15943 =
	     sfd___3__h14964[8] ?
	       _theResult___sfd__h15940 :
	       sfd___3__h14964[30:8] ;
  assign out_sfd__h39542 =
	     sfd___3__h38912[3] ?
	       _theResult___sfd__h39539 :
	       sfd___3__h38912[54:3] ;
  assign out_sfd__h40298 =
	     sfd___3__h38912[2] ?
	       _theResult___sfd__h40295 :
	       sfd___3__h38912[53:2] ;
  assign out_sfd__h49273 =
	     sfd___3__h48643[3] ?
	       _theResult___sfd__h49270 :
	       sfd___3__h48643[54:3] ;
  assign out_sfd__h50028 =
	     sfd___3__h48643[2] ?
	       _theResult___sfd__h50025 :
	       sfd___3__h48643[53:2] ;
  assign out_sfd__h73470 =
	     sfdin__h72934[34] ?
	       _theResult___sfd__h73467 :
	       sfdin__h72934[56:34] ;
  assign out_sfd__h82082 =
	     _theResult___snd__h81577[34] ?
	       _theResult___sfd__h82079 :
	       _theResult___snd__h81577[56:34] ;
  assign out_sfd__h91323 =
	     sfdin__h90787[34] ?
	       _theResult___sfd__h91320 :
	       sfdin__h90787[56:34] ;
  assign out_sfd__h9182 =
	     sfd___3__h8752[9] ?
	       _theResult___sfd__h9179 :
	       sfd___3__h8752[31:9] ;
  assign out_sfd__h9735 =
	     sfd___3__h8752[8] ?
	       _theResult___sfd__h9732 :
	       sfd___3__h8752[30:8] ;
  assign out_sfd__h99989 =
	     _theResult___snd__h99454[34] ?
	       _theResult___sfd__h99986 :
	       _theResult___snd__h99454[56:34] ;
  assign requestR_3_BITS_126_TO_116_842_EQ_0_856_AND_re_ETC___d3863 =
	     requestR[126:116] == 11'd0 && requestR[115:64] == 52'd0 &&
	     requestR[127] &&
	     requestR[190:180] == 11'd0 &&
	     requestR[179:128] == 52'd0 &&
	     !requestR[191] ;
  assign requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       (requestR[127:96] == 32'hFFFFFFFF) ?
		 requestR[94:64] :
		 31'h7FC00000 } ;
  assign requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875 =
	     requestR[179:128] <= requestR[115:64] ;
  assign requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880 =
	     requestR[179:128] < requestR[115:64] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3859 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[191] &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 &&
	     !requestR[127] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3935 =
	     requestR[190:180] == 11'd0 && requestR[179:128] == 52'd0 &&
	     requestR[126:116] == 11'd0 &&
	     requestR[115:64] == 52'd0 ||
	     (!requestR[191] || requestR[127]) &&
	     (requestR[191] || !requestR[127]) &&
	     (requestR[191] ?
		requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3930 :
		NOT_requestR_3_BITS_190_TO_180_689_ULT_request_ETC___d3931) ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	     requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	     (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	     (NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802[23] ||
	      NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1804 &&
	      IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_OR_NO_ETC___d1823 &&
	      x__h52616[85:54] == 32'hFFFFFFFF) ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1852 =
	     { requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1846 } ==
	     5'd0 ||
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841 ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3851 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] &&
	     requestR[126:116] == 11'd2047 &&
	     requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3896 =
	     requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	     !requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0 &&
	     !requestR[115] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3896 ||
	     requestR[190:180] == 11'd2047 && requestR[179] ||
	     requestR[126:116] == 11'd2047 && requestR[115] ;
  assign requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 =
	     requestR[190:180] == requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_689_MINUS_1023___d1702 =
	     requestR[190:180] - 11'd1023 ;
  assign requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872 =
	     requestR[190:180] <= requestR[126:116] ;
  assign requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3930 =
	     requestR_3_BITS_190_TO_180_689_ULE_requestR_3__ETC___d3872 &&
	     (!requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 ||
	      requestR_3_BITS_179_TO_128_691_ULE_requestR_3__ETC___d3875) &&
	     !requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879 &&
	     (!requestR_3_BITS_190_TO_180_689_EQ_requestR_3_B_ETC___d3874 ||
	      !requestR_3_BITS_179_TO_128_691_ULT_requestR_3__ETC___d3880) ;
  assign requestR_3_BITS_190_TO_180_689_ULT_requestR_3__ETC___d3879 =
	     requestR[190:180] < requestR[126:116] ;
  assign requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF_9_A_ETC___d1078 =
	     requestR[191:160] == 32'hFFFFFFFF && requestR[159] &&
	     (requestR[127:96] != 32'hFFFFFFFF || !requestR[95]) ||
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159] ||
	      requestR[127:96] != 32'hFFFFFFFF ||
	      !requestR[95]) &&
	     IF_NOT_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1076 ;
  assign requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819 =
	     requestR[158] || requestR[157] || requestR[156] ||
	     requestR[155] ||
	     requestR[154] ||
	     requestR[153] ||
	     requestR[152] ||
	     requestR[151] ||
	     requestR[150] ||
	     requestR[149] ||
	     requestR[148] ||
	     requestR[147] ||
	     requestR[146] ||
	     requestR[145] ||
	     requestR[144] ||
	     requestR[143] ||
	     requestR[142] ||
	     requestR[141] ||
	     requestR[140] ||
	     requestR[139] ||
	     requestR[138] ||
	     requestR[137] ||
	     requestR[136] ||
	     requestR[135] ||
	     requestR[134] ||
	     requestR[133] ||
	     requestR[132] ||
	     requestR[131] ||
	     requestR[130] ||
	     requestR[129] ||
	     requestR[128] ;
  assign requestR_3_BIT_159_0_OR_requestR_3_BIT_158_37__ETC___d841 =
	     (requestR[159] ||
	      requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819) &&
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 &&
	     !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667 &&
	     IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d838 ;
  assign requestR_BITS_159_TO_128__q1 = requestR[159:128] ;
  assign res___1__h159426 =
	     (requestR[190:180] == 11'd2047 && requestR[179]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h159864 = requestR[191] ? 64'd1 : 64'd128 ;
  assign res___1__h159874 = requestR[191] ? 64'd8 : 64'd16 ;
  assign res___1__h159893 = requestR[191] ? 64'd4 : 64'd32 ;
  assign res___1__h28230 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h28466 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd1 :
	       64'd128 ;
  assign res___1__h28476 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd8 :
	       64'd16 ;
  assign res___1__h28495 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd4 :
	       64'd32 ;
  assign res__h100574 = { 32'hFFFFFFFF, x__h100580 } ;
  assign res__h142414 =
	     { IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3746,
	       x__h101722,
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3710 } ;
  assign res__h146891 =
	     NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887 ?
	       requestR[191:128] :
	       requestR[127:64] ;
  assign res__h151474 =
	     NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887 ?
	       requestR[127:64] :
	       requestR[191:128] ;
  assign res__h154213 =
	     ((requestR[190:180] != 11'd2047 || requestR[179:128] == 52'd0) &&
	      (requestR[126:116] != 11'd2047 || requestR[115:64] == 52'd0) &&
	      requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_re_ETC___d3935) ?
	       64'd1 :
	       64'd0 ;
  assign res__h156943 =
	     NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3887 ?
	       64'd1 :
	       64'd0 ;
  assign res__h158855 =
	     NOT_requestR_3_BITS_190_TO_180_689_EQ_2047_690_ETC___d3956 ?
	       64'd1 :
	       64'd0 ;
  assign res__h159909 = requestR[191] ? 64'd2 : 64'd64 ;
  assign res__h160108 = { 32'hFFFFFFFF, fpu$server_core_response_get[36:5] } ;
  assign res__h19591 =
	     { 32'hFFFFFFFF,
	       requestR_3_BITS_127_TO_96_6_EQ_0xFFFFFFFF_7_AN_ETC___d42 } ;
  assign res__h19828 =
	     { 32'hFFFFFFFF,
	       requestR[191:160] == 32'hFFFFFFFF && requestR[159],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign res__h25338 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1147 ?
	       64'd1 :
	       64'd0 ;
  assign res__h26856 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1080 ?
	       64'd1 :
	       64'd0 ;
  assign res__h27960 =
	     NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1167 ?
	       64'd1 :
	       64'd0 ;
  assign res__h28511 =
	     (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
	       64'd2 :
	       64'd64 ;
  assign result__h124540 =
	     { _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_8_ETC___d3248[56:1],
	       _0b0_CONCAT_NOT_IF_requestR_3_BITS_191_TO_160_8_ETC___d3248[0] |
	       guard__h124535 } ;
  assign result__h83170 =
	     { _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_689__ETC___d2413[56:1],
	       _0b0_CONCAT_NOT_requestR_3_BITS_190_TO_180_689__ETC___d2413[0] |
	       guard__h83165 } ;
  assign sV1_exp__h1279 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[158:151] :
	       8'd255 ;
  assign sV1_sfd__h1280 =
	     (requestR[191:160] == 32'hFFFFFFFF) ?
	       requestR[150:128] :
	       23'd4194304 ;
  assign sV2_exp__h1396 =
	     (requestR[127:96] == 32'hFFFFFFFF) ? requestR[94:87] : 8'd255 ;
  assign sV2_sfd__h1397 =
	     (requestR[127:96] == 32'hFFFFFFFF) ?
	       requestR[86:64] :
	       23'd4194304 ;
  assign sfd___3__h14964 =
	     requestR[159:128] <<
	     IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d662 ;
  assign sfd___3__h38912 =
	     sfd__h30911 <<
	     IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d1318 ;
  assign sfd___3__h48643 =
	     sfd__h40891 <<
	     IF_requestR_3_BIT_159_0_THEN_0_ELSE_IF_request_ETC___d1534 ;
  assign sfd___3__h8752 =
	     sfd__h3848 <<
	     IF_IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_ETC___d303 ;
  assign sfd__h122608 =
	     { 1'b0,
	       _theResult___fst_exp__h122590 != 11'd0,
	       _theResult___snd__h122541[56:5] } +
	     54'd1 ;
  assign sfd__h132255 =
	     { 1'b0,
	       _theResult___fst_exp__h132163 != 11'd0,
	       sfdin__h132157[56:5] } +
	     54'd1 ;
  assign sfd__h141013 =
	     { 1'b0,
	       _theResult___fst_exp__h140994 != 11'd0,
	       _theResult___snd__h140940[56:5] } +
	     54'd1 ;
  assign sfd__h14991 = { 2'd0, sfd___3__h14964[31:9] } + 25'd1 ;
  assign sfd__h15530 =
	     { 1'b0, x__h15515[7:0] != 8'd0, sfd___3__h14964[30:8] } + 25'd1 ;
  assign sfd__h30911 = { sfd__h3848, 23'd0 } ;
  assign sfd__h3848 = requestR[159] ? -requestR[159:128] : requestR[159:128] ;
  assign sfd__h38939 = { 2'd0, sfd___3__h38912[54:3] } + 54'd1 ;
  assign sfd__h39682 =
	     { 1'b0, x__h39667[10:0] != 11'd0, sfd___3__h38912[53:2] } +
	     54'd1 ;
  assign sfd__h40891 = { requestR[159:128], 23'd0 } ;
  assign sfd__h48670 = { 2'd0, sfd___3__h48643[54:3] } + 54'd1 ;
  assign sfd__h49412 =
	     { 1'b0, x__h49397[10:0] != 11'd0, sfd___3__h48643[53:2] } +
	     54'd1 ;
  assign sfd__h57203 = { value__h50829, 3'd0 } ;
  assign sfd__h73032 =
	     { 1'b0,
	       _theResult___fst_exp__h72940 != 8'd0,
	       sfdin__h72934[56:34] } +
	     25'd1 ;
  assign sfd__h81644 =
	     { 1'b0,
	       _theResult___fst_exp__h81626 != 8'd0,
	       _theResult___snd__h81577[56:34] } +
	     25'd1 ;
  assign sfd__h8779 = { 2'd0, sfd___3__h8752[31:9] } + 25'd1 ;
  assign sfd__h90885 =
	     { 1'b0,
	       _theResult___fst_exp__h90793 != 8'd0,
	       sfdin__h90787[56:34] } +
	     25'd1 ;
  assign sfd__h9322 =
	     { 1'b0, x__h9307[7:0] != 8'd0, sfd___3__h8752[30:8] } + 25'd1 ;
  assign sfd__h99527 =
	     { 1'b0,
	       _theResult___fst_exp__h99508 != 8'd0,
	       _theResult___snd__h99454[56:34] } +
	     25'd1 ;
  assign sfdin__h132157 =
	     _theResult____h123927[56] ?
	       _theResult___snd__h132174 :
	       _theResult___snd__h132185 ;
  assign sfdin__h72934 =
	     _theResult____h64833[56] ?
	       _theResult___snd__h72951 :
	       _theResult___snd__h72962 ;
  assign sfdin__h90787 =
	     _theResult____h82557[56] ?
	       _theResult___snd__h90804 :
	       _theResult___snd__h90815 ;
  assign value__h101781 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 &&
	      !sV1_sfd__h1280[22]) ?
	       _theResult___fst_sfd__h102036 :
	       sV1_sfd__h1280 ;
  assign value__h16748 = { 1'b0, sV1_exp__h1279 != 8'd0, sV1_sfd__h1280 } ;
  assign value__h50829 =
	     { 1'b0, requestR[190:180] != 11'd0, requestR[179:128] } ;
  assign value__h53042 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 &&
	      !requestR[179]) ?
	       _theResult___fst_sfd__h53499 :
	       requestR[179:128] ;
  assign x__h10000 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d514,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d517,
	       requestR[159:128] != 32'd0 &&
	       IF_requestR_3_BIT_159_0_THEN_NEG_requestR_3_BI_ETC___d526 } ;
  assign x__h100580 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
		(requestR[190:180] == 11'd2047 ||
		 requestR[190:180] == 11'd0) &&
		requestR[179:128] == 52'd0) ?
		 requestR[191] :
		 IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2935,
	       x__h52982,
	       IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d2893 } ;
  assign x__h100695 =
	     { (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
		 requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179] :
		 (requestR[190:180] != 11'd2047 ||
		  requestR[179:128] != 52'd0) &&
		 (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
		 IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2986,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d2997,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3013,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3026,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_THE_ETC___d3039 } ;
  assign x__h101712 =
	     (x__h101722 == 11'd2047 &&
	      IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3710[51]) ?
	       64'h7FF8000000000000 :
	       res__h142414 ;
  assign x__h101722 =
	     (sV1_exp__h1279 == 8'd255) ?
	       11'd2047 :
	       _theResult___fst_exp__h141787 ;
  assign x__h10323 =
	     { 33'h1FFFFFFFE,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d752,
	       (requestR[159:128] == 32'd0 ||
		!requestR[159] &&
		NOT_requestR_3_BIT_158_37_38_AND_NOT_requestR__ETC___d628 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 ||
		_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h16042 } ;
  assign x__h124635 = b__h16746 << x__h124668 ;
  assign x__h124668 =
	     12'd57 -
	     _3074_MINUS_SEXT_IF_requestR_3_BITS_191_TO_160__ETC___d3244 ;
  assign x__h142516 =
	     { IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3784,
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 != 23'd0) &&
	       (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3791,
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 != 23'd0) &&
	       (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3805,
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 != 23'd0) &&
	       (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3817,
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 != 23'd0) &&
	       (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0) &&
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d3829 } ;
  assign x__h143473 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3851 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   IF_requestR_3_BITS_126_TO_116_842_EQ_2047_843__ETC___d3890)))) ;
  assign x__h147023 =
	     { requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3896,
	       4'd0 } ;
  assign x__h148056 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3851 ?
	       64'h7FF8000000000000 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] != 52'd0 &&
		 !requestR[179]) ?
		  requestR[127:64] :
		  ((requestR[126:116] == 11'd2047 &&
		    requestR[115:64] != 52'd0 &&
		    !requestR[115]) ?
		     requestR[191:128] :
		     ((requestR[190:180] == 11'd2047 && requestR[179] &&
		       requestR[126:116] == 11'd2047 &&
		       requestR[115]) ?
			64'h7FF8000000000000 :
			((requestR[190:180] == 11'd2047 && requestR[179]) ?
			   requestR[127:64] :
			   ((requestR[126:116] == 11'd2047 && requestR[115]) ?
			      requestR[191:128] :
			      IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3905))))) ;
  assign x__h152535 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920 ?
	       64'd0 :
	       res__h154213 ;
  assign x__h15515 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d665 +
	     9'd127 ;
  assign x__h155265 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920 ?
	       64'd0 :
	       res__h156943 ;
  assign x__h156962 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[126:116] == 11'd2047 && requestR[115:64] != 52'd0,
	       4'd0 } ;
  assign x__h157177 =
	     requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d3920 ?
	       64'd0 :
	       res__h158855 ;
  assign x__h159406 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0) ?
	       res___1__h159426 :
	       ((requestR[190:180] == 11'd2047 &&
		 requestR[179:128] == 52'd0) ?
		  res___1__h159864 :
		  IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d3983) ;
  assign x__h160032 =
	     fpu$server_core_response_get[69] ?
	       ((fpu$server_core_response_get[35:28] == 8'd255 &&
		 fpu$server_core_response_get[27:5] != 23'd0) ?
		  64'hFFFFFFFF7FC00000 :
		  res__h160108) :
	       ((fpu$server_core_response_get[67:57] == 11'd2047 &&
		 fpu$server_core_response_get[56:5] != 52'd0) ?
		  64'h7FF8000000000000 :
		  fpu$server_core_response_get[68:5]) ;
  assign x__h16181 =
	     { 2'd0,
	       NOT_requestR_3_BITS_159_TO_128_72_EQ_0_73_74_A_ETC___d830,
	       requestR[159:128] != 32'd0 &&
	       (requestR[159] ||
		requestR_3_BIT_158_37_OR_requestR_3_BIT_157_39_ETC___d819) &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d666 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d667,
	       requestR[159:128] != 32'd0 &&
	       requestR_3_BIT_159_0_OR_requestR_3_BIT_158_37__ETC___d841 } ;
  assign x__h16500 = { {32{x__h16503[31]}}, x__h16503 } ;
  assign x__h16503 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d864 ?
	       32'h7FFFFFFF :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d936 ;
  assign x__h17422 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877 >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d903) &
	     {57{IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d877[56]}} ;
  assign x__h17836 =
	     { sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 ||
	       sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 == 23'd0 ||
	       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d947,
	       3'd0,
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 != 23'd0) &&
	       (sV1_exp__h1279 != 8'd0 || sV1_sfd__h1280 != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_ETC___d958 } ;
  assign x__h18128 = { {32{x__h18131[31]}}, x__h18131 } ;
  assign x__h18131 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d864 ?
	       32'hFFFFFFFF :
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d999 ;
  assign x__h18552 =
	     { sV1_exp__h1279 != 8'd0, sV1_sfd__h1280, 33'd0 } >>
	     NEG_SEXT_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d968 ;
  assign x__h18630 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1018 :
		 IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1007,
	       3'd0,
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 == 23'd0) &&
	       (sV1_exp__h1279 != 8'd255 || sV1_sfd__h1280 != 23'd0) &&
	       NOT_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFF_ETC___d1012 } ;
  assign x__h18912 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1042 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1088 ;
  assign x__h20952 =
	     { IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1090,
	       4'd0 } ;
  assign x__h21581 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1042 ?
	       64'hFFFFFFFF7FC00000 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1105 ;
  assign x__h24141 = { 32'hFFFFFFFF, requestR[159:128] } ;
  assign x__h24296 =
	     { {32{requestR_BITS_159_TO_128__q1[31]}},
	       requestR_BITS_159_TO_128__q1 } ;
  assign x__h24468 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131 ?
	       64'd0 :
	       res__h25338 ;
  assign x__h25986 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131 ?
	       64'd0 :
	       res__h26856 ;
  assign x__h26875 =
	     { sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0 ||
	       sV2_exp__h1396 == 8'd255 && sV2_sfd__h1397 != 23'd0,
	       4'd0 } ;
  assign x__h27090 =
	     IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d1131 ?
	       64'd0 :
	       res__h27960 ;
  assign x__h28210 =
	     (sV1_exp__h1279 == 8'd255 && sV1_sfd__h1280 != 23'd0) ?
	       res___1__h28230 :
	       IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFF_ETC___d1182 ;
  assign x__h30417 = { requestR[127], requestR[190:128] } ;
  assign x__h30573 = { !requestR[127], requestR[190:128] } ;
  assign x__h30731 = { requestR[191] != requestR[127], requestR[190:128] } ;
  assign x__h30896 =
	     { requestR[159:128] != 32'd0 &&
	       IF_NOT_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT__ETC___d1378,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h40403,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1475 } ;
  assign x__h3284 = { 32'hFFFFFFFF, x__h3291 } ;
  assign x__h3291 =
	     { requestR[127:96] == 32'hFFFFFFFF && requestR[95],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign x__h3455 = { 32'hFFFFFFFF, x__h3462 } ;
  assign x__h3462 =
	     { requestR[127:96] != 32'hFFFFFFFF || !requestR[95],
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign x__h3623 = { 32'hFFFFFFFF, x__h3630 } ;
  assign x__h3630 =
	     { (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) !=
	       (requestR[127:96] == 32'hFFFFFFFF && requestR[95]),
	       IF_requestR_3_BITS_191_TO_160_8_EQ_0xFFFFFFFF__ETC___d33 } ;
  assign x__h3827 = { 32'hFFFFFFFF, x__h3833 } ;
  assign x__h3833 =
	     { requestR[159:128] != 32'd0 &&
	       (NOT_IF_requestR_3_BIT_159_0_THEN_NEG_requestR__ETC___d311 ?
		  requestR[159] :
		  IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d373),
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d433,
	       (requestR[159:128] == 32'd0 ||
		NOT_IF_requestR_3_BIT_159_0_THEN_NEG_requestR__ETC___d311) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h9835 } ;
  assign x__h39667 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1321 +
	     12'd1023 ;
  assign x__h40559 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 ||
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324 &&
		!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1326 &&
		_theResult___fst_exp__h40394 == 11'd2047 &&
		_theResult___fst_sfd__h40395 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1322 &&
	       !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d1324 &&
	       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159__ETC___d1492 } ;
  assign x__h40879 =
	     { 1'd0,
	       (requestR[159:128] == 32'd0) ?
		 11'd0 :
		 _theResult___snd_fst_exp__h50132,
	       IF_requestR_3_BITS_159_TO_128_72_EQ_0_73_OR_NO_ETC___d1659 } ;
  assign x__h49397 =
	     _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1537 +
	     12'd1023 ;
  assign x__h50262 =
	     { 2'd0,
	       requestR[159:128] != 32'd0 &&
	       (!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 ||
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539 &&
		!_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1540 &&
		_theResult___fst_exp__h50123 == 11'd2047 &&
		_theResult___fst_sfd__h50124 == 52'd0),
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539,
	       requestR[159:128] != 32'd0 &&
	       _32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1538 &&
	       !_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_THEN_ETC___d1539 &&
	       IF_32_MINUS_0_CONCAT_IF_requestR_3_BIT_159_0_T_ETC___d1676 } ;
  assign x__h50581 = { {32{x__h50584[31]}}, x__h50584 } ;
  assign x__h50584 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'h7FFFFFFF :
	       IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d1770 ;
  assign x__h51503 =
	     IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711 >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737 |
	     ~(86'h3FFFFFFFFFFFFFFFFFFFFF >>
	       NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1737) &
	     {86{IF_requestR_3_BIT_191_276_THEN_NEG_0b0_CONCAT__ETC___d1711[85]}} ;
  assign x__h51900 =
	     { requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	       requestR[190:180] == 11'd2047 && requestR[179:128] == 52'd0 ||
	       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1781,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       (requestR[190:180] != 11'd0 || requestR[179:128] != 52'd0) &&
	       IF_NEG_SEXT_requestR_3_BITS_190_TO_180_689_MIN_ETC___d1792 } ;
  assign x__h52192 = { {32{x__h52195[31]}}, x__h52195 } ;
  assign x__h52195 =
	     (requestR[190:180] == 11'd2047 && requestR[179:128] != 52'd0 ||
	      !requestR[191] && requestR[190:180] == 11'd2047 &&
	      requestR[179:128] == 52'd0) ?
	       32'hFFFFFFFF :
	       (requestR[191] ?
		  32'd0 :
		  ((requestR[190:180] == 11'd2047 &&
		    requestR[179:128] == 52'd0) ?
		     32'hFFFFFFFF :
		     IF_requestR_3_BITS_190_TO_180_689_EQ_0_700_AND_ETC___d1831)) ;
  assign x__h52616 =
	     { requestR[190:180] != 11'd0, requestR[179:128], 33'd0 } >>
	     NEG_SEXT_requestR_3_BITS_190_TO_180_689_MINUS__ETC___d1802 ;
  assign x__h52694 =
	     { requestR[191] ?
		 requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1852 :
		 requestR_3_BITS_190_TO_180_689_EQ_2047_690_AND_ETC___d1841,
	       3'd0,
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] == 52'd0) &&
	       (requestR[190:180] != 11'd2047 ||
		requestR[179:128] != 52'd0) &&
	       NOT_requestR_3_BITS_190_TO_180_689_EQ_0_700_70_ETC___d1846 } ;
  assign x__h52972 =
	     (x__h52982 == 8'd255 &&
	      IF_requestR_3_BITS_190_TO_180_689_EQ_2047_690__ETC___d2893[22]) ?
	       64'hFFFFFFFF7FC00000 :
	       res__h100574 ;
  assign x__h52982 =
	     (requestR[190:180] == 11'd2047) ?
	       8'd255 :
	       _theResult___fst_exp__h100098 ;
  assign x__h83265 = sfd__h57203 << x__h83298 ;
  assign x__h83298 =
	     12'd57 -
	     _3970_MINUS_SEXT_requestR_3_BITS_190_TO_180_689_ETC___d2409 ;
  assign x__h9307 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_159_0_T_ETC___d306 +
	     9'd127 ;
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd254;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd255 : 8'd254;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 =
	      requestR[191] ? 8'd254 : 8'd255;
      default: CASE_requestR_BITS_194_TO_192_0x1_254_0x2_IF_r_ETC__q2 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      23'd8388607;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd0 : 23'd8388607;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 =
	      requestR[191] ? 23'd8388607 : 23'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_8388607_0x2__ETC__q3 = 23'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd2046;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2047 :
		11'd2046;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		11'd2046 :
		11'd2047;
      default: CASE_requestR_BITS_194_TO_192_0x1_2046_0x2_IF__ETC__q4 = 11'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h1:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      52'hFFFFFFFFFFFFF;
      3'h2:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'd0 :
		52'hFFFFFFFFFFFFF;
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 =
	      (requestR[191:160] == 32'hFFFFFFFF && requestR[159]) ?
		52'hFFFFFFFFFFFFF :
		52'd0;
      default: CASE_requestR_BITS_194_TO_192_0x1_450359962737_ETC__q5 = 52'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 =
	      requestR[194:192];
      3'h1: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 = 3'd4;
      3'h2: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 = 3'd3;
      3'h3: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 = 3'd2;
      3'h4: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 = 3'd1;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x0_5_THEN__ETC___d54 =
		   3'd0;
    endcase
  end
  always@(guard__h8762 or requestR)
  begin
    case (guard__h8762)
      2'b0, 2'b01, 2'b10:
	  CASE_guard762_0b0_requestR_BIT_159_0b1_request_ETC__q8 =
	      requestR[159];
      2'd3:
	  CASE_guard762_0b0_requestR_BIT_159_0b1_request_ETC__q8 =
	      guard__h8762 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h8762)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
	      (guard__h8762 == 2'b0) ?
		requestR[159] :
		(guard__h8762 == 2'b01 || guard__h8762 == 2'b10 ||
		 guard__h8762 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q9 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h9292 or requestR)
  begin
    case (guard__h9292)
      2'b0, 2'b01, 2'b10:
	  CASE_guard292_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      requestR[159];
      2'd3:
	  CASE_guard292_0b0_requestR_BIT_159_0b1_request_ETC__q10 =
	      guard__h9292 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h9292)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
	      (guard__h9292 == 2'b0) ?
		requestR[159] :
		(guard__h9292 == 2'b01 || guard__h9292 == 2'b10 ||
		 guard__h9292 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q11 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h8762 or _theResult___exp__h9178)
  begin
    case (guard__h8762)
      2'b0: CASE_guard762_0b0_0_0b1_theResult___exp178_0b1_ETC__q12 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard762_0b0_0_0b1_theResult___exp178_0b1_ETC__q12 =
	      _theResult___exp__h9178;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d395 or
	  guard__h8762 or
	  _theResult___exp__h9178 or
	  CASE_guard762_0b0_0_0b1_theResult___exp178_0b1_ETC__q12)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d395;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 =
	      (guard__h8762 == 2'b0 || requestR[159]) ?
		8'd0 :
		_theResult___exp__h9178;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 =
	      CASE_guard762_0b0_0_0b1_theResult___exp178_0b1_ETC__q12;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d398 =
		   8'd0;
    endcase
  end
  always@(guard__h8762 or out_exp__h9181 or _theResult___exp__h9178)
  begin
    case (guard__h8762)
      2'b0, 2'b01:
	  CASE_guard762_0b0_0_0b1_0_0b10_out_exp181_0b11_ETC__q13 = 8'd0;
      2'b10:
	  CASE_guard762_0b0_0_0b1_0_0b10_out_exp181_0b11_ETC__q13 =
	      out_exp__h9181;
      2'b11:
	  CASE_guard762_0b0_0_0b1_0_0b10_out_exp181_0b11_ETC__q13 =
	      _theResult___exp__h9178;
    endcase
  end
  always@(guard__h9292 or x__h9307 or _theResult___exp__h9731)
  begin
    case (guard__h9292)
      2'b0:
	  CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      x__h9307[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_theResu_ETC__q14 =
	      _theResult___exp__h9731;
    endcase
  end
  always@(requestR or
	  x__h9307 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d423 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d421 or
	  CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_theResu_ETC__q14)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
	      x__h9307[7:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d423;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d421;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
	      CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_theResu_ETC__q14;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d427 =
		   8'd0;
    endcase
  end
  always@(guard__h9292 or
	  x__h9307 or out_exp__h9734 or _theResult___exp__h9731)
  begin
    case (guard__h9292)
      2'b0, 2'b01:
	  CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_x307_BI_ETC__q15 =
	      x__h9307[7:0];
      2'b10:
	  CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_x307_BI_ETC__q15 =
	      out_exp__h9734;
      2'b11:
	  CASE_guard292_0b0_x307_BITS_7_TO_0_0b1_x307_BI_ETC__q15 =
	      _theResult___exp__h9731;
    endcase
  end
  always@(guard__h8762 or sfd___3__h8752 or _theResult___sfd__h9179)
  begin
    case (guard__h8762)
      2'b0:
	  CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q16 =
	      sfd___3__h8752[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q16 =
	      _theResult___sfd__h9179;
    endcase
  end
  always@(requestR or
	  sfd___3__h8752 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d446 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d444 or
	  CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q16)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
	      sfd___3__h8752[31:9];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d446;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d444;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
	      CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q16;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d450 =
		   23'd0;
    endcase
  end
  always@(guard__h8762 or
	  sfd___3__h8752 or out_sfd__h9182 or _theResult___sfd__h9179)
  begin
    case (guard__h8762)
      2'b0, 2'b01:
	  CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q17 =
	      sfd___3__h8752[31:9];
      2'b10:
	  CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q17 =
	      out_sfd__h9182;
      2'b11:
	  CASE_guard762_0b0_sfd___3752_BITS_31_TO_9_0b1__ETC__q17 =
	      _theResult___sfd__h9179;
    endcase
  end
  always@(guard__h9292 or sfd___3__h8752 or _theResult___sfd__h9732)
  begin
    case (guard__h9292)
      2'b0:
	  CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q18 =
	      sfd___3__h8752[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q18 =
	      _theResult___sfd__h9732;
    endcase
  end
  always@(requestR or
	  sfd___3__h8752 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d464 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d462 or
	  CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q18)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
	      sfd___3__h8752[30:8];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d464;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d462;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
	      CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q18;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d468 =
		   23'd0;
    endcase
  end
  always@(guard__h9292 or
	  sfd___3__h8752 or out_sfd__h9735 or _theResult___sfd__h9732)
  begin
    case (guard__h9292)
      2'b0, 2'b01:
	  CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q19 =
	      sfd___3__h8752[30:8];
      2'b10:
	  CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q19 =
	      out_sfd__h9735;
      2'b11:
	  CASE_guard292_0b0_sfd___3752_BITS_30_TO_8_0b1__ETC__q19 =
	      _theResult___sfd__h9732;
    endcase
  end
  always@(guard__h14974 or out_exp__h15390 or _theResult___exp__h15387)
  begin
    case (guard__h14974)
      2'b0, 2'b01:
	  CASE_guard4974_0b0_0_0b1_0_0b10_out_exp5390_0b_ETC__q22 = 8'd0;
      2'b10:
	  CASE_guard4974_0b0_0_0b1_0_0b10_out_exp5390_0b_ETC__q22 =
	      out_exp__h15390;
      2'b11:
	  CASE_guard4974_0b0_0_0b1_0_0b10_out_exp5390_0b_ETC__q22 =
	      _theResult___exp__h15387;
    endcase
  end
  always@(guard__h14974 or _theResult___exp__h15387)
  begin
    case (guard__h14974)
      2'b0: CASE_guard4974_0b0_0_0b1_theResult___exp5387_0_ETC__q23 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard4974_0b0_0_0b1_theResult___exp5387_0_ETC__q23 =
	      _theResult___exp__h15387;
    endcase
  end
  always@(requestR or
	  guard__h14974 or
	  _theResult___exp__h15387 or
	  CASE_guard4974_0b0_0_0b1_theResult___exp5387_0_ETC__q23)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard4974_ETC__q24 =
	      (guard__h14974 == 2'b0) ? 8'd0 : _theResult___exp__h15387;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard4974_ETC__q24 =
	      CASE_guard4974_0b0_0_0b1_theResult___exp5387_0_ETC__q23;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard4974_ETC__q24 = 8'd0;
    endcase
  end
  always@(guard__h15500 or x__h15515 or _theResult___exp__h15939)
  begin
    case (guard__h15500)
      2'b0:
	  CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      x__h15515[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_theRe_ETC__q25 =
	      _theResult___exp__h15939;
    endcase
  end
  always@(requestR or
	  x__h15515 or
	  guard__h15500 or
	  _theResult___exp__h15939 or
	  CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_theRe_ETC__q25)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 =
	      x__h15515[7:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 =
	      (guard__h15500 == 2'b0) ?
		x__h15515[7:0] :
		_theResult___exp__h15939;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 =
	      CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_theRe_ETC__q25;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d746 =
		   8'd0;
    endcase
  end
  always@(guard__h15500 or
	  x__h15515 or out_exp__h15942 or _theResult___exp__h15939)
  begin
    case (guard__h15500)
      2'b0, 2'b01:
	  CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_x5515_ETC__q26 =
	      x__h15515[7:0];
      2'b10:
	  CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_x5515_ETC__q26 =
	      out_exp__h15942;
      2'b11:
	  CASE_guard5500_0b0_x5515_BITS_7_TO_0_0b1_x5515_ETC__q26 =
	      _theResult___exp__h15939;
    endcase
  end
  always@(guard__h15500 or sfd___3__h14964 or _theResult___sfd__h15940)
  begin
    case (guard__h15500)
      2'b0:
	  CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q27 =
	      sfd___3__h14964[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q27 =
	      _theResult___sfd__h15940;
    endcase
  end
  always@(requestR or
	  sfd___3__h14964 or
	  guard__h15500 or
	  _theResult___sfd__h15940 or
	  CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q27)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 =
	      sfd___3__h14964[30:8];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 =
	      (guard__h15500 == 2'b0) ?
		sfd___3__h14964[30:8] :
		_theResult___sfd__h15940;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 =
	      CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q27;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d784 =
		   23'd0;
    endcase
  end
  always@(guard__h15500 or
	  sfd___3__h14964 or out_sfd__h15943 or _theResult___sfd__h15940)
  begin
    case (guard__h15500)
      2'b0, 2'b01:
	  CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q28 =
	      sfd___3__h14964[30:8];
      2'b10:
	  CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q28 =
	      out_sfd__h15943;
      2'b11:
	  CASE_guard5500_0b0_sfd___34964_BITS_30_TO_8_0b_ETC__q28 =
	      _theResult___sfd__h15940;
    endcase
  end
  always@(guard__h14974 or sfd___3__h14964 or _theResult___sfd__h15388)
  begin
    case (guard__h14974)
      2'b0:
	  CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q29 =
	      sfd___3__h14964[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q29 =
	      _theResult___sfd__h15388;
    endcase
  end
  always@(requestR or
	  sfd___3__h14964 or
	  guard__h14974 or
	  _theResult___sfd__h15388 or
	  CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q29)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 =
	      sfd___3__h14964[31:9];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 =
	      (guard__h14974 == 2'b0) ?
		sfd___3__h14964[31:9] :
		_theResult___sfd__h15388;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 =
	      CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q29;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d769 =
		   23'd0;
    endcase
  end
  always@(guard__h14974 or
	  sfd___3__h14964 or out_sfd__h15391 or _theResult___sfd__h15388)
  begin
    case (guard__h14974)
      2'b0, 2'b01:
	  CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q30 =
	      sfd___3__h14964[31:9];
      2'b10:
	  CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q30 =
	      out_sfd__h15391;
      2'b11:
	  CASE_guard4974_0b0_sfd___34964_BITS_31_TO_9_0b_ETC__q30 =
	      _theResult___sfd__h15388;
    endcase
  end
  always@(guard__h38922 or requestR)
  begin
    case (guard__h38922)
      2'b0, 2'b01, 2'b10:
	  CASE_guard8922_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      requestR[159];
      2'd3:
	  CASE_guard8922_0b0_requestR_BIT_159_0b1_reques_ETC__q35 =
	      guard__h38922 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h38922)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
	      (guard__h38922 == 2'b0) ?
		requestR[159] :
		(guard__h38922 == 2'b01 || guard__h38922 == 2'b10 ||
		 guard__h38922 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q36 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h39652 or requestR)
  begin
    case (guard__h39652)
      2'b0, 2'b01, 2'b10:
	  CASE_guard9652_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      requestR[159];
      2'd3:
	  CASE_guard9652_0b0_requestR_BIT_159_0b1_reques_ETC__q37 =
	      guard__h39652 == 2'b11 && requestR[159];
    endcase
  end
  always@(requestR or guard__h39652)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
	      (guard__h39652 == 2'b0) ?
		requestR[159] :
		(guard__h39652 == 2'b01 || guard__h39652 == 2'b10 ||
		 guard__h39652 == 2'b11) &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q38 =
		   requestR[194:192] == 3'h1 && requestR[159];
    endcase
  end
  always@(guard__h39652 or x__h39667 or _theResult___exp__h40294)
  begin
    case (guard__h39652)
      2'b0:
	  CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      x__h39667[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_theR_ETC__q39 =
	      _theResult___exp__h40294;
    endcase
  end
  always@(requestR or
	  x__h39667 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1426 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1424 or
	  CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_theR_ETC__q39)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
	      x__h39667[10:0];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1426;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1424;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
	      CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_theR_ETC__q39;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1430 =
		   11'd0;
    endcase
  end
  always@(guard__h39652 or
	  x__h39667 or out_exp__h40297 or _theResult___exp__h40294)
  begin
    case (guard__h39652)
      2'b0, 2'b01:
	  CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_x966_ETC__q40 =
	      x__h39667[10:0];
      2'b10:
	  CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_x966_ETC__q40 =
	      out_exp__h40297;
      2'b11:
	  CASE_guard9652_0b0_x9667_BITS_10_TO_0_0b1_x966_ETC__q40 =
	      _theResult___exp__h40294;
    endcase
  end
  always@(guard__h39652 or sfd___3__h38912 or _theResult___sfd__h40295)
  begin
    case (guard__h39652)
      2'b0:
	  CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q41 =
	      sfd___3__h38912[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q41 =
	      _theResult___sfd__h40295;
    endcase
  end
  always@(requestR or
	  sfd___3__h38912 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1467 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1465 or
	  CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q41)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
	      sfd___3__h38912[53:2];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1467;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1465;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
	      CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q41;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1471 =
		   52'd0;
    endcase
  end
  always@(guard__h39652 or
	  sfd___3__h38912 or out_sfd__h40298 or _theResult___sfd__h40295)
  begin
    case (guard__h39652)
      2'b0, 2'b01:
	  CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q42 =
	      sfd___3__h38912[53:2];
      2'b10:
	  CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q42 =
	      out_sfd__h40298;
      2'b11:
	  CASE_guard9652_0b0_sfd___38912_BITS_53_TO_2_0b_ETC__q42 =
	      _theResult___sfd__h40295;
    endcase
  end
  always@(guard__h38922 or _theResult___exp__h39538)
  begin
    case (guard__h38922)
      2'b0: CASE_guard8922_0b0_0_0b1_theResult___exp9538_0_ETC__q43 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard8922_0b0_0_0b1_theResult___exp9538_0_ETC__q43 =
	      _theResult___exp__h39538;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1398 or
	  guard__h38922 or
	  _theResult___exp__h39538 or
	  CASE_guard8922_0b0_0_0b1_theResult___exp9538_0_ETC__q43)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1398;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 =
	      (guard__h38922 == 2'b0 || requestR[159]) ?
		11'd0 :
		_theResult___exp__h39538;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 =
	      CASE_guard8922_0b0_0_0b1_theResult___exp9538_0_ETC__q43;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1401 =
		   11'd0;
    endcase
  end
  always@(guard__h38922 or out_exp__h39541 or _theResult___exp__h39538)
  begin
    case (guard__h38922)
      2'b0, 2'b01:
	  CASE_guard8922_0b0_0_0b1_0_0b10_out_exp9541_0b_ETC__q44 = 11'd0;
      2'b10:
	  CASE_guard8922_0b0_0_0b1_0_0b10_out_exp9541_0b_ETC__q44 =
	      out_exp__h39541;
      2'b11:
	  CASE_guard8922_0b0_0_0b1_0_0b10_out_exp9541_0b_ETC__q44 =
	      _theResult___exp__h39538;
    endcase
  end
  always@(guard__h38922 or sfd___3__h38912 or _theResult___sfd__h39539)
  begin
    case (guard__h38922)
      2'b0:
	  CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q45 =
	      sfd___3__h38912[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q45 =
	      _theResult___sfd__h39539;
    endcase
  end
  always@(requestR or
	  sfd___3__h38912 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1449 or
	  IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1447 or
	  CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q45)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
	      sfd___3__h38912[54:3];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1449;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
	      IF_IF_IF_requestR_3_BIT_159_0_THEN_NEG_request_ETC___d1447;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
	      CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q45;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1453 =
		   52'd0;
    endcase
  end
  always@(guard__h38922 or
	  sfd___3__h38912 or out_sfd__h39542 or _theResult___sfd__h39539)
  begin
    case (guard__h38922)
      2'b0, 2'b01:
	  CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q46 =
	      sfd___3__h38912[54:3];
      2'b10:
	  CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q46 =
	      out_sfd__h39542;
      2'b11:
	  CASE_guard8922_0b0_sfd___38912_BITS_54_TO_3_0b_ETC__q46 =
	      _theResult___sfd__h39539;
    endcase
  end
  always@(guard__h48653 or out_exp__h49272 or _theResult___exp__h49269)
  begin
    case (guard__h48653)
      2'b0, 2'b01:
	  CASE_guard8653_0b0_0_0b1_0_0b10_out_exp9272_0b_ETC__q49 = 11'd0;
      2'b10:
	  CASE_guard8653_0b0_0_0b1_0_0b10_out_exp9272_0b_ETC__q49 =
	      out_exp__h49272;
      2'b11:
	  CASE_guard8653_0b0_0_0b1_0_0b10_out_exp9272_0b_ETC__q49 =
	      _theResult___exp__h49269;
    endcase
  end
  always@(guard__h48653 or _theResult___exp__h49269)
  begin
    case (guard__h48653)
      2'b0: CASE_guard8653_0b0_0_0b1_theResult___exp9269_0_ETC__q50 = 11'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard8653_0b0_0_0b1_theResult___exp9269_0_ETC__q50 =
	      _theResult___exp__h49269;
    endcase
  end
  always@(requestR or
	  guard__h48653 or
	  _theResult___exp__h49269 or
	  CASE_guard8653_0b0_0_0b1_theResult___exp9269_0_ETC__q50)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard8653_ETC__q51 =
	      (guard__h48653 == 2'b0) ? 11'd0 : _theResult___exp__h49269;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard8653_ETC__q51 =
	      CASE_guard8653_0b0_0_0b1_theResult___exp9269_0_ETC__q50;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard8653_ETC__q51 =
		   11'd0;
    endcase
  end
  always@(guard__h49382 or x__h49397 or _theResult___exp__h50024)
  begin
    case (guard__h49382)
      2'b0:
	  CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      x__h49397[10:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_theR_ETC__q52 =
	      _theResult___exp__h50024;
    endcase
  end
  always@(requestR or
	  x__h49397 or
	  guard__h49382 or
	  _theResult___exp__h50024 or
	  CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_theR_ETC__q52)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 =
	      x__h49397[10:0];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 =
	      (guard__h49382 == 2'b0) ?
		x__h49397[10:0] :
		_theResult___exp__h50024;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 =
	      CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_theR_ETC__q52;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1618 =
		   11'd0;
    endcase
  end
  always@(guard__h49382 or
	  x__h49397 or out_exp__h50027 or _theResult___exp__h50024)
  begin
    case (guard__h49382)
      2'b0, 2'b01:
	  CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_x939_ETC__q53 =
	      x__h49397[10:0];
      2'b10:
	  CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_x939_ETC__q53 =
	      out_exp__h50027;
      2'b11:
	  CASE_guard9382_0b0_x9397_BITS_10_TO_0_0b1_x939_ETC__q53 =
	      _theResult___exp__h50024;
    endcase
  end
  always@(guard__h49382 or sfd___3__h48643 or _theResult___sfd__h50025)
  begin
    case (guard__h49382)
      2'b0:
	  CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q54 =
	      sfd___3__h48643[53:2];
      2'b01, 2'b10, 2'b11:
	  CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q54 =
	      _theResult___sfd__h50025;
    endcase
  end
  always@(requestR or
	  sfd___3__h48643 or
	  guard__h49382 or
	  _theResult___sfd__h50025 or
	  CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q54)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 =
	      sfd___3__h48643[53:2];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 =
	      (guard__h49382 == 2'b0) ?
		sfd___3__h48643[53:2] :
		_theResult___sfd__h50025;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 =
	      CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q54;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1655 =
		   52'd0;
    endcase
  end
  always@(guard__h49382 or
	  sfd___3__h48643 or out_sfd__h50028 or _theResult___sfd__h50025)
  begin
    case (guard__h49382)
      2'b0, 2'b01:
	  CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q55 =
	      sfd___3__h48643[53:2];
      2'b10:
	  CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q55 =
	      out_sfd__h50028;
      2'b11:
	  CASE_guard9382_0b0_sfd___38643_BITS_53_TO_2_0b_ETC__q55 =
	      _theResult___sfd__h50025;
    endcase
  end
  always@(guard__h48653 or sfd___3__h48643 or _theResult___sfd__h49270)
  begin
    case (guard__h48653)
      2'b0:
	  CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q56 =
	      sfd___3__h48643[54:3];
      2'b01, 2'b10, 2'b11:
	  CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q56 =
	      _theResult___sfd__h49270;
    endcase
  end
  always@(requestR or
	  sfd___3__h48643 or
	  guard__h48653 or
	  _theResult___sfd__h49270 or
	  CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q56)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 =
	      sfd___3__h48643[54:3];
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 =
	      (guard__h48653 == 2'b0) ?
		sfd___3__h48643[54:3] :
		_theResult___sfd__h49270;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 =
	      CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q56;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d1640 =
		   52'd0;
    endcase
  end
  always@(guard__h48653 or
	  sfd___3__h48643 or out_sfd__h49273 or _theResult___sfd__h49270)
  begin
    case (guard__h48653)
      2'b0, 2'b01:
	  CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q57 =
	      sfd___3__h48643[54:3];
      2'b10:
	  CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q57 =
	      out_sfd__h49273;
      2'b11:
	  CASE_guard8653_0b0_sfd___38643_BITS_54_TO_3_0b_ETC__q57 =
	      _theResult___sfd__h49270;
    endcase
  end
  always@(guard__h64843 or
	  _theResult___fst_exp__h72940 or _theResult___exp__h73466)
  begin
    case (guard__h64843)
      2'b0:
	  CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q70 =
	      _theResult___fst_exp__h72940;
      2'b01, 2'b10, 2'b11:
	  CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q70 =
	      _theResult___exp__h73466;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h72940 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2230 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2228 or
	  CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q70)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
	      _theResult___fst_exp__h72940;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2230;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2228;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
	      CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q70;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2234 =
		   8'd0;
    endcase
  end
  always@(guard__h64843 or
	  _theResult___fst_exp__h72940 or
	  out_exp__h73469 or _theResult___exp__h73466)
  begin
    case (guard__h64843)
      2'b0, 2'b01:
	  CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q71 =
	      _theResult___fst_exp__h72940;
      2'b10:
	  CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q71 =
	      out_exp__h73469;
      2'b11:
	  CASE_guard4843_0b0_theResult___fst_exp2940_0b1_ETC__q71 =
	      _theResult___exp__h73466;
    endcase
  end
  always@(guard__h73578 or
	  _theResult___fst_exp__h81626 or _theResult___exp__h82078)
  begin
    case (guard__h73578)
      2'b0:
	  CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q72 =
	      _theResult___fst_exp__h81626;
      2'b01, 2'b10, 2'b11:
	  CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q72 =
	      _theResult___exp__h82078;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h81626 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2387 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2385 or
	  CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q72)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
	      _theResult___fst_exp__h81626;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2387;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2385;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
	      CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q72;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2391 =
		   8'd0;
    endcase
  end
  always@(guard__h73578 or
	  _theResult___fst_exp__h81626 or
	  out_exp__h82081 or _theResult___exp__h82078)
  begin
    case (guard__h73578)
      2'b0, 2'b01:
	  CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q73 =
	      _theResult___fst_exp__h81626;
      2'b10:
	  CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q73 =
	      out_exp__h82081;
      2'b11:
	  CASE_guard3578_0b0_theResult___fst_exp1626_0b1_ETC__q73 =
	      _theResult___exp__h82078;
    endcase
  end
  always@(guard__h82567 or
	  _theResult___fst_exp__h90793 or _theResult___exp__h91319)
  begin
    case (guard__h82567)
      2'b0:
	  CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q74 =
	      _theResult___fst_exp__h90793;
      2'b01, 2'b10, 2'b11:
	  CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q74 =
	      _theResult___exp__h91319;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h90793 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2714 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2712 or
	  CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q74)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
	      _theResult___fst_exp__h90793;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2714;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2712;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
	      CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q74;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2718 =
		   8'd0;
    endcase
  end
  always@(guard__h82567 or
	  _theResult___fst_exp__h90793 or
	  out_exp__h91322 or _theResult___exp__h91319)
  begin
    case (guard__h82567)
      2'b0, 2'b01:
	  CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q75 =
	      _theResult___fst_exp__h90793;
      2'b10:
	  CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q75 =
	      out_exp__h91322;
      2'b11:
	  CASE_guard2567_0b0_theResult___fst_exp0793_0b1_ETC__q75 =
	      _theResult___exp__h91319;
    endcase
  end
  always@(guard__h91431 or
	  _theResult___fst_exp__h99508 or _theResult___exp__h99985)
  begin
    case (guard__h91431)
      2'b0:
	  CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q76 =
	      _theResult___fst_exp__h99508;
      2'b01, 2'b10, 2'b11:
	  CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q76 =
	      _theResult___exp__h99985;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h99508 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2783 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2781 or
	  CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q76)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
	      _theResult___fst_exp__h99508;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2783;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2781;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
	      CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q76;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2787 =
		   8'd0;
    endcase
  end
  always@(guard__h91431 or
	  _theResult___fst_exp__h99508 or
	  out_exp__h99988 or _theResult___exp__h99985)
  begin
    case (guard__h91431)
      2'b0, 2'b01:
	  CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q77 =
	      _theResult___fst_exp__h99508;
      2'b10:
	  CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q77 =
	      out_exp__h99988;
      2'b11:
	  CASE_guard1431_0b0_theResult___fst_exp9508_0b1_ETC__q77 =
	      _theResult___exp__h99985;
    endcase
  end
  always@(guard__h64843 or sfdin__h72934 or _theResult___sfd__h73467)
  begin
    case (guard__h64843)
      2'b0:
	  CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q78 =
	      sfdin__h72934[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q78 =
	      _theResult___sfd__h73467;
    endcase
  end
  always@(requestR or
	  sfdin__h72934 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2817 or
	  IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2815 or
	  CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q78)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
	      sfdin__h72934[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2817;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
	      IF_IF_IF_IF_0b0_CONCAT_NOT_requestR_3_BITS_190_ETC___d2815;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
	      CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q78;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2821 =
		   23'd0;
    endcase
  end
  always@(guard__h64843 or
	  sfdin__h72934 or out_sfd__h73470 or _theResult___sfd__h73467)
  begin
    case (guard__h64843)
      2'b0, 2'b01:
	  CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q79 =
	      sfdin__h72934[56:34];
      2'b10:
	  CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q79 =
	      out_sfd__h73470;
      2'b11:
	  CASE_guard4843_0b0_sfdin2934_BITS_56_TO_34_0b1_ETC__q79 =
	      _theResult___sfd__h73467;
    endcase
  end
  always@(guard__h73578 or
	  _theResult___snd__h81577 or _theResult___sfd__h82079)
  begin
    case (guard__h73578)
      2'b0:
	  CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q80 =
	      _theResult___snd__h81577[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q80 =
	      _theResult___sfd__h82079;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h81577 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2836 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2834 or
	  CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q80)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
	      _theResult___snd__h81577[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2836;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2834;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
	      CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q80;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2840 =
		   23'd0;
    endcase
  end
  always@(guard__h73578 or
	  _theResult___snd__h81577 or
	  out_sfd__h82082 or _theResult___sfd__h82079)
  begin
    case (guard__h73578)
      2'b0, 2'b01:
	  CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q81 =
	      _theResult___snd__h81577[56:34];
      2'b10:
	  CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q81 =
	      out_sfd__h82082;
      2'b11:
	  CASE_guard3578_0b0_theResult___snd1577_BITS_56_ETC__q81 =
	      _theResult___sfd__h82079;
    endcase
  end
  always@(guard__h82567 or sfdin__h90787 or _theResult___sfd__h91320)
  begin
    case (guard__h82567)
      2'b0:
	  CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q82 =
	      sfdin__h90787[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q82 =
	      _theResult___sfd__h91320;
    endcase
  end
  always@(requestR or
	  sfdin__h90787 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2863 or
	  IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2861 or
	  CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q82)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
	      sfdin__h90787[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2863;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
	      IF_IF_IF_IF_3970_MINUS_SEXT_requestR_3_BITS_19_ETC___d2861;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
	      CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q82;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2867 =
		   23'd0;
    endcase
  end
  always@(guard__h82567 or
	  sfdin__h90787 or out_sfd__h91323 or _theResult___sfd__h91320)
  begin
    case (guard__h82567)
      2'b0, 2'b01:
	  CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q83 =
	      sfdin__h90787[56:34];
      2'b10:
	  CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q83 =
	      out_sfd__h91323;
      2'b11:
	  CASE_guard2567_0b0_sfdin0787_BITS_56_TO_34_0b1_ETC__q83 =
	      _theResult___sfd__h91320;
    endcase
  end
  always@(guard__h91431 or
	  _theResult___snd__h99454 or _theResult___sfd__h99986)
  begin
    case (guard__h91431)
      2'b0:
	  CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q84 =
	      _theResult___snd__h99454[56:34];
      2'b01, 2'b10, 2'b11:
	  CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q84 =
	      _theResult___sfd__h99986;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h99454 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2882 or
	  IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2880 or
	  CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q84)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
	      _theResult___snd__h99454[56:34];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2882;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
	      IF_IF_IF_requestR_3_BITS_190_TO_180_689_EQ_0_7_ETC___d2880;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
	      CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q84;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d2886 =
		   23'd0;
    endcase
  end
  always@(guard__h91431 or
	  _theResult___snd__h99454 or
	  out_sfd__h99989 or _theResult___sfd__h99986)
  begin
    case (guard__h91431)
      2'b0, 2'b01:
	  CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q85 =
	      _theResult___snd__h99454[56:34];
      2'b10:
	  CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q85 =
	      out_sfd__h99989;
      2'b11:
	  CASE_guard1431_0b0_theResult___snd9454_BITS_56_ETC__q85 =
	      _theResult___sfd__h99986;
    endcase
  end
  always@(guard__h64843 or requestR)
  begin
    case (guard__h64843)
      2'b0, 2'b01, 2'b10:
	  CASE_guard4843_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      requestR[191];
      2'd3:
	  CASE_guard4843_0b0_requestR_BIT_191_0b1_reques_ETC__q86 =
	      guard__h64843 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h64843)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
	      (guard__h64843 == 2'b0) ?
		requestR[191] :
		(guard__h64843 == 2'b01 || guard__h64843 == 2'b10 ||
		 guard__h64843 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q87 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h73578 or requestR)
  begin
    case (guard__h73578)
      2'b0, 2'b01, 2'b10:
	  CASE_guard3578_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      requestR[191];
      2'd3:
	  CASE_guard3578_0b0_requestR_BIT_191_0b1_reques_ETC__q88 =
	      guard__h73578 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h73578)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
	      (guard__h73578 == 2'b0) ?
		requestR[191] :
		(guard__h73578 == 2'b01 || guard__h73578 == 2'b10 ||
		 guard__h73578 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q89 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h82567 or requestR)
  begin
    case (guard__h82567)
      2'b0, 2'b01, 2'b10:
	  CASE_guard2567_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      requestR[191];
      2'd3:
	  CASE_guard2567_0b0_requestR_BIT_191_0b1_reques_ETC__q90 =
	      guard__h82567 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h82567)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
	      (guard__h82567 == 2'b0) ?
		requestR[191] :
		(guard__h82567 == 2'b01 || guard__h82567 == 2'b10 ||
		 guard__h82567 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q91 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h91431 or requestR)
  begin
    case (guard__h91431)
      2'b0, 2'b01, 2'b10:
	  CASE_guard1431_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      requestR[191];
      2'd3:
	  CASE_guard1431_0b0_requestR_BIT_191_0b1_reques_ETC__q92 =
	      guard__h91431 == 2'b11 && requestR[191];
    endcase
  end
  always@(requestR or guard__h91431)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      requestR[191];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
	      (guard__h91431 == 2'b0) ?
		requestR[191] :
		(guard__h91431 == 2'b01 || guard__h91431 == 2'b10 ||
		 guard__h91431 == 2'b11) &&
		requestR[191];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q93 =
		   requestR[194:192] == 3'h1 && requestR[191];
    endcase
  end
  always@(guard__h114629 or
	  _theResult___fst_exp__h122590 or _theResult___exp__h123245)
  begin
    case (guard__h114629)
      2'b0:
	  CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q102 =
	      _theResult___fst_exp__h122590;
      2'b01, 2'b10, 2'b11:
	  CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q102 =
	      _theResult___exp__h123245;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h122590 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3226 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3224 or
	  CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q102)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
	      _theResult___fst_exp__h122590;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3226;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3224;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
	      CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q102;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3230 =
		   11'd0;
    endcase
  end
  always@(guard__h114629 or
	  _theResult___fst_exp__h122590 or
	  out_exp__h123248 or _theResult___exp__h123245)
  begin
    case (guard__h114629)
      2'b0, 2'b01:
	  CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q103 =
	      _theResult___fst_exp__h122590;
      2'b10:
	  CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q103 =
	      out_exp__h123248;
      2'b11:
	  CASE_guard14629_0b0_theResult___fst_exp22590_0_ETC__q103 =
	      _theResult___exp__h123245;
    endcase
  end
  always@(guard__h133004 or
	  _theResult___fst_exp__h140994 or _theResult___exp__h141674)
  begin
    case (guard__h133004)
      2'b0:
	  CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q104 =
	      _theResult___fst_exp__h140994;
      2'b01, 2'b10, 2'b11:
	  CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q104 =
	      _theResult___exp__h141674;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h140994 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3620 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3618 or
	  CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q104)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
	      _theResult___fst_exp__h140994;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3620;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3618;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
	      CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q104;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3624 =
		   11'd0;
    endcase
  end
  always@(guard__h133004 or
	  _theResult___fst_exp__h140994 or
	  out_exp__h141677 or _theResult___exp__h141674)
  begin
    case (guard__h133004)
      2'b0, 2'b01:
	  CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q105 =
	      _theResult___fst_exp__h140994;
      2'b10:
	  CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q105 =
	      out_exp__h141677;
      2'b11:
	  CASE_guard33004_0b0_theResult___fst_exp40994_0_ETC__q105 =
	      _theResult___exp__h141674;
    endcase
  end
  always@(guard__h123937 or
	  _theResult___fst_exp__h132163 or _theResult___exp__h132892)
  begin
    case (guard__h123937)
      2'b0:
	  CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q106 =
	      _theResult___fst_exp__h132163;
      2'b01, 2'b10, 2'b11:
	  CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q106 =
	      _theResult___exp__h132892;
    endcase
  end
  always@(requestR or
	  _theResult___fst_exp__h132163 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3551 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3549 or
	  CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q106)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
	      _theResult___fst_exp__h132163;
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3551;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3549;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
	      CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q106;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3555 =
		   11'd0;
    endcase
  end
  always@(guard__h123937 or
	  _theResult___fst_exp__h132163 or
	  out_exp__h132895 or _theResult___exp__h132892)
  begin
    case (guard__h123937)
      2'b0, 2'b01:
	  CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q107 =
	      _theResult___fst_exp__h132163;
      2'b10:
	  CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q107 =
	      out_exp__h132895;
      2'b11:
	  CASE_guard23937_0b0_theResult___fst_exp32163_0_ETC__q107 =
	      _theResult___exp__h132892;
    endcase
  end
  always@(guard__h114629 or requestR)
  begin
    case (guard__h114629)
      2'b0, 2'b01, 2'b10:
	  CASE_guard14629_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard14629_0b0_requestR_BITS_191_TO_160_E_ETC__q108 =
	      guard__h114629 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h114629)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
	      (guard__h114629 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h114629 == 2'b01 || guard__h114629 == 2'b10 ||
		 guard__h114629 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q109 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h133004 or requestR)
  begin
    case (guard__h133004)
      2'b0, 2'b01, 2'b10:
	  CASE_guard33004_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard33004_0b0_requestR_BITS_191_TO_160_E_ETC__q110 =
	      guard__h133004 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h133004)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
	      (guard__h133004 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h133004 == 2'b01 || guard__h133004 == 2'b10 ||
		 guard__h133004 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q111 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h123937 or requestR)
  begin
    case (guard__h123937)
      2'b0, 2'b01, 2'b10:
	  CASE_guard23937_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      2'd3:
	  CASE_guard23937_0b0_requestR_BITS_191_TO_160_E_ETC__q112 =
	      guard__h123937 == 2'b11 && requestR[191:160] == 32'hFFFFFFFF &&
	      requestR[159];
    endcase
  end
  always@(requestR or guard__h123937)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      requestR[191:160] == 32'hFFFFFFFF && requestR[159];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
	      (guard__h123937 == 2'b0) ?
		requestR[191:160] == 32'hFFFFFFFF && requestR[159] :
		(guard__h123937 == 2'b01 || guard__h123937 == 2'b10 ||
		 guard__h123937 == 2'b11) &&
		requestR[191:160] == 32'hFFFFFFFF &&
		requestR[159];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q113 =
		   requestR[194:192] == 3'h1 &&
		   requestR[191:160] == 32'hFFFFFFFF &&
		   requestR[159];
    endcase
  end
  always@(guard__h114629 or
	  _theResult___snd__h122541 or _theResult___sfd__h123246)
  begin
    case (guard__h114629)
      2'b0:
	  CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q114 =
	      _theResult___snd__h122541[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q114 =
	      _theResult___sfd__h123246;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h122541 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3653 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3651 or
	  CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q114)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
	      _theResult___snd__h122541[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3653;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3651;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
	      CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q114;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3657 =
		   52'd0;
    endcase
  end
  always@(guard__h114629 or
	  _theResult___snd__h122541 or
	  out_sfd__h123249 or _theResult___sfd__h123246)
  begin
    case (guard__h114629)
      2'b0, 2'b01:
	  CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q115 =
	      _theResult___snd__h122541[56:5];
      2'b10:
	  CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q115 =
	      out_sfd__h123249;
      2'b11:
	  CASE_guard14629_0b0_theResult___snd22541_BITS__ETC__q115 =
	      _theResult___sfd__h123246;
    endcase
  end
  always@(guard__h123937 or sfdin__h132157 or _theResult___sfd__h132893)
  begin
    case (guard__h123937)
      2'b0:
	  CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q116 =
	      sfdin__h132157[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q116 =
	      _theResult___sfd__h132893;
    endcase
  end
  always@(requestR or
	  sfdin__h132157 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3680 or
	  IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3678 or
	  CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q116)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
	      sfdin__h132157[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3680;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
	      IF_IF_IF_IF_3074_MINUS_SEXT_IF_requestR_3_BITS_ETC___d3678;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
	      CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q116;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3684 =
		   52'd0;
    endcase
  end
  always@(guard__h123937 or
	  sfdin__h132157 or out_sfd__h132896 or _theResult___sfd__h132893)
  begin
    case (guard__h123937)
      2'b0, 2'b01:
	  CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q117 =
	      sfdin__h132157[56:5];
      2'b10:
	  CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q117 =
	      out_sfd__h132896;
      2'b11:
	  CASE_guard23937_0b0_sfdin32157_BITS_56_TO_5_0b_ETC__q117 =
	      _theResult___sfd__h132893;
    endcase
  end
  always@(guard__h133004 or
	  _theResult___snd__h140940 or _theResult___sfd__h141675)
  begin
    case (guard__h133004)
      2'b0:
	  CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q118 =
	      _theResult___snd__h140940[56:5];
      2'b01, 2'b10, 2'b11:
	  CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q118 =
	      _theResult___sfd__h141675;
    endcase
  end
  always@(requestR or
	  _theResult___snd__h140940 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3699 or
	  IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3697 or
	  CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q118)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
	      _theResult___snd__h140940[56:5];
      3'h2:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3699;
      3'h3:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
	      IF_IF_IF_IF_requestR_3_BITS_191_TO_160_8_EQ_0x_ETC___d3697;
      3'h4:
	  IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
	      CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q118;
      default: IF_requestR_3_BITS_194_TO_192_4_EQ_0x4_9_THEN__ETC___d3703 =
		   52'd0;
    endcase
  end
  always@(guard__h133004 or
	  _theResult___snd__h140940 or
	  out_sfd__h141678 or _theResult___sfd__h141675)
  begin
    case (guard__h133004)
      2'b0, 2'b01:
	  CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q119 =
	      _theResult___snd__h140940[56:5];
      2'b10:
	  CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q119 =
	      out_sfd__h141678;
      2'b11:
	  CASE_guard33004_0b0_theResult___snd40940_BITS__ETC__q119 =
	      _theResult___sfd__h141675;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (stateR$EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR$D_IN;
      end
    if (requestR$EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR$D_IN;
    if (resultR$EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFADD_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h1092 = $stime;
	  #0;
	end
    v__h1086 = v__h1092 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFADD_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFADD: ", v__h1086);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSUB_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h1585 = $stime;
	  #0;
	end
    v__h1579 = v__h1585 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSUB_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSUB: ", v__h1579);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMUL_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h1774 = $stime;
	  #0;
	end
    v__h1768 = v__h1774 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMUL_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMUL: ", v__h1768);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMADD_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h1975 = $stime;
	  #0;
	end
    v__h1969 = v__h1975 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMADD_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMADD_S ", v__h1969);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMSUB_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h2258 = $stime;
	  #0;
	end
    v__h2252 = v__h2258 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMSUB_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMSUB_S ", v__h2252);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMADD_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h2443 = $stime;
	  #0;
	end
    v__h2437 = v__h2443 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMADD_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFNMADD_S ", v__h2437);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMSUB_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h2628 = $stime;
	  #0;
	end
    v__h2622 = v__h2628 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMSUB_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFNMSUB_S ", v__h2622);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFDIV_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h2820 = $stime;
	  #0;
	end
    v__h2814 = v__h2820 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFDIV_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFDIV_S ", v__h2814);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSQRT_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h3009 = $stime;
	  #0;
	end
    v__h3003 = v__h3009 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSQRT_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSQRT_S ", v__h3003);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJ_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h3197 = $stime;
	  #0;
	end
    v__h3191 = v__h3197 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJ_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSGNJ_S ", v__h3191);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJN_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h3375 = $stime;
	  #0;
	end
    v__h3369 = v__h3375 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJN_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSGNJN_S ", v__h3369);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJX_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h3543 = $stime;
	  #0;
	end
    v__h3537 = v__h3543 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJX_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSGNJX_S ", v__h3537);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_W && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h3745 = $stime;
	  #0;
	end
    v__h3739 = v__h3745 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_W && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_S_W ", v__h3739);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_WU && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h10241 = $stime;
	  #0;
	end
    v__h10235 = v__h10241 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_WU && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_S_WU ", v__h10235);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_W_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h16419 = $stime;
	  #0;
	end
    v__h16413 = v__h16419 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_W_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_W_S ", v__h16413);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_WU_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h18045 = $stime;
	  #0;
	end
    v__h18039 = v__h18045 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_WU_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_WU_S ", v__h18039);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMIN_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h18827 = $stime;
	  #0;
	end
    v__h18821 = v__h18827 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMIN_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMIN_S ", v__h18821);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMAX_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h21496 = $stime;
	  #0;
	end
    v__h21490 = v__h21496 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMAX_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMAX_S ", v__h21490);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_W_X && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h24062 = $stime;
	  #0;
	end
    v__h24056 = v__h24062 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_W_X && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMV_W_X ", v__h24056);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_X_W && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h24217 = $stime;
	  #0;
	end
    v__h24211 = v__h24217 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_X_W && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMV_X_W ", v__h24211);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFEQ_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h24387 = $stime;
	  #0;
	end
    v__h24381 = v__h24387 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFEQ_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFEQ_S ", v__h24381);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLT_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h25905 = $stime;
	  #0;
	end
    v__h25899 = v__h25905 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLT_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFLT_S ", v__h25899);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLE_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h27009 = $stime;
	  #0;
	end
    v__h27003 = v__h27009 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLE_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFLE_S ", v__h27003);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCLASS_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h28131 = $stime;
	  #0;
	end
    v__h28125 = v__h28131 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCLASS_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCLASS_S ", v__h28125);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFADD_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h28614 = $stime;
	  #0;
	end
    v__h28608 = v__h28614 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFADD_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFADD_D ", v__h28608);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSUB_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h28829 = $stime;
	  #0;
	end
    v__h28823 = v__h28829 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSUB_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSUB_D ", v__h28823);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMUL_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29018 = $stime;
	  #0;
	end
    v__h29012 = v__h29018 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMUL_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMUL_D ", v__h29012);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMADD_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29200 = $stime;
	  #0;
	end
    v__h29194 = v__h29200 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMADD_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMADD_D ", v__h29194);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMSUB_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29398 = $stime;
	  #0;
	end
    v__h29392 = v__h29398 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMSUB_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMSUB_D ", v__h29392);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMADD_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29583 = $stime;
	  #0;
	end
    v__h29577 = v__h29583 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMADD_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFNMADD_D ", v__h29577);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMSUB_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29768 = $stime;
	  #0;
	end
    v__h29762 = v__h29768 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMSUB_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFNMSUB_D ", v__h29762);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFDIV_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h29960 = $stime;
	  #0;
	end
    v__h29954 = v__h29960 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFDIV_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFDIV_D ", v__h29954);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSQRT_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30149 = $stime;
	  #0;
	end
    v__h30143 = v__h30149 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSQRT_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSQRT_D ", v__h30143);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJ_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30337 = $stime;
	  #0;
	end
    v__h30331 = v__h30337 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJ_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSGNJ_D ", v__h30331);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJN_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30493 = $stime;
	  #0;
	end
    v__h30487 = v__h30493 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJN_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSGNJN_D ", v__h30487);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJX_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30651 = $stime;
	  #0;
	end
    v__h30645 = v__h30651 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJX_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFSGNJX_D ", v__h30645);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_D_W && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h30814 = $stime;
	  #0;
	end
    v__h30808 = v__h30814 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_D_W && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_D_W ", v__h30808);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_D_WU && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h40797 = $stime;
	  #0;
	end
    v__h40791 = v__h40797 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_D_WU && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_D_WU ", v__h40791);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_W_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h50500 = $stime;
	  #0;
	end
    v__h50494 = v__h50500 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_W_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_W_D ", v__h50494);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_WU_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h52109 = $stime;
	  #0;
	end
    v__h52103 = v__h52109 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_WU_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_WU_D ", v__h52103);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h52891 = $stime;
	  #0;
	end
    v__h52885 = v__h52891 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_S_D ", v__h52885);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_D_S && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h101631 = $stime;
	  #0;
	end
    v__h101625 = v__h101631 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_D_S && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCVT_D_S ", v__h101625);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMIN_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h143388 = $stime;
	  #0;
	end
    v__h143382 = v__h143388 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMIN_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMIN_D ", v__h143382);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMAX_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h147971 = $stime;
	  #0;
	end
    v__h147965 = v__h147971 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMAX_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMAX_D ", v__h147965);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFEQ_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h152454 = $stime;
	  #0;
	end
    v__h152448 = v__h152454 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFEQ_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFEQ_D ", v__h152448);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLT_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h155184 = $stime;
	  #0;
	end
    v__h155178 = v__h155184 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLT_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFLT_D ", v__h155178);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLE_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h157096 = $stime;
	  #0;
	end
    v__h157090 = v__h157096 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLE_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFLE_D ", v__h157090);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_D_X && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h159028 = $stime;
	  #0;
	end
    v__h159022 = v__h159028 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_D_X && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMV_D_X ", v__h159022);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_X_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h159175 = $stime;
	  #0;
	end
    v__h159169 = v__h159175 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_X_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFMV_X_D ", v__h159169);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCLASS_D && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h159327 = $stime;
	  #0;
	end
    v__h159321 = v__h159327 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCLASS_D && NOT_verbosity_ULE_1_4___d25)
	$display("%0d: %m: doFCLASS_D ", v__h159321);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25)
	begin
	  v__h160311 = $stime;
	  #0;
	end
    v__h160305 = v__h160311 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25)
	$write("%0d: %m: rl_get_fpu_result: ", v__h160305);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25)
	$write("<");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  fpu$server_core_response_get[69])
	if (fpu$server_core_response_get[36])
	  $write("tagged S ",
		 "<Float %s%x.%x>",
		 "-",
		 fpu$server_core_response_get[35:28],
		 fpu$server_core_response_get[27:5]);
	else
	  $write("tagged S ",
		 "<Float %s%x.%x>",
		 "+",
		 fpu$server_core_response_get[35:28],
		 fpu$server_core_response_get[27:5]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  !fpu$server_core_response_get[69])
	if (fpu$server_core_response_get[68])
	  $write("tagged D ",
		 "<Float %s%x.%x>",
		 "-",
		 fpu$server_core_response_get[67:57],
		 fpu$server_core_response_get[56:5]);
	else
	  $write("tagged D ",
		 "<Float %s%x.%x>",
		 "+",
		 fpu$server_core_response_get[67:57],
		 fpu$server_core_response_get[56:5]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25)
	$write(",");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25)
	$write("<Exception: ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  fpu$server_core_response_get[4])
	$write("Invalid_Op ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  !fpu$server_core_response_get[4])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  fpu$server_core_response_get[3])
	$write("Divide_0 ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  !fpu$server_core_response_get[3])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  fpu$server_core_response_get[2])
	$write("Overflow ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  !fpu$server_core_response_get[2])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  fpu$server_core_response_get[1])
	$write("Underflow ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  !fpu$server_core_response_get[1])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  fpu$server_core_response_get[0])
	$write("Inexact ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25 &&
	  !fpu$server_core_response_get[0])
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25)
	$write(">");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25)
	$write(">");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_fpu_result && NOT_verbosity_ULE_1_4___d25)
	$write("\n");
  end
  // synopsys translate_on
endmodule  // mkFBox_Core

