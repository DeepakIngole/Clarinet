//
// Generated by Bluespec Compiler, version 2018.10.beta1 (build e1df8052c, 2018-10-17)
//
//
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_core_request_put    O     1 reg
// server_core_response_get       O    71
// RDY_server_core_response_get   O     1 reg
// verbosity                      I     4
// CLK                            I     1 clock
// RST_N                          I     1 reset
// server_core_request_put        I   138
// EN_server_core_request_put     I     1
// EN_server_core_response_get    I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkPositCore(verbosity,
		   CLK,
		   RST_N,

		   server_core_request_put,
		   EN_server_core_request_put,
		   RDY_server_core_request_put,

		   EN_server_core_response_get,
		   server_core_response_get,
		   RDY_server_core_response_get);
  input  [3 : 0] verbosity;
  input  CLK;
  input  RST_N;

  // action method server_core_request_put
  input  [137 : 0] server_core_request_put;
  input  EN_server_core_request_put;
  output RDY_server_core_request_put;

  // actionvalue method server_core_response_get
  input  EN_server_core_response_get;
  output [70 : 0] server_core_response_get;
  output RDY_server_core_response_get;

  // signals for module outputs
  wire [70 : 0] server_core_response_get;
  wire RDY_server_core_request_put, RDY_server_core_response_get;

  // inlined wires
  wire [32 : 0] ffI_f_rv$port0__write_1,
		ffI_f_rv$port1__read,
		ffI_f_rv$port2__read;
  wire [3 : 0] opcode_in_rv$port0__write_1,
	       opcode_in_rv$port1__read,
	       opcode_in_rv$port2__read;
  wire ffI_f_rv$EN_port0__write, opcode_in_rv$EN_port1__write;

  // register fda_check_quire
  reg fda_check_quire;
  wire fda_check_quire$D_IN, fda_check_quire$EN;

  // register fda_divider_intDivide_rg_denom
  reg [27 : 0] fda_divider_intDivide_rg_denom;
  wire [27 : 0] fda_divider_intDivide_rg_denom$D_IN;
  wire fda_divider_intDivide_rg_denom$EN;

  // register fda_divider_intDivide_rg_denom2
  reg [81 : 0] fda_divider_intDivide_rg_denom2;
  reg [81 : 0] fda_divider_intDivide_rg_denom2$D_IN;
  wire fda_divider_intDivide_rg_denom2$EN;

  // register fda_divider_intDivide_rg_n
  reg [54 : 0] fda_divider_intDivide_rg_n;
  reg [54 : 0] fda_divider_intDivide_rg_n$D_IN;
  wire fda_divider_intDivide_rg_n$EN;

  // register fda_divider_intDivide_rg_numer
  reg [81 : 0] fda_divider_intDivide_rg_numer;
  wire [81 : 0] fda_divider_intDivide_rg_numer$D_IN;
  wire fda_divider_intDivide_rg_numer$EN;

  // register fda_divider_intDivide_rg_quo
  reg [54 : 0] fda_divider_intDivide_rg_quo;
  wire [54 : 0] fda_divider_intDivide_rg_quo$D_IN;
  wire fda_divider_intDivide_rg_quo$EN;

  // register fda_divider_intDivide_rg_state
  reg [1 : 0] fda_divider_intDivide_rg_state;
  reg [1 : 0] fda_divider_intDivide_rg_state$D_IN;
  wire fda_divider_intDivide_rg_state$EN;

  // register ffI_f_rv
  reg [32 : 0] ffI_f_rv;
  wire [32 : 0] ffI_f_rv$D_IN;
  wire ffI_f_rv$EN;

  // register fma_check_quire
  reg fma_check_quire;
  wire fma_check_quire$D_IN, fma_check_quire$EN;

  // register opcode_in_rv
  reg [3 : 0] opcode_in_rv;
  wire [3 : 0] opcode_in_rv$D_IN;
  wire opcode_in_rv$EN;

  // register rg_quire
  reg [511 : 0] rg_quire;
  reg [511 : 0] rg_quire$D_IN;
  wire rg_quire$EN;

  // register rg_quire_busy
  reg rg_quire_busy;
  wire rg_quire_busy$D_IN, rg_quire_busy$EN;

  // ports of submodule extracter1_fifo_output_reg
  wire [37 : 0] extracter1_fifo_output_reg$D_IN,
		extracter1_fifo_output_reg$D_OUT;
  wire extracter1_fifo_output_reg$CLR,
       extracter1_fifo_output_reg$DEQ,
       extracter1_fifo_output_reg$EMPTY_N,
       extracter1_fifo_output_reg$ENQ,
       extracter1_fifo_output_reg$FULL_N;

  // ports of submodule extracter1_fifo_stage0_reg
  wire [33 : 0] extracter1_fifo_stage0_reg$D_IN;
  wire extracter1_fifo_stage0_reg$CLR,
       extracter1_fifo_stage0_reg$DEQ,
       extracter1_fifo_stage0_reg$ENQ;

  // ports of submodule extracter1_fifo_stage1_reg
  wire [42 : 0] extracter1_fifo_stage1_reg$D_IN;
  wire extracter1_fifo_stage1_reg$CLR,
       extracter1_fifo_stage1_reg$DEQ,
       extracter1_fifo_stage1_reg$ENQ;

  // ports of submodule extracter1_fifo_stage2_reg
  wire [39 : 0] extracter1_fifo_stage2_reg$D_IN;
  wire extracter1_fifo_stage2_reg$CLR,
       extracter1_fifo_stage2_reg$DEQ,
       extracter1_fifo_stage2_reg$ENQ;

  // ports of submodule extracter2_fifo_output_reg
  wire [37 : 0] extracter2_fifo_output_reg$D_IN,
		extracter2_fifo_output_reg$D_OUT;
  wire extracter2_fifo_output_reg$CLR,
       extracter2_fifo_output_reg$DEQ,
       extracter2_fifo_output_reg$EMPTY_N,
       extracter2_fifo_output_reg$ENQ,
       extracter2_fifo_output_reg$FULL_N;

  // ports of submodule extracter2_fifo_stage0_reg
  wire [33 : 0] extracter2_fifo_stage0_reg$D_IN;
  wire extracter2_fifo_stage0_reg$CLR,
       extracter2_fifo_stage0_reg$DEQ,
       extracter2_fifo_stage0_reg$ENQ;

  // ports of submodule extracter2_fifo_stage1_reg
  wire [42 : 0] extracter2_fifo_stage1_reg$D_IN;
  wire extracter2_fifo_stage1_reg$CLR,
       extracter2_fifo_stage1_reg$DEQ,
       extracter2_fifo_stage1_reg$ENQ;

  // ports of submodule extracter2_fifo_stage2_reg
  wire [39 : 0] extracter2_fifo_stage2_reg$D_IN;
  wire extracter2_fifo_stage2_reg$CLR,
       extracter2_fifo_stage2_reg$DEQ,
       extracter2_fifo_stage2_reg$ENQ;

  // ports of submodule fda_adder_fifo_output_reg
  wire fda_adder_fifo_output_reg$CLR,
       fda_adder_fifo_output_reg$DEQ,
       fda_adder_fifo_output_reg$EMPTY_N,
       fda_adder_fifo_output_reg$ENQ,
       fda_adder_fifo_output_reg$FULL_N;

  // ports of submodule fda_adder_fifo_stage0_reg
  wire [518 : 0] fda_adder_fifo_stage0_reg$D_IN,
		 fda_adder_fifo_stage0_reg$D_OUT;
  wire fda_adder_fifo_stage0_reg$CLR,
       fda_adder_fifo_stage0_reg$DEQ,
       fda_adder_fifo_stage0_reg$EMPTY_N,
       fda_adder_fifo_stage0_reg$ENQ,
       fda_adder_fifo_stage0_reg$FULL_N;

  // ports of submodule fda_divider_fifo_output_reg
  wire [516 : 0] fda_divider_fifo_output_reg$D_IN,
		 fda_divider_fifo_output_reg$D_OUT;
  wire fda_divider_fifo_output_reg$CLR,
       fda_divider_fifo_output_reg$DEQ,
       fda_divider_fifo_output_reg$EMPTY_N,
       fda_divider_fifo_output_reg$ENQ,
       fda_divider_fifo_output_reg$FULL_N;

  // ports of submodule fda_divider_fifo_stage0_reg
  wire [12 : 0] fda_divider_fifo_stage0_reg$D_IN,
		fda_divider_fifo_stage0_reg$D_OUT;
  wire fda_divider_fifo_stage0_reg$CLR,
       fda_divider_fifo_stage0_reg$DEQ,
       fda_divider_fifo_stage0_reg$EMPTY_N,
       fda_divider_fifo_stage0_reg$ENQ,
       fda_divider_fifo_stage0_reg$FULL_N;

  // ports of submodule fda_divider_intDivide_fifo_output_reg
  wire [56 : 0] fda_divider_intDivide_fifo_output_reg$D_IN,
		fda_divider_intDivide_fifo_output_reg$D_OUT;
  wire fda_divider_intDivide_fifo_output_reg$CLR,
       fda_divider_intDivide_fifo_output_reg$DEQ,
       fda_divider_intDivide_fifo_output_reg$EMPTY_N,
       fda_divider_intDivide_fifo_output_reg$ENQ,
       fda_divider_intDivide_fifo_output_reg$FULL_N;

  // ports of submodule fda_ffO
  wire fda_ffO$CLR, fda_ffO$DEQ, fda_ffO$EMPTY_N, fda_ffO$ENQ, fda_ffO$FULL_N;

  // ports of submodule ffI
  wire [137 : 0] ffI$D_IN, ffI$D_OUT;
  wire ffI$CLR, ffI$DEQ, ffI$EMPTY_N, ffI$ENQ, ffI$FULL_N;

  // ports of submodule ffO
  reg [70 : 0] ffO$D_IN;
  wire [70 : 0] ffO$D_OUT;
  wire ffO$CLR, ffO$DEQ, ffO$EMPTY_N, ffO$ENQ, ffO$FULL_N;

  // ports of submodule fma_adder_fifo_output_reg
  wire fma_adder_fifo_output_reg$CLR,
       fma_adder_fifo_output_reg$DEQ,
       fma_adder_fifo_output_reg$EMPTY_N,
       fma_adder_fifo_output_reg$ENQ,
       fma_adder_fifo_output_reg$FULL_N;

  // ports of submodule fma_adder_fifo_stage0_reg
  wire [518 : 0] fma_adder_fifo_stage0_reg$D_IN,
		 fma_adder_fifo_stage0_reg$D_OUT;
  wire fma_adder_fifo_stage0_reg$CLR,
       fma_adder_fifo_stage0_reg$DEQ,
       fma_adder_fifo_stage0_reg$EMPTY_N,
       fma_adder_fifo_stage0_reg$ENQ,
       fma_adder_fifo_stage0_reg$FULL_N;

  // ports of submodule fma_ffO
  wire fma_ffO$CLR, fma_ffO$DEQ, fma_ffO$EMPTY_N, fma_ffO$ENQ, fma_ffO$FULL_N;

  // ports of submodule fma_multiplier_fifo_output_reg
  wire [516 : 0] fma_multiplier_fifo_output_reg$D_IN,
		 fma_multiplier_fifo_output_reg$D_OUT;
  wire fma_multiplier_fifo_output_reg$CLR,
       fma_multiplier_fifo_output_reg$DEQ,
       fma_multiplier_fifo_output_reg$EMPTY_N,
       fma_multiplier_fifo_output_reg$ENQ,
       fma_multiplier_fifo_output_reg$FULL_N;

  // ports of submodule fma_multiplier_fifo_stage0_reg
  wire [68 : 0] fma_multiplier_fifo_stage0_reg$D_IN,
		fma_multiplier_fifo_stage0_reg$D_OUT;
  wire fma_multiplier_fifo_stage0_reg$CLR,
       fma_multiplier_fifo_stage0_reg$DEQ,
       fma_multiplier_fifo_stage0_reg$EMPTY_N,
       fma_multiplier_fifo_stage0_reg$ENQ,
       fma_multiplier_fifo_stage0_reg$FULL_N;

  // ports of submodule ftop_fToP_fifo_output_reg
  wire [40 : 0] ftop_fToP_fifo_output_reg$D_IN,
		ftop_fToP_fifo_output_reg$D_OUT;
  wire ftop_fToP_fifo_output_reg$CLR,
       ftop_fToP_fifo_output_reg$DEQ,
       ftop_fToP_fifo_output_reg$EMPTY_N,
       ftop_fToP_fifo_output_reg$ENQ,
       ftop_fToP_fifo_output_reg$FULL_N;

  // ports of submodule ftop_fToP_fifo_stage0_reg
  wire [46 : 0] ftop_fToP_fifo_stage0_reg$D_IN,
		ftop_fToP_fifo_stage0_reg$D_OUT;
  wire ftop_fToP_fifo_stage0_reg$CLR,
       ftop_fToP_fifo_stage0_reg$DEQ,
       ftop_fToP_fifo_stage0_reg$EMPTY_N,
       ftop_fToP_fifo_stage0_reg$ENQ,
       ftop_fToP_fifo_stage0_reg$FULL_N;

  // ports of submodule ftop_ffO
  wire [40 : 0] ftop_ffO$D_IN, ftop_ffO$D_OUT;
  wire ftop_ffO$CLR,
       ftop_ffO$DEQ,
       ftop_ffO$EMPTY_N,
       ftop_ffO$ENQ,
       ftop_ffO$FULL_N;

  // ports of submodule need_normalize
  wire need_normalize$CLR,
       need_normalize$DEQ,
       need_normalize$D_IN,
       need_normalize$ENQ;

  // ports of submodule normalizer_fifo_output_reg
  wire [35 : 0] normalizer_fifo_output_reg$D_IN,
		normalizer_fifo_output_reg$D_OUT;
  wire normalizer_fifo_output_reg$CLR,
       normalizer_fifo_output_reg$DEQ,
       normalizer_fifo_output_reg$EMPTY_N,
       normalizer_fifo_output_reg$ENQ,
       normalizer_fifo_output_reg$FULL_N;

  // ports of submodule normalizer_fifo_stage0_reg
  wire [65 : 0] normalizer_fifo_stage0_reg$D_IN;
  wire normalizer_fifo_stage0_reg$CLR,
       normalizer_fifo_stage0_reg$DEQ,
       normalizer_fifo_stage0_reg$ENQ;

  // ports of submodule normalizer_fifo_stage1_reg
  wire [69 : 0] normalizer_fifo_stage1_reg$D_IN;
  wire normalizer_fifo_stage1_reg$CLR,
       normalizer_fifo_stage1_reg$DEQ,
       normalizer_fifo_stage1_reg$ENQ;

  // ports of submodule normalizer_fifo_stage2_reg
  wire [35 : 0] normalizer_fifo_stage2_reg$D_IN;
  wire normalizer_fifo_stage2_reg$CLR,
       normalizer_fifo_stage2_reg$DEQ,
       normalizer_fifo_stage2_reg$ENQ;

  // ports of submodule opcode_norm
  wire [2 : 0] opcode_norm$D_IN, opcode_norm$D_OUT;
  wire opcode_norm$CLR,
       opcode_norm$DEQ,
       opcode_norm$EMPTY_N,
       opcode_norm$ENQ,
       opcode_norm$FULL_N;

  // ports of submodule opcode_out
  wire [2 : 0] opcode_out$D_IN, opcode_out$D_OUT;
  wire opcode_out$CLR,
       opcode_out$DEQ,
       opcode_out$EMPTY_N,
       opcode_out$ENQ,
       opcode_out$FULL_N;

  // ports of submodule ptof_ffO
  wire [31 : 0] ptof_ffO$D_IN, ptof_ffO$D_OUT;
  wire ptof_ffO$CLR,
       ptof_ffO$DEQ,
       ptof_ffO$EMPTY_N,
       ptof_ffO$ENQ,
       ptof_ffO$FULL_N;

  // ports of submodule ptof_ptoF_fifo_output_reg
  reg [31 : 0] ptof_ptoF_fifo_output_reg$D_IN;
  wire [31 : 0] ptof_ptoF_fifo_output_reg$D_OUT;
  wire ptof_ptoF_fifo_output_reg$CLR,
       ptof_ptoF_fifo_output_reg$DEQ,
       ptof_ptoF_fifo_output_reg$EMPTY_N,
       ptof_ptoF_fifo_output_reg$ENQ,
       ptof_ptoF_fifo_output_reg$FULL_N;

  // ports of submodule ptof_ptoF_fifo_stage0_reg
  wire [41 : 0] ptof_ptoF_fifo_stage0_reg$D_IN,
		ptof_ptoF_fifo_stage0_reg$D_OUT;
  wire ptof_ptoF_fifo_stage0_reg$CLR,
       ptof_ptoF_fifo_stage0_reg$DEQ,
       ptof_ptoF_fifo_stage0_reg$EMPTY_N,
       ptof_ptoF_fifo_stage0_reg$ENQ,
       ptof_ptoF_fifo_stage0_reg$FULL_N;

  // ports of submodule ptoq_ffO
  wire ptoq_ffO$CLR,
       ptoq_ffO$DEQ,
       ptoq_ffO$EMPTY_N,
       ptoq_ffO$ENQ,
       ptoq_ffO$FULL_N;

  // ports of submodule ptoq_positToquire_fifo_output_reg
  wire ptoq_positToquire_fifo_output_reg$CLR,
       ptoq_positToquire_fifo_output_reg$DEQ,
       ptoq_positToquire_fifo_output_reg$EMPTY_N,
       ptoq_positToquire_fifo_output_reg$ENQ,
       ptoq_positToquire_fifo_output_reg$FULL_N;

  // ports of submodule ptoq_positToquire_fifo_stage0_reg
  wire [37 : 0] ptoq_positToquire_fifo_stage0_reg$D_IN;
  wire ptoq_positToquire_fifo_stage0_reg$CLR,
       ptoq_positToquire_fifo_stage0_reg$DEQ,
       ptoq_positToquire_fifo_stage0_reg$ENQ;

  // ports of submodule ptoq_positToquire_fifo_stage1_reg
  wire [482 : 0] ptoq_positToquire_fifo_stage1_reg$D_IN,
		 ptoq_positToquire_fifo_stage1_reg$D_OUT;
  wire ptoq_positToquire_fifo_stage1_reg$CLR,
       ptoq_positToquire_fifo_stage1_reg$DEQ,
       ptoq_positToquire_fifo_stage1_reg$EMPTY_N,
       ptoq_positToquire_fifo_stage1_reg$ENQ,
       ptoq_positToquire_fifo_stage1_reg$FULL_N;

  // ports of submodule qtop_ffO
  wire [40 : 0] qtop_ffO$D_IN, qtop_ffO$D_OUT;
  wire qtop_ffO$CLR,
       qtop_ffO$DEQ,
       qtop_ffO$EMPTY_N,
       qtop_ffO$ENQ,
       qtop_ffO$FULL_N;

  // ports of submodule qtop_quireToPosit1_fifo_output_reg
  wire [40 : 0] qtop_quireToPosit1_fifo_output_reg$D_IN,
		qtop_quireToPosit1_fifo_output_reg$D_OUT;
  wire qtop_quireToPosit1_fifo_output_reg$CLR,
       qtop_quireToPosit1_fifo_output_reg$DEQ,
       qtop_quireToPosit1_fifo_output_reg$EMPTY_N,
       qtop_quireToPosit1_fifo_output_reg$ENQ,
       qtop_quireToPosit1_fifo_output_reg$FULL_N;

  // ports of submodule qtop_quireToPosit1_fifo_stage0_reg
  wire [522 : 0] qtop_quireToPosit1_fifo_stage0_reg$D_IN,
		 qtop_quireToPosit1_fifo_stage0_reg$D_OUT;
  wire qtop_quireToPosit1_fifo_stage0_reg$CLR,
       qtop_quireToPosit1_fifo_stage0_reg$DEQ,
       qtop_quireToPosit1_fifo_stage0_reg$EMPTY_N,
       qtop_quireToPosit1_fifo_stage0_reg$ENQ,
       qtop_quireToPosit1_fifo_stage0_reg$FULL_N;

  // ports of submodule qtop_quireToPosit1_fifo_stage1_reg
  wire [40 : 0] qtop_quireToPosit1_fifo_stage1_reg$D_IN,
		qtop_quireToPosit1_fifo_stage1_reg$D_OUT;
  wire qtop_quireToPosit1_fifo_stage1_reg$CLR,
       qtop_quireToPosit1_fifo_stage1_reg$DEQ,
       qtop_quireToPosit1_fifo_stage1_reg$EMPTY_N,
       qtop_quireToPosit1_fifo_stage1_reg$ENQ,
       qtop_quireToPosit1_fifo_stage1_reg$FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_extract_in,
       CAN_FIRE_RL_fda_adder_stage_1,
       CAN_FIRE_RL_fda_divider_intDivide_rl_loop1,
       CAN_FIRE_RL_fda_divider_intDivide_rl_loop2,
       CAN_FIRE_RL_fda_divider_stage_1,
       CAN_FIRE_RL_fda_rl_connect1,
       CAN_FIRE_RL_fda_rl_out,
       CAN_FIRE_RL_fma_adder_stage_1,
       CAN_FIRE_RL_fma_multiplier_stage_1,
       CAN_FIRE_RL_fma_rl_connect1,
       CAN_FIRE_RL_fma_rl_out,
       CAN_FIRE_RL_ftop_fToP_stage_1,
       CAN_FIRE_RL_ftop_rl_out,
       CAN_FIRE_RL_ptof_ptoF_stage_2,
       CAN_FIRE_RL_ptof_rl_out,
       CAN_FIRE_RL_ptoq_positToquire_stage_2,
       CAN_FIRE_RL_ptoq_rl_out,
       CAN_FIRE_RL_qtop_quireToPosit1_stage_1,
       CAN_FIRE_RL_qtop_quireToPosit1_stage_2,
       CAN_FIRE_RL_qtop_rl_out,
       CAN_FIRE_RL_rl_fda,
       CAN_FIRE_RL_rl_fma,
       CAN_FIRE_RL_rl_ftop,
       CAN_FIRE_RL_rl_norm,
       CAN_FIRE_RL_rl_out,
       CAN_FIRE_RL_rl_ptof,
       CAN_FIRE_RL_rl_ptoq,
       CAN_FIRE_RL_rl_qtop,
       CAN_FIRE_server_core_request_put,
       CAN_FIRE_server_core_response_get,
       WILL_FIRE_RL_extract_in,
       WILL_FIRE_RL_fda_adder_stage_1,
       WILL_FIRE_RL_fda_divider_intDivide_rl_loop1,
       WILL_FIRE_RL_fda_divider_intDivide_rl_loop2,
       WILL_FIRE_RL_fda_divider_stage_1,
       WILL_FIRE_RL_fda_rl_connect1,
       WILL_FIRE_RL_fda_rl_out,
       WILL_FIRE_RL_fma_adder_stage_1,
       WILL_FIRE_RL_fma_multiplier_stage_1,
       WILL_FIRE_RL_fma_rl_connect1,
       WILL_FIRE_RL_fma_rl_out,
       WILL_FIRE_RL_ftop_fToP_stage_1,
       WILL_FIRE_RL_ftop_rl_out,
       WILL_FIRE_RL_ptof_ptoF_stage_2,
       WILL_FIRE_RL_ptof_rl_out,
       WILL_FIRE_RL_ptoq_positToquire_stage_2,
       WILL_FIRE_RL_ptoq_rl_out,
       WILL_FIRE_RL_qtop_quireToPosit1_stage_1,
       WILL_FIRE_RL_qtop_quireToPosit1_stage_2,
       WILL_FIRE_RL_qtop_rl_out,
       WILL_FIRE_RL_rl_fda,
       WILL_FIRE_RL_rl_fma,
       WILL_FIRE_RL_rl_ftop,
       WILL_FIRE_RL_rl_norm,
       WILL_FIRE_RL_rl_out,
       WILL_FIRE_RL_rl_ptof,
       WILL_FIRE_RL_rl_ptoq,
       WILL_FIRE_RL_rl_qtop,
       WILL_FIRE_server_core_request_put,
       WILL_FIRE_server_core_response_get;

  // inputs to muxes for submodule ports
  wire [511 : 0] MUX_rg_quire$write_1__VAL_1,
		 MUX_rg_quire$write_1__VAL_2,
		 MUX_rg_quire$write_1__VAL_3;
  wire [81 : 0] MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_1,
		MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_2,
		MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_3,
		MUX_fda_divider_intDivide_rg_numer$write_1__VAL_1,
		MUX_fda_divider_intDivide_rg_numer$write_1__VAL_2;
  wire [56 : 0] MUX_fda_divider_intDivide_fifo_output_reg$enq_1__VAL_1,
		MUX_fda_divider_intDivide_fifo_output_reg$enq_1__VAL_2;
  wire [54 : 0] MUX_fda_divider_intDivide_rg_n$write_1__VAL_1,
		MUX_fda_divider_intDivide_rg_n$write_1__VAL_3,
		MUX_fda_divider_intDivide_rg_quo$write_1__VAL_1,
		MUX_fda_divider_intDivide_rg_quo$write_1__VAL_2;
  wire [1 : 0] MUX_fda_divider_intDivide_rg_state$write_1__VAL_3;
  wire MUX_fda_divider_intDivide_fifo_output_reg$enq_1__SEL_1,
       MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_1,
       MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_2,
       MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_3,
       MUX_fda_divider_intDivide_rg_numer$write_1__SEL_2,
       MUX_fda_divider_intDivide_rg_state$write_1__SEL_2,
       MUX_opcode_out$enq_1__SEL_1,
       MUX_rg_quire_busy$write_1__SEL_1,
       MUX_rg_quire_busy$write_1__SEL_2;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h135391;
  reg [31 : 0] v__h230423;
  reg [31 : 0] v__h235781;
  reg [31 : 0] v__h225115;
  reg [31 : 0] v__h237173;
  reg [31 : 0] v__h135385;
  reg [31 : 0] v__h225109;
  reg [31 : 0] v__h230417;
  reg [31 : 0] v__h235775;
  reg [31 : 0] v__h237167;
  // synopsys translate_on

  // remaining internal signals
  reg [31 : 0] IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852,
	       output_regf_out_posit__h225187,
	       output_regf_out_posit__h230523;
  reg [26 : 0] x__h114039, x__h124462;
  reg [1 : 0] CASE_ffOD_OUT_BITS_70_TO_69_0_ffOD_OUT_BITS__ETC__q1,
	      CASE_server_core_request_put_BITS_137_TO_136_0_ETC__q31,
	      CASE_server_core_request_put_BITS_71_TO_70_0_s_ETC__q32;
  reg CASE_shift_new025156_0_NOT_ftop_ffOD_OUT_BIT__ETC__q19,
      CASE_shift_new025156_0_ftop_ffOD_OUT_BIT_0_1__ETC__q18,
      CASE_shift_new030496_0_NOT_qtop_ffOD_OUT_BIT__ETC__q23,
      CASE_shift_new030496_0_qtop_ffOD_OUT_BIT_0_1__ETC__q22,
      IF_ffI_first__75_BITS_2_TO_0_76_EQ_4_77_THEN_N_ETC___d498,
      IF_opcode_out_first__846_EQ_0_847_OR_opcode_ou_ETC___d2875;
  wire [519 : 0] rg_quire_12_BIT_511_13_AND_rg_quire_12_BITS_51_ETC___d2449;
  wire [511 : 0] IF_INV_NOT_IF_NOT_fda_adder_fifo_stage0_reg_fi_ETC___d291,
		 IF_INV_NOT_IF_NOT_fma_adder_fifo_stage0_reg_fi_ETC___d107,
		 IF_NOT_rg_quire_12_BIT_511_13_14_AND_NOT_fda_d_ETC___d308,
		 IF_NOT_rg_quire_12_BIT_511_13_14_AND_NOT_fma_m_ETC___d127,
		 SEXT_IF_fda_adder_fifo_stage0_reg_first__48_BI_ETC___d258,
		 SEXT_IF_fma_adder_fifo_stage0_reg_first__4_BIT_ETC___d74,
		 fda_adder_fifo_stage0_reg_first__48_BITS_518_T_ETC___d263,
		 fma_adder_fifo_stage0_reg_first__4_BITS_518_TO_ETC___d79,
		 rg_quire_12_PLUS_fda_divider_fifo_output_reg_f_ETC___d301,
		 rg_quire_12_PLUS_fma_multiplier_fifo_output_re_ETC___d120,
		 twos_complement_carry_int_frac__h437,
		 twos_complement_carry_int_frac__h50019,
		 twos_complement_carry_int_frac__h98816,
		 x__h1253,
		 x__h26802,
		 x__h50807,
		 x__h76334;
  wire [510 : 0] carry_int_frac_shifted__h99711,
		 twos_complement_carry_int_frac__h138271,
		 x__h50360,
		 x__h797;
  wire [479 : 0] IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d213,
		 IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d33,
		 f_new___1__h50269,
		 f_new___1__h706,
		 f_new__h138122,
		 f_new__h487,
		 f_new__h50063,
		 f_new__h50213,
		 f_new__h653,
		 int_frac__h138105,
		 mask1__h50271,
		 mask1__h708,
		 x__h50446,
		 x__h889;
  wire [111 : 0] _0_CONCAT_IF_extracter1_fifo_output_reg_first___ETC___d1272;
  wire [81 : 0] y__h49469, y__h49555;
  wire [65 : 0] extracter1_fifo_output_reg_first__237_BIT_35_2_ETC___d1274;
  wire [55 : 0] f__h50058,
		fma_multiplier_fifo_stage0_regD_OUT_BITS_55_TO_0__q7,
		x__h50226,
		x__h666;
  wire [34 : 0] IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR__ETC___d1192,
		IF_ffI_first__75_BITS_102_TO_72_07_EQ_0_08_AND_ETC___d846;
  wire [31 : 0] float_no__h101186, in_posit2___1_posit_inp__h114432;
  wire [30 : 0] IF_IF_NOT_IF_ftop_ffO_first__466_BIT_36_471_TH_ETC___d2593,
		IF_IF_NOT_IF_qtop_ffO_first__642_BIT_36_647_TH_ETC___d2769,
		IF_NOT_IF_ftop_ffO_first__466_BIT_36_471_THEN__ETC___d2589,
		IF_NOT_IF_qtop_ffO_first__642_BIT_36_647_THEN__ETC___d2765,
		IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d204,
		IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d24,
		IF_ftop_ffO_first__466_BIT_36_471_THEN_1_SL_30_ETC___d2512,
		IF_qtop_ffO_first__642_BIT_36_647_THEN_1_SL_30_ETC___d2688,
		INV_new_inp04024__q2,
		INV_new_inp14376__q8,
		a__h225203,
		a__h230539,
		b__h225492,
		b__h225786,
		b__h226699,
		b__h229088,
		b__h230828,
		b__h231122,
		b__h232034,
		b__h234423,
		k__h225846,
		k__h225891,
		k__h231182,
		k__h231226,
		k_expo__h225159,
		k_expo__h230499,
		new_inp04024_AND_INV_0x7FFFFFFE_SL_x13990_SRL__ETC__q9,
		new_inp14376_AND_INV_0x7FFFFFFE_SL_x24413_SRL__ETC__q10,
		new_inp__h104024,
		new_inp__h114376,
		x__h225508,
		x__h225903,
		x__h230844,
		x__h231238,
		y__h225509,
		y__h225510,
		y__h230845,
		y__h230846;
  wire [27 : 0] IF_qtop_quireToPosit1_fifo_stage0_reg_first__3_ETC___d349,
		f1__h135811,
		f2__h135812,
		frac__h100418,
		x__h100485,
		x__h228431,
		x__h233766;
  wire [26 : 0] frac__h104032,
		frac__h114384,
		ftop_ffOD_OUT_BITS_28_TO_2__q17,
		qtop_ffOD_OUT_BITS_28_TO_2__q21,
		stage0_regf_frac__h137459,
		stage1_regf_frac__h99437,
		x28431_BITS_26_TO_0__q16,
		x33766_BITS_26_TO_0__q20,
		x_frac__h100432;
  wire [23 : 0] frac__h101179, x__h101264;
  wire [22 : 0] frac_f__h101185;
  wire [9 : 0] IF_0_CONCAT_IF_IF_rg_quire_12_BIT_511_13_THEN__ETC___d2443,
	       _0_CONCAT_IF_IF_rg_quire_12_BIT_511_13_THEN_0_M_ETC___d2438,
	       _271_MINUS_0_CONCAT_IF_IF_rg_quire_12_BIT_511_1_ETC___d2440,
	       extracter1_fifo_output_reg_first__237_BIT_35_2_ETC___d1317,
	       x__h99799;
  wire [8 : 0] IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d188,
	       IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d189,
	       IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d10,
	       IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d11,
	       SEXT_extracter1_fifo_output_reg_first__237_BIT_ETC___d1262,
	       _0_CONCAT_ffI_f_rvport1__read_BITS_30_TO_23_MI_ETC__q28,
	       msbZeros__h138272,
	       x__h101234,
	       x__h138166,
	       x__h50262,
	       x__h50350,
	       x__h50422,
	       x__h699,
	       x__h787,
	       x__h865;
  wire [7 : 0] IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC___d1373,
	       IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC__q29,
	       IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC__q30,
	       IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1328,
	       IF_extracter1_fifo_output_reg_first__237_BITS__ETC__q25,
	       IF_extracter1_fifo_output_reg_first__237_BITS__ETC__q26,
	       NEG_extracter2_fifo_output_regD_OUT_BITS_34_T_ETC__q24,
	       SEXT_IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ__ETC___d995,
	       SEXT_IF_IF_ffI_first__75_BIT_103_09_THEN_0_MIN_ETC___d649,
	       SEXT_IF_new_inp04024_BIT_30_THEN_b04893_ELSE_b_ETC__q14,
	       SEXT_IF_new_inp14376_BIT_30_THEN_b15316_ELSE_b_ETC__q12,
	       _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1375,
	       _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1379,
	       extracter1_fifo_output_regD_OUT_BITS_34_TO_27__q15,
	       extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1330,
	       extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1334,
	       extracter2_fifo_output_regD_OUT_BITS_34_TO_27__q27,
	       ptof_ptoF_fifo_stage0_regD_OUT_BITS_38_TO_31__q3,
	       qtop_quireToPosit1_fifo_stage0_regD_OUT_BITS__ETC__q6;
  wire [5 : 0] IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC___d1384,
	       IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1339,
	       IF_ftop_fToP_fifo_stage0_reg_first__82_BIT_7_8_ETC___d389,
	       IF_new_inp04024_BIT_30_THEN_b04893_ELSE_b04895__q13,
	       IF_new_inp14376_BIT_30_THEN_b15316_ELSE_b15318__q11,
	       IF_ptof_ptoF_fifo_stage0_reg_first__21_BIT_7_3_ETC___d435,
	       _0_MINUS_ftop_ffOD_OUT_BITS_36_TO_31__q4,
	       _0_MINUS_qtop_ffOD_OUT_BITS_36_TO_31__q5,
	       b__h104893,
	       b__h104895,
	       b__h115316,
	       b__h115318,
	       x__h100545,
	       x__h101324,
	       x__h109274,
	       x__h119697;
  wire [4 : 0] IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471__ETC___d2505,
	       IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647__ETC___d2681,
	       IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84__ETC___d1120,
	       IF_IF_ffI_first__75_BIT_103_09_THEN_0_MINUS_ff_ETC___d774,
	       IF_ftop_ffO_first__466_BIT_35_477_AND_NOT_ftop_ETC___d2483,
	       IF_qtop_ffO_first__642_BIT_35_653_AND_NOT_qtop_ETC___d2659,
	       _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530,
	       _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706,
	       _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490,
	       _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666,
	       ftop_ffO_first__466_BITS_35_TO_31_478_PLUS_1___d2479,
	       qtop_ffO_first__642_BITS_35_TO_31_654_PLUS_1___d2655,
	       x__h104903,
	       x__h109281,
	       x__h113990,
	       x__h113992,
	       x__h114027,
	       x__h115326,
	       x__h119704,
	       x__h124413,
	       x__h124415,
	       x__h124450,
	       x__h225889,
	       x__h226786,
	       x__h228607,
	       x__h228768,
	       x__h231224,
	       x__h232121,
	       x__h233942,
	       x__h234103;
  wire [2 : 0] _theResult___snd_snd__h226877,
	       _theResult___snd_snd__h232212,
	       i1__h228658,
	       i1__h233993,
	       i__h228560,
	       i__h233895,
	       shift_new0__h225156,
	       shift_new0__h230496,
	       shift_new__h226824,
	       shift_new__h232159,
	       x__h226828,
	       x__h232163;
  wire [1 : 0] IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1256,
	       IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d242,
	       IF_rg_quire_12_EQ_0_33_THEN_2_ELSE_0___d134,
	       _theResult___fst__h226731,
	       _theResult___fst__h232066,
	       expo__h104031,
	       expo__h114383,
	       expo_new__h226796,
	       expo_new__h226825,
	       expo_new__h232131,
	       expo_new__h232160,
	       mask_e__h226729,
	       mask_e__h232064,
	       truncated_frac__h1200,
	       truncated_frac__h50754,
	       x__h226702,
	       x__h228451,
	       x__h232037,
	       x__h233786;
  wire IF_IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_4_ETC___d2565,
       IF_IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_6_ETC___d2741,
       IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d12,
       IF_opcode_norm_first__452_EQ_4_453_THEN_ftop_f_ETC___d2462,
       NOT_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__46_ETC___d2581,
       NOT_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__46_ETC___d2625,
       NOT_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__64_ETC___d2757,
       NOT_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__64_ETC___d2801,
       NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2533,
       NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2542,
       NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2597,
       NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2603,
       NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2622,
       NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2626,
       NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2709,
       NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2718,
       NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2773,
       NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2779,
       NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2798,
       NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2802,
       NOT_IF_fda_divider_fifo_stage0_reg_first__82_B_ETC___d191,
       NOT_IF_ftop_ffO_first__466_BIT_36_471_THEN_1_S_ETC___d2517,
       NOT_IF_qtop_ffO_first__642_BIT_36_647_THEN_1_S_ETC___d2693,
       NOT_NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_ETC___d2555,
       NOT_NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_ETC___d2731,
       NOT_verbosity_ULE_1_195___d1196,
       _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1370,
       _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1371,
       _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2567,
       _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2743,
       _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2491,
       _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2667,
       _theResult____h225166,
       _theResult____h230506,
       add_round__h101187,
       all_bits_0__h1203,
       all_bits_0__h50757,
       extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1325,
       extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1326,
       fda_divider_intDivide_rg_denom2_43_ULE_0_CONCA_ETC___d147,
       fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156,
       fda_divider_intDivide_rg_numer_44_ULT_fda_divi_ETC___d167,
       fda_divider_intDivide_rg_state_41_EQ_0_277_OR__ETC___d1288,
       flag_prev_truncate__h225165,
       flag_prev_truncate__h230505,
       flag_truncated_frac__h1198,
       flag_truncated_frac__h50752,
       ftop_ffO_first__466_BITS_28_TO_2_521_BIT_IF_30_ETC___d2539,
       ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2548,
       ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2552,
       qtop_ffO_first__642_BITS_28_TO_2_697_BIT_IF_30_ETC___d2715,
       qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2724,
       qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2728,
       qtop_quireToPosit1_fifo_stage0_reg_first__39_B_ETC___d342,
       truncated_frac_msb___1__h50270,
       truncated_frac_msb__h101181,
       truncated_frac_msb__h225161,
       truncated_frac_msb__h230501,
       truncated_frac_zero___1__h50272,
       truncated_frac_zero__h100419,
       truncated_frac_zero__h101180,
       truncated_frac_zero__h50067,
       x__h100558,
       x__h100635,
       x__h100647,
       x__h100648,
       x__h101351,
       x__h101352,
       x__h101372,
       x__h1246,
       x__h1248,
       x__h135719,
       x__h135804,
       x__h135826,
       x__h135828,
       x__h136923,
       x__h137356,
       x__h137805,
       x__h145559,
       x__h48743,
       x__h48748,
       x__h49885,
       x__h50503,
       x__h50800,
       x__h50802,
       x__h58099,
       x__h828,
       x__h8567,
       x__h872,
       x__h98271,
       x__h98276,
       x__h99815,
       x__h99858,
       y__h101373,
       y__h1247,
       y__h228648,
       y__h228652,
       y__h233983,
       y__h233987,
       y__h26778,
       y__h48761,
       y__h50801,
       y__h76310,
       y__h98289;

  // action method server_core_request_put
  assign RDY_server_core_request_put = ffI$FULL_N ;
  assign CAN_FIRE_server_core_request_put = ffI$FULL_N ;
  assign WILL_FIRE_server_core_request_put = EN_server_core_request_put ;

  // actionvalue method server_core_response_get
  assign server_core_response_get =
	     { CASE_ffOD_OUT_BITS_70_TO_69_0_ffOD_OUT_BITS__ETC__q1,
	       ffO$D_OUT[68:0] } ;
  assign RDY_server_core_response_get = ffO$EMPTY_N ;
  assign CAN_FIRE_server_core_response_get = ffO$EMPTY_N ;
  assign WILL_FIRE_server_core_response_get = EN_server_core_response_get ;

  // submodule extracter1_fifo_output_reg
  FIFO2 #(.width(32'd38),
	  .guarded(32'd1)) extracter1_fifo_output_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(extracter1_fifo_output_reg$D_IN),
						      .ENQ(extracter1_fifo_output_reg$ENQ),
						      .DEQ(extracter1_fifo_output_reg$DEQ),
						      .CLR(extracter1_fifo_output_reg$CLR),
						      .D_OUT(extracter1_fifo_output_reg$D_OUT),
						      .FULL_N(extracter1_fifo_output_reg$FULL_N),
						      .EMPTY_N(extracter1_fifo_output_reg$EMPTY_N));

  // submodule extracter1_fifo_stage0_reg
  FIFO2 #(.width(32'd34),
	  .guarded(32'd1)) extracter1_fifo_stage0_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(extracter1_fifo_stage0_reg$D_IN),
						      .ENQ(extracter1_fifo_stage0_reg$ENQ),
						      .DEQ(extracter1_fifo_stage0_reg$DEQ),
						      .CLR(extracter1_fifo_stage0_reg$CLR),
						      .D_OUT(),
						      .FULL_N(),
						      .EMPTY_N());

  // submodule extracter1_fifo_stage1_reg
  FIFO2 #(.width(32'd43),
	  .guarded(32'd1)) extracter1_fifo_stage1_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(extracter1_fifo_stage1_reg$D_IN),
						      .ENQ(extracter1_fifo_stage1_reg$ENQ),
						      .DEQ(extracter1_fifo_stage1_reg$DEQ),
						      .CLR(extracter1_fifo_stage1_reg$CLR),
						      .D_OUT(),
						      .FULL_N(),
						      .EMPTY_N());

  // submodule extracter1_fifo_stage2_reg
  FIFO2 #(.width(32'd40),
	  .guarded(32'd1)) extracter1_fifo_stage2_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(extracter1_fifo_stage2_reg$D_IN),
						      .ENQ(extracter1_fifo_stage2_reg$ENQ),
						      .DEQ(extracter1_fifo_stage2_reg$DEQ),
						      .CLR(extracter1_fifo_stage2_reg$CLR),
						      .D_OUT(),
						      .FULL_N(),
						      .EMPTY_N());

  // submodule extracter2_fifo_output_reg
  FIFO2 #(.width(32'd38),
	  .guarded(32'd1)) extracter2_fifo_output_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(extracter2_fifo_output_reg$D_IN),
						      .ENQ(extracter2_fifo_output_reg$ENQ),
						      .DEQ(extracter2_fifo_output_reg$DEQ),
						      .CLR(extracter2_fifo_output_reg$CLR),
						      .D_OUT(extracter2_fifo_output_reg$D_OUT),
						      .FULL_N(extracter2_fifo_output_reg$FULL_N),
						      .EMPTY_N(extracter2_fifo_output_reg$EMPTY_N));

  // submodule extracter2_fifo_stage0_reg
  FIFO2 #(.width(32'd34),
	  .guarded(32'd1)) extracter2_fifo_stage0_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(extracter2_fifo_stage0_reg$D_IN),
						      .ENQ(extracter2_fifo_stage0_reg$ENQ),
						      .DEQ(extracter2_fifo_stage0_reg$DEQ),
						      .CLR(extracter2_fifo_stage0_reg$CLR),
						      .D_OUT(),
						      .FULL_N(),
						      .EMPTY_N());

  // submodule extracter2_fifo_stage1_reg
  FIFO2 #(.width(32'd43),
	  .guarded(32'd1)) extracter2_fifo_stage1_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(extracter2_fifo_stage1_reg$D_IN),
						      .ENQ(extracter2_fifo_stage1_reg$ENQ),
						      .DEQ(extracter2_fifo_stage1_reg$DEQ),
						      .CLR(extracter2_fifo_stage1_reg$CLR),
						      .D_OUT(),
						      .FULL_N(),
						      .EMPTY_N());

  // submodule extracter2_fifo_stage2_reg
  FIFO2 #(.width(32'd40),
	  .guarded(32'd1)) extracter2_fifo_stage2_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(extracter2_fifo_stage2_reg$D_IN),
						      .ENQ(extracter2_fifo_stage2_reg$ENQ),
						      .DEQ(extracter2_fifo_stage2_reg$DEQ),
						      .CLR(extracter2_fifo_stage2_reg$CLR),
						      .D_OUT(),
						      .FULL_N(),
						      .EMPTY_N());

  // submodule fda_adder_fifo_output_reg
  FIFO20 #(.guarded(32'd1)) fda_adder_fifo_output_reg(.RST(RST_N),
						      .CLK(CLK),
						      .ENQ(fda_adder_fifo_output_reg$ENQ),
						      .DEQ(fda_adder_fifo_output_reg$DEQ),
						      .CLR(fda_adder_fifo_output_reg$CLR),
						      .FULL_N(fda_adder_fifo_output_reg$FULL_N),
						      .EMPTY_N(fda_adder_fifo_output_reg$EMPTY_N));

  // submodule fda_adder_fifo_stage0_reg
  FIFO2 #(.width(32'd519),
	  .guarded(32'd1)) fda_adder_fifo_stage0_reg(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fda_adder_fifo_stage0_reg$D_IN),
						     .ENQ(fda_adder_fifo_stage0_reg$ENQ),
						     .DEQ(fda_adder_fifo_stage0_reg$DEQ),
						     .CLR(fda_adder_fifo_stage0_reg$CLR),
						     .D_OUT(fda_adder_fifo_stage0_reg$D_OUT),
						     .FULL_N(fda_adder_fifo_stage0_reg$FULL_N),
						     .EMPTY_N(fda_adder_fifo_stage0_reg$EMPTY_N));

  // submodule fda_divider_fifo_output_reg
  FIFO2 #(.width(32'd517),
	  .guarded(32'd1)) fda_divider_fifo_output_reg(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(fda_divider_fifo_output_reg$D_IN),
						       .ENQ(fda_divider_fifo_output_reg$ENQ),
						       .DEQ(fda_divider_fifo_output_reg$DEQ),
						       .CLR(fda_divider_fifo_output_reg$CLR),
						       .D_OUT(fda_divider_fifo_output_reg$D_OUT),
						       .FULL_N(fda_divider_fifo_output_reg$FULL_N),
						       .EMPTY_N(fda_divider_fifo_output_reg$EMPTY_N));

  // submodule fda_divider_fifo_stage0_reg
  FIFO2 #(.width(32'd13),
	  .guarded(32'd1)) fda_divider_fifo_stage0_reg(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(fda_divider_fifo_stage0_reg$D_IN),
						       .ENQ(fda_divider_fifo_stage0_reg$ENQ),
						       .DEQ(fda_divider_fifo_stage0_reg$DEQ),
						       .CLR(fda_divider_fifo_stage0_reg$CLR),
						       .D_OUT(fda_divider_fifo_stage0_reg$D_OUT),
						       .FULL_N(fda_divider_fifo_stage0_reg$FULL_N),
						       .EMPTY_N(fda_divider_fifo_stage0_reg$EMPTY_N));

  // submodule fda_divider_intDivide_fifo_output_reg
  FIFO2 #(.width(32'd57),
	  .guarded(32'd1)) fda_divider_intDivide_fifo_output_reg(.RST(RST_N),
								 .CLK(CLK),
								 .D_IN(fda_divider_intDivide_fifo_output_reg$D_IN),
								 .ENQ(fda_divider_intDivide_fifo_output_reg$ENQ),
								 .DEQ(fda_divider_intDivide_fifo_output_reg$DEQ),
								 .CLR(fda_divider_intDivide_fifo_output_reg$CLR),
								 .D_OUT(fda_divider_intDivide_fifo_output_reg$D_OUT),
								 .FULL_N(fda_divider_intDivide_fifo_output_reg$FULL_N),
								 .EMPTY_N(fda_divider_intDivide_fifo_output_reg$EMPTY_N));

  // submodule fda_ffO
  FIFO20 #(.guarded(32'd1)) fda_ffO(.RST(RST_N),
				    .CLK(CLK),
				    .ENQ(fda_ffO$ENQ),
				    .DEQ(fda_ffO$DEQ),
				    .CLR(fda_ffO$CLR),
				    .FULL_N(fda_ffO$FULL_N),
				    .EMPTY_N(fda_ffO$EMPTY_N));

  // submodule ffI
  FIFO2 #(.width(32'd138), .guarded(32'd1)) ffI(.RST(RST_N),
						.CLK(CLK),
						.D_IN(ffI$D_IN),
						.ENQ(ffI$ENQ),
						.DEQ(ffI$DEQ),
						.CLR(ffI$CLR),
						.D_OUT(ffI$D_OUT),
						.FULL_N(ffI$FULL_N),
						.EMPTY_N(ffI$EMPTY_N));

  // submodule ffO
  FIFO2 #(.width(32'd71), .guarded(32'd1)) ffO(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(ffO$D_IN),
					       .ENQ(ffO$ENQ),
					       .DEQ(ffO$DEQ),
					       .CLR(ffO$CLR),
					       .D_OUT(ffO$D_OUT),
					       .FULL_N(ffO$FULL_N),
					       .EMPTY_N(ffO$EMPTY_N));

  // submodule fma_adder_fifo_output_reg
  FIFO20 #(.guarded(32'd1)) fma_adder_fifo_output_reg(.RST(RST_N),
						      .CLK(CLK),
						      .ENQ(fma_adder_fifo_output_reg$ENQ),
						      .DEQ(fma_adder_fifo_output_reg$DEQ),
						      .CLR(fma_adder_fifo_output_reg$CLR),
						      .FULL_N(fma_adder_fifo_output_reg$FULL_N),
						      .EMPTY_N(fma_adder_fifo_output_reg$EMPTY_N));

  // submodule fma_adder_fifo_stage0_reg
  FIFO2 #(.width(32'd519),
	  .guarded(32'd1)) fma_adder_fifo_stage0_reg(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(fma_adder_fifo_stage0_reg$D_IN),
						     .ENQ(fma_adder_fifo_stage0_reg$ENQ),
						     .DEQ(fma_adder_fifo_stage0_reg$DEQ),
						     .CLR(fma_adder_fifo_stage0_reg$CLR),
						     .D_OUT(fma_adder_fifo_stage0_reg$D_OUT),
						     .FULL_N(fma_adder_fifo_stage0_reg$FULL_N),
						     .EMPTY_N(fma_adder_fifo_stage0_reg$EMPTY_N));

  // submodule fma_ffO
  FIFO20 #(.guarded(32'd1)) fma_ffO(.RST(RST_N),
				    .CLK(CLK),
				    .ENQ(fma_ffO$ENQ),
				    .DEQ(fma_ffO$DEQ),
				    .CLR(fma_ffO$CLR),
				    .FULL_N(fma_ffO$FULL_N),
				    .EMPTY_N(fma_ffO$EMPTY_N));

  // submodule fma_multiplier_fifo_output_reg
  FIFO2 #(.width(32'd517),
	  .guarded(32'd1)) fma_multiplier_fifo_output_reg(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(fma_multiplier_fifo_output_reg$D_IN),
							  .ENQ(fma_multiplier_fifo_output_reg$ENQ),
							  .DEQ(fma_multiplier_fifo_output_reg$DEQ),
							  .CLR(fma_multiplier_fifo_output_reg$CLR),
							  .D_OUT(fma_multiplier_fifo_output_reg$D_OUT),
							  .FULL_N(fma_multiplier_fifo_output_reg$FULL_N),
							  .EMPTY_N(fma_multiplier_fifo_output_reg$EMPTY_N));

  // submodule fma_multiplier_fifo_stage0_reg
  FIFO2 #(.width(32'd69),
	  .guarded(32'd1)) fma_multiplier_fifo_stage0_reg(.RST(RST_N),
							  .CLK(CLK),
							  .D_IN(fma_multiplier_fifo_stage0_reg$D_IN),
							  .ENQ(fma_multiplier_fifo_stage0_reg$ENQ),
							  .DEQ(fma_multiplier_fifo_stage0_reg$DEQ),
							  .CLR(fma_multiplier_fifo_stage0_reg$CLR),
							  .D_OUT(fma_multiplier_fifo_stage0_reg$D_OUT),
							  .FULL_N(fma_multiplier_fifo_stage0_reg$FULL_N),
							  .EMPTY_N(fma_multiplier_fifo_stage0_reg$EMPTY_N));

  // submodule ftop_fToP_fifo_output_reg
  FIFO2 #(.width(32'd41),
	  .guarded(32'd1)) ftop_fToP_fifo_output_reg(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(ftop_fToP_fifo_output_reg$D_IN),
						     .ENQ(ftop_fToP_fifo_output_reg$ENQ),
						     .DEQ(ftop_fToP_fifo_output_reg$DEQ),
						     .CLR(ftop_fToP_fifo_output_reg$CLR),
						     .D_OUT(ftop_fToP_fifo_output_reg$D_OUT),
						     .FULL_N(ftop_fToP_fifo_output_reg$FULL_N),
						     .EMPTY_N(ftop_fToP_fifo_output_reg$EMPTY_N));

  // submodule ftop_fToP_fifo_stage0_reg
  FIFO2 #(.width(32'd47),
	  .guarded(32'd1)) ftop_fToP_fifo_stage0_reg(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(ftop_fToP_fifo_stage0_reg$D_IN),
						     .ENQ(ftop_fToP_fifo_stage0_reg$ENQ),
						     .DEQ(ftop_fToP_fifo_stage0_reg$DEQ),
						     .CLR(ftop_fToP_fifo_stage0_reg$CLR),
						     .D_OUT(ftop_fToP_fifo_stage0_reg$D_OUT),
						     .FULL_N(ftop_fToP_fifo_stage0_reg$FULL_N),
						     .EMPTY_N(ftop_fToP_fifo_stage0_reg$EMPTY_N));

  // submodule ftop_ffO
  FIFO2 #(.width(32'd41), .guarded(32'd1)) ftop_ffO(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(ftop_ffO$D_IN),
						    .ENQ(ftop_ffO$ENQ),
						    .DEQ(ftop_ffO$DEQ),
						    .CLR(ftop_ffO$CLR),
						    .D_OUT(ftop_ffO$D_OUT),
						    .FULL_N(ftop_ffO$FULL_N),
						    .EMPTY_N(ftop_ffO$EMPTY_N));

  // submodule need_normalize
  FIFO1 #(.width(32'd1), .guarded(32'd1)) need_normalize(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(need_normalize$D_IN),
							 .ENQ(need_normalize$ENQ),
							 .DEQ(need_normalize$DEQ),
							 .CLR(need_normalize$CLR),
							 .D_OUT(),
							 .FULL_N(),
							 .EMPTY_N());

  // submodule normalizer_fifo_output_reg
  FIFO2 #(.width(32'd36),
	  .guarded(32'd1)) normalizer_fifo_output_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(normalizer_fifo_output_reg$D_IN),
						      .ENQ(normalizer_fifo_output_reg$ENQ),
						      .DEQ(normalizer_fifo_output_reg$DEQ),
						      .CLR(normalizer_fifo_output_reg$CLR),
						      .D_OUT(normalizer_fifo_output_reg$D_OUT),
						      .FULL_N(normalizer_fifo_output_reg$FULL_N),
						      .EMPTY_N(normalizer_fifo_output_reg$EMPTY_N));

  // submodule normalizer_fifo_stage0_reg
  FIFO2 #(.width(32'd66),
	  .guarded(32'd1)) normalizer_fifo_stage0_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(normalizer_fifo_stage0_reg$D_IN),
						      .ENQ(normalizer_fifo_stage0_reg$ENQ),
						      .DEQ(normalizer_fifo_stage0_reg$DEQ),
						      .CLR(normalizer_fifo_stage0_reg$CLR),
						      .D_OUT(),
						      .FULL_N(),
						      .EMPTY_N());

  // submodule normalizer_fifo_stage1_reg
  FIFO2 #(.width(32'd70),
	  .guarded(32'd1)) normalizer_fifo_stage1_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(normalizer_fifo_stage1_reg$D_IN),
						      .ENQ(normalizer_fifo_stage1_reg$ENQ),
						      .DEQ(normalizer_fifo_stage1_reg$DEQ),
						      .CLR(normalizer_fifo_stage1_reg$CLR),
						      .D_OUT(),
						      .FULL_N(),
						      .EMPTY_N());

  // submodule normalizer_fifo_stage2_reg
  FIFO2 #(.width(32'd36),
	  .guarded(32'd1)) normalizer_fifo_stage2_reg(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(normalizer_fifo_stage2_reg$D_IN),
						      .ENQ(normalizer_fifo_stage2_reg$ENQ),
						      .DEQ(normalizer_fifo_stage2_reg$DEQ),
						      .CLR(normalizer_fifo_stage2_reg$CLR),
						      .D_OUT(),
						      .FULL_N(),
						      .EMPTY_N());

  // submodule opcode_norm
  FIFO1 #(.width(32'd3), .guarded(32'd1)) opcode_norm(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(opcode_norm$D_IN),
						      .ENQ(opcode_norm$ENQ),
						      .DEQ(opcode_norm$DEQ),
						      .CLR(opcode_norm$CLR),
						      .D_OUT(opcode_norm$D_OUT),
						      .FULL_N(opcode_norm$FULL_N),
						      .EMPTY_N(opcode_norm$EMPTY_N));

  // submodule opcode_out
  FIFO1 #(.width(32'd3), .guarded(32'd1)) opcode_out(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(opcode_out$D_IN),
						     .ENQ(opcode_out$ENQ),
						     .DEQ(opcode_out$DEQ),
						     .CLR(opcode_out$CLR),
						     .D_OUT(opcode_out$D_OUT),
						     .FULL_N(opcode_out$FULL_N),
						     .EMPTY_N(opcode_out$EMPTY_N));

  // submodule ptof_ffO
  FIFO2 #(.width(32'd32), .guarded(32'd1)) ptof_ffO(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(ptof_ffO$D_IN),
						    .ENQ(ptof_ffO$ENQ),
						    .DEQ(ptof_ffO$DEQ),
						    .CLR(ptof_ffO$CLR),
						    .D_OUT(ptof_ffO$D_OUT),
						    .FULL_N(ptof_ffO$FULL_N),
						    .EMPTY_N(ptof_ffO$EMPTY_N));

  // submodule ptof_ptoF_fifo_output_reg
  FIFO2 #(.width(32'd32),
	  .guarded(32'd1)) ptof_ptoF_fifo_output_reg(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(ptof_ptoF_fifo_output_reg$D_IN),
						     .ENQ(ptof_ptoF_fifo_output_reg$ENQ),
						     .DEQ(ptof_ptoF_fifo_output_reg$DEQ),
						     .CLR(ptof_ptoF_fifo_output_reg$CLR),
						     .D_OUT(ptof_ptoF_fifo_output_reg$D_OUT),
						     .FULL_N(ptof_ptoF_fifo_output_reg$FULL_N),
						     .EMPTY_N(ptof_ptoF_fifo_output_reg$EMPTY_N));

  // submodule ptof_ptoF_fifo_stage0_reg
  FIFO2 #(.width(32'd42),
	  .guarded(32'd1)) ptof_ptoF_fifo_stage0_reg(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(ptof_ptoF_fifo_stage0_reg$D_IN),
						     .ENQ(ptof_ptoF_fifo_stage0_reg$ENQ),
						     .DEQ(ptof_ptoF_fifo_stage0_reg$DEQ),
						     .CLR(ptof_ptoF_fifo_stage0_reg$CLR),
						     .D_OUT(ptof_ptoF_fifo_stage0_reg$D_OUT),
						     .FULL_N(ptof_ptoF_fifo_stage0_reg$FULL_N),
						     .EMPTY_N(ptof_ptoF_fifo_stage0_reg$EMPTY_N));

  // submodule ptoq_ffO
  FIFO20 #(.guarded(32'd1)) ptoq_ffO(.RST(RST_N),
				     .CLK(CLK),
				     .ENQ(ptoq_ffO$ENQ),
				     .DEQ(ptoq_ffO$DEQ),
				     .CLR(ptoq_ffO$CLR),
				     .FULL_N(ptoq_ffO$FULL_N),
				     .EMPTY_N(ptoq_ffO$EMPTY_N));

  // submodule ptoq_positToquire_fifo_output_reg
  FIFO20 #(.guarded(32'd1)) ptoq_positToquire_fifo_output_reg(.RST(RST_N),
							      .CLK(CLK),
							      .ENQ(ptoq_positToquire_fifo_output_reg$ENQ),
							      .DEQ(ptoq_positToquire_fifo_output_reg$DEQ),
							      .CLR(ptoq_positToquire_fifo_output_reg$CLR),
							      .FULL_N(ptoq_positToquire_fifo_output_reg$FULL_N),
							      .EMPTY_N(ptoq_positToquire_fifo_output_reg$EMPTY_N));

  // submodule ptoq_positToquire_fifo_stage0_reg
  FIFO2 #(.width(32'd38),
	  .guarded(32'd1)) ptoq_positToquire_fifo_stage0_reg(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(ptoq_positToquire_fifo_stage0_reg$D_IN),
							     .ENQ(ptoq_positToquire_fifo_stage0_reg$ENQ),
							     .DEQ(ptoq_positToquire_fifo_stage0_reg$DEQ),
							     .CLR(ptoq_positToquire_fifo_stage0_reg$CLR),
							     .D_OUT(),
							     .FULL_N(),
							     .EMPTY_N());

  // submodule ptoq_positToquire_fifo_stage1_reg
  FIFO2 #(.width(32'd483),
	  .guarded(32'd1)) ptoq_positToquire_fifo_stage1_reg(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(ptoq_positToquire_fifo_stage1_reg$D_IN),
							     .ENQ(ptoq_positToquire_fifo_stage1_reg$ENQ),
							     .DEQ(ptoq_positToquire_fifo_stage1_reg$DEQ),
							     .CLR(ptoq_positToquire_fifo_stage1_reg$CLR),
							     .D_OUT(ptoq_positToquire_fifo_stage1_reg$D_OUT),
							     .FULL_N(ptoq_positToquire_fifo_stage1_reg$FULL_N),
							     .EMPTY_N(ptoq_positToquire_fifo_stage1_reg$EMPTY_N));

  // submodule qtop_ffO
  FIFO2 #(.width(32'd41), .guarded(32'd1)) qtop_ffO(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(qtop_ffO$D_IN),
						    .ENQ(qtop_ffO$ENQ),
						    .DEQ(qtop_ffO$DEQ),
						    .CLR(qtop_ffO$CLR),
						    .D_OUT(qtop_ffO$D_OUT),
						    .FULL_N(qtop_ffO$FULL_N),
						    .EMPTY_N(qtop_ffO$EMPTY_N));

  // submodule qtop_quireToPosit1_fifo_output_reg
  FIFO2 #(.width(32'd41),
	  .guarded(32'd1)) qtop_quireToPosit1_fifo_output_reg(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(qtop_quireToPosit1_fifo_output_reg$D_IN),
							      .ENQ(qtop_quireToPosit1_fifo_output_reg$ENQ),
							      .DEQ(qtop_quireToPosit1_fifo_output_reg$DEQ),
							      .CLR(qtop_quireToPosit1_fifo_output_reg$CLR),
							      .D_OUT(qtop_quireToPosit1_fifo_output_reg$D_OUT),
							      .FULL_N(qtop_quireToPosit1_fifo_output_reg$FULL_N),
							      .EMPTY_N(qtop_quireToPosit1_fifo_output_reg$EMPTY_N));

  // submodule qtop_quireToPosit1_fifo_stage0_reg
  FIFO2 #(.width(32'd523),
	  .guarded(32'd1)) qtop_quireToPosit1_fifo_stage0_reg(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(qtop_quireToPosit1_fifo_stage0_reg$D_IN),
							      .ENQ(qtop_quireToPosit1_fifo_stage0_reg$ENQ),
							      .DEQ(qtop_quireToPosit1_fifo_stage0_reg$DEQ),
							      .CLR(qtop_quireToPosit1_fifo_stage0_reg$CLR),
							      .D_OUT(qtop_quireToPosit1_fifo_stage0_reg$D_OUT),
							      .FULL_N(qtop_quireToPosit1_fifo_stage0_reg$FULL_N),
							      .EMPTY_N(qtop_quireToPosit1_fifo_stage0_reg$EMPTY_N));

  // submodule qtop_quireToPosit1_fifo_stage1_reg
  FIFO2 #(.width(32'd41),
	  .guarded(32'd1)) qtop_quireToPosit1_fifo_stage1_reg(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(qtop_quireToPosit1_fifo_stage1_reg$D_IN),
							      .ENQ(qtop_quireToPosit1_fifo_stage1_reg$ENQ),
							      .DEQ(qtop_quireToPosit1_fifo_stage1_reg$DEQ),
							      .CLR(qtop_quireToPosit1_fifo_stage1_reg$CLR),
							      .D_OUT(qtop_quireToPosit1_fifo_stage1_reg$D_OUT),
							      .FULL_N(qtop_quireToPosit1_fifo_stage1_reg$FULL_N),
							      .EMPTY_N(qtop_quireToPosit1_fifo_stage1_reg$EMPTY_N));

  // rule RL_extract_in
  assign CAN_FIRE_RL_extract_in =
	     ffI$EMPTY_N && !opcode_in_rv[3] &&
	     IF_ffI_first__75_BITS_2_TO_0_76_EQ_4_77_THEN_N_ETC___d498 ;
  assign WILL_FIRE_RL_extract_in = CAN_FIRE_RL_extract_in ;

  // rule RL_rl_fma
  assign CAN_FIRE_RL_rl_fma =
	     opcode_in_rv$port1__read[3] &&
	     extracter1_fifo_output_reg$EMPTY_N &&
	     extracter2_fifo_output_reg$EMPTY_N &&
	     fma_multiplier_fifo_stage0_reg$FULL_N &&
	     opcode_out$FULL_N &&
	     (opcode_in_rv$port1__read[2:0] == 3'd0 ||
	      opcode_in_rv$port1__read[2:0] == 3'd2) &&
	     !rg_quire_busy ;
  assign WILL_FIRE_RL_rl_fma = CAN_FIRE_RL_rl_fma ;

  // rule RL_rl_fda
  assign CAN_FIRE_RL_rl_fda =
	     opcode_in_rv$port1__read[3] &&
	     fda_divider_intDivide_rg_state_41_EQ_0_277_OR__ETC___d1288 &&
	     (opcode_in_rv$port1__read[2:0] == 3'd1 ||
	      opcode_in_rv$port1__read[2:0] == 3'd3) &&
	     !rg_quire_busy ;
  assign WILL_FIRE_RL_rl_fda = CAN_FIRE_RL_rl_fda ;

  // rule RL_rl_ptof
  assign CAN_FIRE_RL_rl_ptof =
	     opcode_in_rv$port1__read[3] &&
	     extracter1_fifo_output_reg$EMPTY_N &&
	     opcode_out$FULL_N &&
	     ptof_ptoF_fifo_stage0_reg$FULL_N &&
	     opcode_in_rv$port1__read[2:0] == 3'd5 ;
  assign WILL_FIRE_RL_rl_ptof = CAN_FIRE_RL_rl_ptof ;

  // rule RL_rl_ftop
  assign CAN_FIRE_RL_rl_ftop =
	     opcode_in_rv$port1__read[3] && ffI_f_rv$port1__read[32] &&
	     ftop_fToP_fifo_stage0_reg$FULL_N &&
	     opcode_norm$FULL_N &&
	     opcode_in_rv$port1__read[2:0] == 3'd4 ;
  assign WILL_FIRE_RL_rl_ftop = CAN_FIRE_RL_rl_ftop ;

  // rule RL_rl_ptoq
  assign CAN_FIRE_RL_rl_ptoq =
	     opcode_in_rv$port1__read[3] &&
	     extracter1_fifo_output_reg$EMPTY_N &&
	     opcode_out$FULL_N &&
	     ptoq_positToquire_fifo_stage1_reg$FULL_N &&
	     opcode_in_rv$port1__read[2:0] == 3'd7 &&
	     !rg_quire_busy ;
  assign WILL_FIRE_RL_rl_ptoq = CAN_FIRE_RL_rl_ptoq ;

  // rule RL_rl_qtop
  assign CAN_FIRE_RL_rl_qtop =
	     opcode_in_rv$port1__read[3] && opcode_norm$FULL_N &&
	     qtop_quireToPosit1_fifo_stage0_reg$FULL_N &&
	     opcode_in_rv$port1__read[2:0] == 3'd6 &&
	     !rg_quire_busy ;
  assign WILL_FIRE_RL_rl_qtop = CAN_FIRE_RL_rl_qtop ;

  // rule RL_rl_norm
  assign CAN_FIRE_RL_rl_norm =
	     opcode_out$FULL_N && opcode_norm$EMPTY_N &&
	     IF_opcode_norm_first__452_EQ_4_453_THEN_ftop_f_ETC___d2462 ;
  assign WILL_FIRE_RL_rl_norm =
	     CAN_FIRE_RL_rl_norm && !WILL_FIRE_RL_rl_ptoq &&
	     !WILL_FIRE_RL_rl_ptof &&
	     !WILL_FIRE_RL_rl_fda &&
	     !WILL_FIRE_RL_rl_fma ;

  // rule RL_rl_out
  assign CAN_FIRE_RL_rl_out =
	     opcode_out$EMPTY_N &&
	     IF_opcode_out_first__846_EQ_0_847_OR_opcode_ou_ETC___d2875 ;
  assign WILL_FIRE_RL_rl_out = CAN_FIRE_RL_rl_out ;

  // rule RL_fma_rl_connect1
  assign CAN_FIRE_RL_fma_rl_connect1 =
	     fma_multiplier_fifo_output_reg$EMPTY_N &&
	     fma_adder_fifo_stage0_reg$FULL_N ;
  assign WILL_FIRE_RL_fma_rl_connect1 = CAN_FIRE_RL_fma_rl_connect1 ;

  // rule RL_fma_rl_out
  assign CAN_FIRE_RL_fma_rl_out =
	     fma_adder_fifo_output_reg$EMPTY_N && fma_ffO$FULL_N ;
  assign WILL_FIRE_RL_fma_rl_out = CAN_FIRE_RL_fma_rl_out ;

  // rule RL_fma_multiplier_stage_1
  assign CAN_FIRE_RL_fma_multiplier_stage_1 =
	     fma_multiplier_fifo_stage0_reg$EMPTY_N &&
	     fma_multiplier_fifo_output_reg$FULL_N ;
  assign WILL_FIRE_RL_fma_multiplier_stage_1 =
	     CAN_FIRE_RL_fma_multiplier_stage_1 ;

  // rule RL_fda_rl_connect1
  assign CAN_FIRE_RL_fda_rl_connect1 =
	     fda_divider_fifo_output_reg$EMPTY_N &&
	     fda_adder_fifo_stage0_reg$FULL_N ;
  assign WILL_FIRE_RL_fda_rl_connect1 = CAN_FIRE_RL_fda_rl_connect1 ;

  // rule RL_fma_adder_stage_1
  assign CAN_FIRE_RL_fma_adder_stage_1 =
	     fma_adder_fifo_stage0_reg$EMPTY_N &&
	     fma_adder_fifo_output_reg$FULL_N ;
  assign WILL_FIRE_RL_fma_adder_stage_1 = CAN_FIRE_RL_fma_adder_stage_1 ;

  // rule RL_fda_rl_out
  assign CAN_FIRE_RL_fda_rl_out =
	     fda_adder_fifo_output_reg$EMPTY_N && fda_ffO$FULL_N ;
  assign WILL_FIRE_RL_fda_rl_out = CAN_FIRE_RL_fda_rl_out ;

  // rule RL_fda_divider_stage_1
  assign CAN_FIRE_RL_fda_divider_stage_1 =
	     fda_divider_fifo_stage0_reg$EMPTY_N &&
	     fda_divider_intDivide_fifo_output_reg$EMPTY_N &&
	     fda_divider_fifo_output_reg$FULL_N ;
  assign WILL_FIRE_RL_fda_divider_stage_1 = CAN_FIRE_RL_fda_divider_stage_1 ;

  // rule RL_fda_divider_intDivide_rl_loop1
  assign CAN_FIRE_RL_fda_divider_intDivide_rl_loop1 =
	     fda_divider_intDivide_rg_state == 2'd1 ;
  assign WILL_FIRE_RL_fda_divider_intDivide_rl_loop1 =
	     CAN_FIRE_RL_fda_divider_intDivide_rl_loop1 ;

  // rule RL_fda_divider_intDivide_rl_loop2
  assign CAN_FIRE_RL_fda_divider_intDivide_rl_loop2 =
	     (!fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 ||
	      fda_divider_intDivide_fifo_output_reg$FULL_N) &&
	     fda_divider_intDivide_rg_state == 2'd2 ;
  assign WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 =
	     CAN_FIRE_RL_fda_divider_intDivide_rl_loop2 ;

  // rule RL_fda_adder_stage_1
  assign CAN_FIRE_RL_fda_adder_stage_1 =
	     fda_adder_fifo_stage0_reg$EMPTY_N &&
	     fda_adder_fifo_output_reg$FULL_N ;
  assign WILL_FIRE_RL_fda_adder_stage_1 = CAN_FIRE_RL_fda_adder_stage_1 ;

  // rule RL_ptoq_rl_out
  assign CAN_FIRE_RL_ptoq_rl_out =
	     ptoq_positToquire_fifo_output_reg$EMPTY_N && ptoq_ffO$FULL_N ;
  assign WILL_FIRE_RL_ptoq_rl_out = CAN_FIRE_RL_ptoq_rl_out ;

  // rule RL_ptoq_positToquire_stage_2
  assign CAN_FIRE_RL_ptoq_positToquire_stage_2 =
	     ptoq_positToquire_fifo_stage1_reg$EMPTY_N &&
	     ptoq_positToquire_fifo_output_reg$FULL_N ;
  assign WILL_FIRE_RL_ptoq_positToquire_stage_2 =
	     CAN_FIRE_RL_ptoq_positToquire_stage_2 ;

  // rule RL_qtop_rl_out
  assign CAN_FIRE_RL_qtop_rl_out =
	     qtop_quireToPosit1_fifo_output_reg$EMPTY_N && qtop_ffO$FULL_N ;
  assign WILL_FIRE_RL_qtop_rl_out = CAN_FIRE_RL_qtop_rl_out ;

  // rule RL_qtop_quireToPosit1_stage_1
  assign CAN_FIRE_RL_qtop_quireToPosit1_stage_1 =
	     qtop_quireToPosit1_fifo_stage0_reg$EMPTY_N &&
	     qtop_quireToPosit1_fifo_stage1_reg$FULL_N ;
  assign WILL_FIRE_RL_qtop_quireToPosit1_stage_1 =
	     CAN_FIRE_RL_qtop_quireToPosit1_stage_1 ;

  // rule RL_qtop_quireToPosit1_stage_2
  assign CAN_FIRE_RL_qtop_quireToPosit1_stage_2 =
	     qtop_quireToPosit1_fifo_stage1_reg$EMPTY_N &&
	     qtop_quireToPosit1_fifo_output_reg$FULL_N ;
  assign WILL_FIRE_RL_qtop_quireToPosit1_stage_2 =
	     CAN_FIRE_RL_qtop_quireToPosit1_stage_2 ;

  // rule RL_ftop_rl_out
  assign CAN_FIRE_RL_ftop_rl_out =
	     ftop_fToP_fifo_output_reg$EMPTY_N && ftop_ffO$FULL_N ;
  assign WILL_FIRE_RL_ftop_rl_out = CAN_FIRE_RL_ftop_rl_out ;

  // rule RL_ftop_fToP_stage_1
  assign CAN_FIRE_RL_ftop_fToP_stage_1 =
	     ftop_fToP_fifo_stage0_reg$EMPTY_N &&
	     ftop_fToP_fifo_output_reg$FULL_N ;
  assign WILL_FIRE_RL_ftop_fToP_stage_1 = CAN_FIRE_RL_ftop_fToP_stage_1 ;

  // rule RL_ptof_rl_out
  assign CAN_FIRE_RL_ptof_rl_out =
	     ptof_ptoF_fifo_output_reg$EMPTY_N && ptof_ffO$FULL_N ;
  assign WILL_FIRE_RL_ptof_rl_out = CAN_FIRE_RL_ptof_rl_out ;

  // rule RL_ptof_ptoF_stage_2
  assign CAN_FIRE_RL_ptof_ptoF_stage_2 =
	     ptof_ptoF_fifo_stage0_reg$EMPTY_N &&
	     ptof_ptoF_fifo_output_reg$FULL_N ;
  assign WILL_FIRE_RL_ptof_ptoF_stage_2 = CAN_FIRE_RL_ptof_ptoF_stage_2 ;

  // inputs to muxes for submodule ports
  assign MUX_fda_divider_intDivide_fifo_output_reg$enq_1__SEL_1 =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 &&
	     fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 ;
  assign MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_1 =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop1 &&
	     fda_divider_intDivide_rg_denom2_43_ULE_0_CONCA_ETC___d147 ;
  assign MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_fda && f2__h135812 != 28'd0 ;
  assign MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_3 =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 &&
	     !fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 &&
	     fda_divider_intDivide_rg_numer_44_ULT_fda_divi_ETC___d167 ;
  assign MUX_fda_divider_intDivide_rg_numer$write_1__SEL_2 =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 &&
	     !fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 &&
	     !fda_divider_intDivide_rg_numer_44_ULT_fda_divi_ETC___d167 ;
  assign MUX_fda_divider_intDivide_rg_state$write_1__SEL_2 =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop1 &&
	     !fda_divider_intDivide_rg_denom2_43_ULE_0_CONCA_ETC___d147 ;
  assign MUX_opcode_out$enq_1__SEL_1 =
	     WILL_FIRE_RL_rl_ptoq || WILL_FIRE_RL_rl_ptof ||
	     WILL_FIRE_RL_rl_fda ||
	     WILL_FIRE_RL_rl_fma ;
  assign MUX_rg_quire_busy$write_1__SEL_1 =
	     WILL_FIRE_RL_rl_out &&
	     (opcode_out$D_OUT == 3'd0 || opcode_out$D_OUT == 3'd2 ||
	      opcode_out$D_OUT == 3'd1 ||
	      opcode_out$D_OUT == 3'd3 ||
	      opcode_out$D_OUT == 3'd7) ;
  assign MUX_rg_quire_busy$write_1__SEL_2 =
	     WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd6 ;
  assign MUX_fda_divider_intDivide_fifo_output_reg$enq_1__VAL_1 =
	     { fda_divider_intDivide_rg_quo,
	       fda_divider_intDivide_rg_numer[27],
	       x__h49885 } ;
  assign MUX_fda_divider_intDivide_fifo_output_reg$enq_1__VAL_2 =
	     { fda_divider_intDivide_rg_quo, 2'd1 } ;
  assign MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_1 =
	     { fda_divider_intDivide_rg_denom2[80:0], 1'd0 } ;
  assign MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_2 =
	     { 54'd0, f2__h135812 } ;
  assign MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_3 =
	     { 1'd0, fda_divider_intDivide_rg_denom2[81:1] } ;
  assign MUX_fda_divider_intDivide_rg_n$write_1__VAL_1 =
	     { fda_divider_intDivide_rg_n[53:0], 1'd0 } ;
  assign MUX_fda_divider_intDivide_rg_n$write_1__VAL_3 =
	     { 1'd0, fda_divider_intDivide_rg_n[54:1] } ;
  assign MUX_fda_divider_intDivide_rg_numer$write_1__VAL_1 =
	     { f1__h135811, 54'd0 } ;
  assign MUX_fda_divider_intDivide_rg_numer$write_1__VAL_2 =
	     fda_divider_intDivide_rg_numer -
	     fda_divider_intDivide_rg_denom2 ;
  assign MUX_fda_divider_intDivide_rg_quo$write_1__VAL_1 =
	     fda_divider_intDivide_rg_quo + fda_divider_intDivide_rg_n ;
  assign MUX_fda_divider_intDivide_rg_quo$write_1__VAL_2 =
	     (f2__h135812 == 28'd0) ? 55'h7FFFFFFFFFFFFF : 55'd0 ;
  assign MUX_fda_divider_intDivide_rg_state$write_1__VAL_3 =
	     (f2__h135812 == 28'd0) ? 2'd3 : 2'd1 ;
  assign MUX_rg_quire$write_1__VAL_1 =
	     (ptoq_positToquire_fifo_stage1_reg$D_OUT[1:0] == 2'd2) ?
	       512'd0 :
	       twos_complement_carry_int_frac__h98816 ;
  assign MUX_rg_quire$write_1__VAL_2 =
	     (x__h50800 | y__h50801) ?
	       512'h80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 :
	       IF_INV_NOT_IF_NOT_fda_adder_fifo_stage0_reg_fi_ETC___d291 ;
  assign MUX_rg_quire$write_1__VAL_3 =
	     (x__h1246 | y__h1247) ?
	       512'h80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 :
	       IF_INV_NOT_IF_NOT_fma_adder_fifo_stage0_reg_fi_ETC___d107 ;

  // inlined wires
  assign opcode_in_rv$port0__write_1 = { 1'd1, ffI$D_OUT[2:0] } ;
  assign opcode_in_rv$port1__read =
	     CAN_FIRE_RL_extract_in ?
	       opcode_in_rv$port0__write_1 :
	       opcode_in_rv ;
  assign opcode_in_rv$EN_port1__write =
	     WILL_FIRE_RL_rl_qtop || WILL_FIRE_RL_rl_ptoq ||
	     WILL_FIRE_RL_rl_ftop ||
	     WILL_FIRE_RL_rl_ptof ||
	     WILL_FIRE_RL_rl_fda ||
	     WILL_FIRE_RL_rl_fma ;
  assign opcode_in_rv$port2__read =
	     opcode_in_rv$EN_port1__write ? 4'd2 : opcode_in_rv$port1__read ;
  assign ffI_f_rv$EN_port0__write =
	     WILL_FIRE_RL_extract_in && ffI$D_OUT[2:0] == 3'd4 ;
  assign ffI_f_rv$port0__write_1 = { 1'd1, ffI$D_OUT[103:72] } ;
  assign ffI_f_rv$port1__read =
	     ffI_f_rv$EN_port0__write ? ffI_f_rv$port0__write_1 : ffI_f_rv ;
  assign ffI_f_rv$port2__read =
	     CAN_FIRE_RL_rl_ftop ? 33'h0AAAAAAAA : ffI_f_rv$port1__read ;

  // register fda_check_quire
  assign fda_check_quire$D_IN = 1'b0 ;
  assign fda_check_quire$EN = 1'b0 ;

  // register fda_divider_intDivide_rg_denom
  assign fda_divider_intDivide_rg_denom$D_IN = f2__h135812 ;
  assign fda_divider_intDivide_rg_denom$EN =
	     MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_2 ;

  // register fda_divider_intDivide_rg_denom2
  always@(MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_1 or
	  MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_1 or
	  MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_2 or
	  MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_2 or
	  MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_3 or
	  MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_1:
	  fda_divider_intDivide_rg_denom2$D_IN =
	      MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_1;
      MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_2:
	  fda_divider_intDivide_rg_denom2$D_IN =
	      MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_2;
      MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_3:
	  fda_divider_intDivide_rg_denom2$D_IN =
	      MUX_fda_divider_intDivide_rg_denom2$write_1__VAL_3;
      default: fda_divider_intDivide_rg_denom2$D_IN =
		   82'h2AAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fda_divider_intDivide_rg_denom2$EN =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop1 &&
	     fda_divider_intDivide_rg_denom2_43_ULE_0_CONCA_ETC___d147 ||
	     WILL_FIRE_RL_rl_fda && f2__h135812 != 28'd0 ||
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 &&
	     !fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 &&
	     fda_divider_intDivide_rg_numer_44_ULT_fda_divi_ETC___d167 ;

  // register fda_divider_intDivide_rg_n
  always@(MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_1 or
	  MUX_fda_divider_intDivide_rg_n$write_1__VAL_1 or
	  MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_2 or
	  MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_3 or
	  MUX_fda_divider_intDivide_rg_n$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_1:
	  fda_divider_intDivide_rg_n$D_IN =
	      MUX_fda_divider_intDivide_rg_n$write_1__VAL_1;
      MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_2:
	  fda_divider_intDivide_rg_n$D_IN = 55'd1;
      MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_3:
	  fda_divider_intDivide_rg_n$D_IN =
	      MUX_fda_divider_intDivide_rg_n$write_1__VAL_3;
      default: fda_divider_intDivide_rg_n$D_IN =
		   55'h2AAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fda_divider_intDivide_rg_n$EN =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop1 &&
	     fda_divider_intDivide_rg_denom2_43_ULE_0_CONCA_ETC___d147 ||
	     WILL_FIRE_RL_rl_fda && f2__h135812 != 28'd0 ||
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 &&
	     !fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 &&
	     fda_divider_intDivide_rg_numer_44_ULT_fda_divi_ETC___d167 ;

  // register fda_divider_intDivide_rg_numer
  assign fda_divider_intDivide_rg_numer$D_IN =
	     MUX_fda_divider_intDivide_rg_denom2$write_1__SEL_2 ?
	       MUX_fda_divider_intDivide_rg_numer$write_1__VAL_1 :
	       MUX_fda_divider_intDivide_rg_numer$write_1__VAL_2 ;
  assign fda_divider_intDivide_rg_numer$EN =
	     WILL_FIRE_RL_rl_fda && f2__h135812 != 28'd0 ||
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 &&
	     !fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 &&
	     !fda_divider_intDivide_rg_numer_44_ULT_fda_divi_ETC___d167 ;

  // register fda_divider_intDivide_rg_quo
  assign fda_divider_intDivide_rg_quo$D_IN =
	     MUX_fda_divider_intDivide_rg_numer$write_1__SEL_2 ?
	       MUX_fda_divider_intDivide_rg_quo$write_1__VAL_1 :
	       MUX_fda_divider_intDivide_rg_quo$write_1__VAL_2 ;
  assign fda_divider_intDivide_rg_quo$EN =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 &&
	     !fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 &&
	     !fda_divider_intDivide_rg_numer_44_ULT_fda_divi_ETC___d167 ||
	     WILL_FIRE_RL_rl_fda ;

  // register fda_divider_intDivide_rg_state
  always@(MUX_fda_divider_intDivide_fifo_output_reg$enq_1__SEL_1 or
	  MUX_fda_divider_intDivide_rg_state$write_1__SEL_2 or
	  WILL_FIRE_RL_rl_fda or
	  MUX_fda_divider_intDivide_rg_state$write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_fda_divider_intDivide_fifo_output_reg$enq_1__SEL_1:
	  fda_divider_intDivide_rg_state$D_IN = 2'd3;
      MUX_fda_divider_intDivide_rg_state$write_1__SEL_2:
	  fda_divider_intDivide_rg_state$D_IN = 2'd2;
      WILL_FIRE_RL_rl_fda:
	  fda_divider_intDivide_rg_state$D_IN =
	      MUX_fda_divider_intDivide_rg_state$write_1__VAL_3;
      default: fda_divider_intDivide_rg_state$D_IN =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  assign fda_divider_intDivide_rg_state$EN =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 &&
	     fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 ||
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop1 &&
	     !fda_divider_intDivide_rg_denom2_43_ULE_0_CONCA_ETC___d147 ||
	     WILL_FIRE_RL_rl_fda ;

  // register ffI_f_rv
  assign ffI_f_rv$D_IN = ffI_f_rv$port2__read ;
  assign ffI_f_rv$EN = 1'b1 ;

  // register fma_check_quire
  assign fma_check_quire$D_IN = 1'b0 ;
  assign fma_check_quire$EN = 1'b0 ;

  // register opcode_in_rv
  assign opcode_in_rv$D_IN = opcode_in_rv$port2__read ;
  assign opcode_in_rv$EN = 1'b1 ;

  // register rg_quire
  always@(WILL_FIRE_RL_ptoq_positToquire_stage_2 or
	  MUX_rg_quire$write_1__VAL_1 or
	  WILL_FIRE_RL_fda_adder_stage_1 or
	  MUX_rg_quire$write_1__VAL_2 or
	  WILL_FIRE_RL_fma_adder_stage_1 or MUX_rg_quire$write_1__VAL_3)
  case (1'b1)
    WILL_FIRE_RL_ptoq_positToquire_stage_2:
	rg_quire$D_IN = MUX_rg_quire$write_1__VAL_1;
    WILL_FIRE_RL_fda_adder_stage_1:
	rg_quire$D_IN = MUX_rg_quire$write_1__VAL_2;
    WILL_FIRE_RL_fma_adder_stage_1:
	rg_quire$D_IN = MUX_rg_quire$write_1__VAL_3;
    default: rg_quire$D_IN =
		 512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign rg_quire$EN =
	     WILL_FIRE_RL_fma_adder_stage_1 ||
	     WILL_FIRE_RL_fda_adder_stage_1 ||
	     WILL_FIRE_RL_ptoq_positToquire_stage_2 ;

  // register rg_quire_busy
  assign rg_quire_busy$D_IN =
	     !MUX_rg_quire_busy$write_1__SEL_1 &&
	     !MUX_rg_quire_busy$write_1__SEL_2 ;
  assign rg_quire_busy$EN =
	     WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd6 ||
	     WILL_FIRE_RL_rl_out &&
	     (opcode_out$D_OUT == 3'd0 || opcode_out$D_OUT == 3'd2 ||
	      opcode_out$D_OUT == 3'd1 ||
	      opcode_out$D_OUT == 3'd3 ||
	      opcode_out$D_OUT == 3'd7) ||
	     WILL_FIRE_RL_rl_qtop ||
	     WILL_FIRE_RL_rl_ptoq ||
	     WILL_FIRE_RL_rl_fda ||
	     WILL_FIRE_RL_rl_fma ;

  // submodule extracter1_fifo_output_reg
  assign extracter1_fifo_output_reg$D_IN =
	     { (ffI$D_OUT[102:72] == 31'd0 && !ffI$D_OUT[103]) ?
		 2'd2 :
		 ((ffI$D_OUT[102:72] == 31'd0 && ffI$D_OUT[103]) ?
		    2'd1 :
		    2'd0),
	       ffI$D_OUT[103],
	       IF_ffI_first__75_BITS_102_TO_72_07_EQ_0_08_AND_ETC___d846 } ;
  assign extracter1_fifo_output_reg$ENQ =
	     WILL_FIRE_RL_extract_in &&
	     (ffI$D_OUT[2:0] == 3'd1 || ffI$D_OUT[2:0] == 3'd3 ||
	      ffI$D_OUT[2:0] == 3'd2 ||
	      ffI$D_OUT[2:0] == 3'd0 ||
	      ffI$D_OUT[2:0] == 3'd5 ||
	      ffI$D_OUT[2:0] == 3'd7) ;
  assign extracter1_fifo_output_reg$DEQ = MUX_opcode_out$enq_1__SEL_1 ;
  assign extracter1_fifo_output_reg$CLR = 1'b0 ;

  // submodule extracter1_fifo_stage0_reg
  assign extracter1_fifo_stage0_reg$D_IN = 34'h0 ;
  assign extracter1_fifo_stage0_reg$ENQ = 1'b0 ;
  assign extracter1_fifo_stage0_reg$DEQ = 1'b0 ;
  assign extracter1_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule extracter1_fifo_stage1_reg
  assign extracter1_fifo_stage1_reg$D_IN = 43'h0 ;
  assign extracter1_fifo_stage1_reg$ENQ = 1'b0 ;
  assign extracter1_fifo_stage1_reg$DEQ = 1'b0 ;
  assign extracter1_fifo_stage1_reg$CLR = 1'b0 ;

  // submodule extracter1_fifo_stage2_reg
  assign extracter1_fifo_stage2_reg$D_IN = 40'h0 ;
  assign extracter1_fifo_stage2_reg$ENQ = 1'b0 ;
  assign extracter1_fifo_stage2_reg$DEQ = 1'b0 ;
  assign extracter1_fifo_stage2_reg$CLR = 1'b0 ;

  // submodule extracter2_fifo_output_reg
  assign extracter2_fifo_output_reg$D_IN =
	     { (IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[30:0] ==
		31'd0 &&
		!IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[31]) ?
		 2'd2 :
		 ((IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[30:0] ==
		   31'd0 &&
		   IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[31]) ?
		    2'd1 :
		    2'd0),
	       IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[31],
	       IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR__ETC___d1192 } ;
  assign extracter2_fifo_output_reg$ENQ =
	     WILL_FIRE_RL_extract_in &&
	     (ffI$D_OUT[2:0] == 3'd1 || ffI$D_OUT[2:0] == 3'd3 ||
	      ffI$D_OUT[2:0] == 3'd2 ||
	      ffI$D_OUT[2:0] == 3'd0) ;
  assign extracter2_fifo_output_reg$DEQ =
	     WILL_FIRE_RL_rl_fda || WILL_FIRE_RL_rl_fma ;
  assign extracter2_fifo_output_reg$CLR = 1'b0 ;

  // submodule extracter2_fifo_stage0_reg
  assign extracter2_fifo_stage0_reg$D_IN = 34'h0 ;
  assign extracter2_fifo_stage0_reg$ENQ = 1'b0 ;
  assign extracter2_fifo_stage0_reg$DEQ = 1'b0 ;
  assign extracter2_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule extracter2_fifo_stage1_reg
  assign extracter2_fifo_stage1_reg$D_IN = 43'h0 ;
  assign extracter2_fifo_stage1_reg$ENQ = 1'b0 ;
  assign extracter2_fifo_stage1_reg$DEQ = 1'b0 ;
  assign extracter2_fifo_stage1_reg$CLR = 1'b0 ;

  // submodule extracter2_fifo_stage2_reg
  assign extracter2_fifo_stage2_reg$D_IN = 40'h0 ;
  assign extracter2_fifo_stage2_reg$ENQ = 1'b0 ;
  assign extracter2_fifo_stage2_reg$DEQ = 1'b0 ;
  assign extracter2_fifo_stage2_reg$CLR = 1'b0 ;

  // submodule fda_adder_fifo_output_reg
  assign fda_adder_fifo_output_reg$ENQ = CAN_FIRE_RL_fda_adder_stage_1 ;
  assign fda_adder_fifo_output_reg$DEQ = CAN_FIRE_RL_fda_rl_out ;
  assign fda_adder_fifo_output_reg$CLR = 1'b0 ;

  // submodule fda_adder_fifo_stage0_reg
  assign fda_adder_fifo_stage0_reg$D_IN =
	     { IF_NOT_rg_quire_12_BIT_511_13_14_AND_NOT_fda_d_ETC___d308,
	       x__h98271,
	       x__h98276,
	       IF_rg_quire_12_EQ_0_33_THEN_2_ELSE_0___d134,
	       fda_divider_fifo_output_reg$D_OUT[516:514] } ;
  assign fda_adder_fifo_stage0_reg$ENQ = CAN_FIRE_RL_fda_rl_connect1 ;
  assign fda_adder_fifo_stage0_reg$DEQ = CAN_FIRE_RL_fda_adder_stage_1 ;
  assign fda_adder_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule fda_divider_fifo_output_reg
  assign fda_divider_fifo_output_reg$D_IN =
	     { (twos_complement_carry_int_frac__h50019 == 512'd0 &&
		fda_divider_fifo_stage0_reg$D_OUT[11:10] == 2'd0) ?
		 2'd2 :
		 fda_divider_fifo_stage0_reg$D_OUT[11:10],
	       fda_divider_fifo_stage0_reg$D_OUT[12],
	       twos_complement_carry_int_frac__h50019,
	       IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d242 } ;
  assign fda_divider_fifo_output_reg$ENQ = CAN_FIRE_RL_fda_divider_stage_1 ;
  assign fda_divider_fifo_output_reg$DEQ = CAN_FIRE_RL_fda_rl_connect1 ;
  assign fda_divider_fifo_output_reg$CLR = 1'b0 ;

  // submodule fda_divider_fifo_stage0_reg
  assign fda_divider_fifo_stage0_reg$D_IN =
	     { x__h136923,
	       (extracter1_fifo_output_reg$D_OUT[37:36] == 2'd2 &&
		extracter2_fifo_output_reg$D_OUT[37:36] != 2'd2 ||
		extracter1_fifo_output_reg$D_OUT[37:36] != 2'd1 &&
		extracter2_fifo_output_reg$D_OUT[37:36] == 2'd1) ?
		 2'd2 :
		 ((extracter1_fifo_output_reg$D_OUT[37:36] == 2'd1 &&
		   extracter2_fifo_output_reg$D_OUT[37:36] != 2'd1 ||
		   extracter1_fifo_output_reg$D_OUT[37:36] != 2'd2 &&
		   extracter2_fifo_output_reg$D_OUT[37:36] == 2'd2) ?
		    2'd1 :
		    2'd0),
	       extracter1_fifo_output_reg_first__237_BIT_35_2_ETC___d1317 } ;
  assign fda_divider_fifo_stage0_reg$ENQ = CAN_FIRE_RL_rl_fda ;
  assign fda_divider_fifo_stage0_reg$DEQ = CAN_FIRE_RL_fda_divider_stage_1 ;
  assign fda_divider_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule fda_divider_intDivide_fifo_output_reg
  assign fda_divider_intDivide_fifo_output_reg$D_IN =
	     MUX_fda_divider_intDivide_fifo_output_reg$enq_1__SEL_1 ?
	       MUX_fda_divider_intDivide_fifo_output_reg$enq_1__VAL_1 :
	       MUX_fda_divider_intDivide_fifo_output_reg$enq_1__VAL_2 ;
  assign fda_divider_intDivide_fifo_output_reg$ENQ =
	     WILL_FIRE_RL_fda_divider_intDivide_rl_loop2 &&
	     fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 ||
	     WILL_FIRE_RL_rl_fda && f2__h135812 == 28'd0 ;
  assign fda_divider_intDivide_fifo_output_reg$DEQ =
	     CAN_FIRE_RL_fda_divider_stage_1 ;
  assign fda_divider_intDivide_fifo_output_reg$CLR = 1'b0 ;

  // submodule fda_ffO
  assign fda_ffO$ENQ = CAN_FIRE_RL_fda_rl_out ;
  assign fda_ffO$DEQ =
	     WILL_FIRE_RL_rl_out &&
	     (opcode_out$D_OUT == 3'd1 || opcode_out$D_OUT == 3'd3) ;
  assign fda_ffO$CLR = 1'b0 ;

  // submodule ffI
  assign ffI$D_IN =
	     { CASE_server_core_request_put_BITS_137_TO_136_0_ETC__q31,
	       server_core_request_put[135:72],
	       CASE_server_core_request_put_BITS_71_TO_70_0_s_ETC__q32,
	       server_core_request_put[69:0] } ;
  assign ffI$ENQ = EN_server_core_request_put ;
  assign ffI$DEQ = CAN_FIRE_RL_extract_in ;
  assign ffI$CLR = 1'b0 ;

  // submodule ffO
  always@(opcode_out$D_OUT or
	  normalizer_fifo_output_reg$D_OUT or ptof_ffO$D_OUT)
  begin
    case (opcode_out$D_OUT)
      3'd0, 3'd1, 3'd2, 3'd3, 3'd7: ffO$D_IN = 71'h555555554000000000;
      3'd5: ffO$D_IN = { 34'h1AAAAAAAA, ptof_ffO$D_OUT, 5'd0 };
      default: ffO$D_IN =
		   { 33'h12AAAAAAA,
		     normalizer_fifo_output_reg$D_OUT[35:3],
		     normalizer_fifo_output_reg$D_OUT[35],
		     1'd0,
		     normalizer_fifo_output_reg$D_OUT[2:1] == 2'd1,
		     normalizer_fifo_output_reg$D_OUT[2:1] == 2'd2 &&
		     normalizer_fifo_output_reg$D_OUT[0],
		     normalizer_fifo_output_reg$D_OUT[0] };
    endcase
  end
  assign ffO$ENQ = WILL_FIRE_RL_rl_out ;
  assign ffO$DEQ = EN_server_core_response_get ;
  assign ffO$CLR = 1'b0 ;

  // submodule fma_adder_fifo_output_reg
  assign fma_adder_fifo_output_reg$ENQ = CAN_FIRE_RL_fma_adder_stage_1 ;
  assign fma_adder_fifo_output_reg$DEQ = CAN_FIRE_RL_fma_rl_out ;
  assign fma_adder_fifo_output_reg$CLR = 1'b0 ;

  // submodule fma_adder_fifo_stage0_reg
  assign fma_adder_fifo_stage0_reg$D_IN =
	     { IF_NOT_rg_quire_12_BIT_511_13_14_AND_NOT_fma_m_ETC___d127,
	       x__h48743,
	       x__h48748,
	       IF_rg_quire_12_EQ_0_33_THEN_2_ELSE_0___d134,
	       fma_multiplier_fifo_output_reg$D_OUT[516:514] } ;
  assign fma_adder_fifo_stage0_reg$ENQ = CAN_FIRE_RL_fma_rl_connect1 ;
  assign fma_adder_fifo_stage0_reg$DEQ = CAN_FIRE_RL_fma_adder_stage_1 ;
  assign fma_adder_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule fma_ffO
  assign fma_ffO$ENQ = CAN_FIRE_RL_fma_rl_out ;
  assign fma_ffO$DEQ =
	     WILL_FIRE_RL_rl_out &&
	     (opcode_out$D_OUT == 3'd0 || opcode_out$D_OUT == 3'd2) ;
  assign fma_ffO$CLR = 1'b0 ;

  // submodule fma_multiplier_fifo_output_reg
  assign fma_multiplier_fifo_output_reg$D_IN =
	     { (twos_complement_carry_int_frac__h437 == 512'd0 &&
		fma_multiplier_fifo_stage0_reg$D_OUT[67:66] == 2'd0) ?
		 2'd2 :
		 fma_multiplier_fifo_stage0_reg$D_OUT[67:66],
	       fma_multiplier_fifo_stage0_reg$D_OUT[68],
	       twos_complement_carry_int_frac__h437,
	       x__h828,
	       x__h872 } ;
  assign fma_multiplier_fifo_output_reg$ENQ =
	     CAN_FIRE_RL_fma_multiplier_stage_1 ;
  assign fma_multiplier_fifo_output_reg$DEQ = CAN_FIRE_RL_fma_rl_connect1 ;
  assign fma_multiplier_fifo_output_reg$CLR = 1'b0 ;

  // submodule fma_multiplier_fifo_stage0_reg
  assign fma_multiplier_fifo_stage0_reg$D_IN =
	     { x__h135719,
	       (extracter1_fifo_output_reg$D_OUT[37:36] == 2'd2 &&
		extracter2_fifo_output_reg$D_OUT[37:36] == 2'd2) ?
		 2'd2 :
		 ((extracter1_fifo_output_reg$D_OUT[37:36] == 2'd1 ||
		   extracter2_fifo_output_reg$D_OUT[37:36] == 2'd1) ?
		    2'd1 :
		    2'd0),
	       extracter1_fifo_output_reg_first__237_BIT_35_2_ETC___d1274 } ;
  assign fma_multiplier_fifo_stage0_reg$ENQ = CAN_FIRE_RL_rl_fma ;
  assign fma_multiplier_fifo_stage0_reg$DEQ =
	     CAN_FIRE_RL_fma_multiplier_stage_1 ;
  assign fma_multiplier_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule ftop_fToP_fifo_output_reg
  assign ftop_fToP_fifo_output_reg$D_IN =
	     { ftop_fToP_fifo_stage0_reg$D_OUT[46:35],
	       x_frac__h100432,
	       x__h100558,
	       x__h100635 } ;
  assign ftop_fToP_fifo_output_reg$ENQ = CAN_FIRE_RL_ftop_fToP_stage_1 ;
  assign ftop_fToP_fifo_output_reg$DEQ = CAN_FIRE_RL_ftop_rl_out ;
  assign ftop_fToP_fifo_output_reg$CLR = 1'b0 ;

  // submodule ftop_fToP_fifo_stage0_reg
  assign ftop_fToP_fifo_stage0_reg$D_IN =
	     { ffI_f_rv$port1__read[31],
	       (ffI_f_rv$port1__read[30:23] == 8'd255 &&
		ffI_f_rv$port1__read[22:0] == 23'd0) ?
		 2'd1 :
		 ((ffI_f_rv$port1__read[30:23] == 8'd0 &&
		   ffI_f_rv$port1__read[22:0] == 23'd0) ?
		    2'd2 :
		    2'd0),
	       x__h137805,
	       IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC___d1373,
	       stage0_regf_frac__h137459,
	       IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC___d1384,
	       2'd1 } ;
  assign ftop_fToP_fifo_stage0_reg$ENQ = CAN_FIRE_RL_rl_ftop ;
  assign ftop_fToP_fifo_stage0_reg$DEQ = CAN_FIRE_RL_ftop_fToP_stage_1 ;
  assign ftop_fToP_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule ftop_ffO
  assign ftop_ffO$D_IN = ftop_fToP_fifo_output_reg$D_OUT ;
  assign ftop_ffO$ENQ = CAN_FIRE_RL_ftop_rl_out ;
  assign ftop_ffO$DEQ = WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd4 ;
  assign ftop_ffO$CLR = 1'b0 ;

  // submodule need_normalize
  assign need_normalize$D_IN = 1'b0 ;
  assign need_normalize$ENQ = 1'b0 ;
  assign need_normalize$DEQ = 1'b0 ;
  assign need_normalize$CLR = 1'b0 ;

  // submodule normalizer_fifo_output_reg
  assign normalizer_fifo_output_reg$D_IN =
	     (opcode_norm$D_OUT == 3'd4) ?
	       { ftop_ffO$D_OUT[37],
		 output_regf_out_posit__h225187,
		 ftop_ffO$D_OUT[39:38],
		 flag_prev_truncate__h225165 - _theResult____h225166 ||
		 a__h225203 == 31'd0 &&
		 NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2626 } :
	       { qtop_ffO$D_OUT[37],
		 output_regf_out_posit__h230523,
		 qtop_ffO$D_OUT[39:38],
		 flag_prev_truncate__h230505 - _theResult____h230506 ||
		 a__h230539 == 31'd0 &&
		 NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2802 } ;
  assign normalizer_fifo_output_reg$ENQ =
	     WILL_FIRE_RL_rl_norm &&
	     (opcode_norm$D_OUT == 3'd4 || opcode_norm$D_OUT == 3'd6) ;
  assign normalizer_fifo_output_reg$DEQ =
	     WILL_FIRE_RL_rl_out &&
	     (opcode_out$D_OUT == 3'd4 || opcode_out$D_OUT == 3'd6) ;
  assign normalizer_fifo_output_reg$CLR = 1'b0 ;

  // submodule normalizer_fifo_stage0_reg
  assign normalizer_fifo_stage0_reg$D_IN = 66'h0 ;
  assign normalizer_fifo_stage0_reg$ENQ = 1'b0 ;
  assign normalizer_fifo_stage0_reg$DEQ = 1'b0 ;
  assign normalizer_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule normalizer_fifo_stage1_reg
  assign normalizer_fifo_stage1_reg$D_IN = 70'h0 ;
  assign normalizer_fifo_stage1_reg$ENQ = 1'b0 ;
  assign normalizer_fifo_stage1_reg$DEQ = 1'b0 ;
  assign normalizer_fifo_stage1_reg$CLR = 1'b0 ;

  // submodule normalizer_fifo_stage2_reg
  assign normalizer_fifo_stage2_reg$D_IN = 36'h0 ;
  assign normalizer_fifo_stage2_reg$ENQ = 1'b0 ;
  assign normalizer_fifo_stage2_reg$DEQ = 1'b0 ;
  assign normalizer_fifo_stage2_reg$CLR = 1'b0 ;

  // submodule opcode_norm
  assign opcode_norm$D_IN = opcode_in_rv$port1__read[2:0] ;
  assign opcode_norm$ENQ = WILL_FIRE_RL_rl_qtop || WILL_FIRE_RL_rl_ftop ;
  assign opcode_norm$DEQ = WILL_FIRE_RL_rl_norm ;
  assign opcode_norm$CLR = 1'b0 ;

  // submodule opcode_out
  assign opcode_out$D_IN =
	     MUX_opcode_out$enq_1__SEL_1 ?
	       opcode_in_rv$port1__read[2:0] :
	       opcode_norm$D_OUT ;
  assign opcode_out$ENQ =
	     WILL_FIRE_RL_rl_ptoq || WILL_FIRE_RL_rl_ptof ||
	     WILL_FIRE_RL_rl_fda ||
	     WILL_FIRE_RL_rl_fma ||
	     WILL_FIRE_RL_rl_norm ;
  assign opcode_out$DEQ = CAN_FIRE_RL_rl_out ;
  assign opcode_out$CLR = 1'b0 ;

  // submodule ptof_ffO
  assign ptof_ffO$D_IN = ptof_ptoF_fifo_output_reg$D_OUT ;
  assign ptof_ffO$ENQ = CAN_FIRE_RL_ptof_rl_out ;
  assign ptof_ffO$DEQ = WILL_FIRE_RL_rl_out && opcode_out$D_OUT == 3'd5 ;
  assign ptof_ffO$CLR = 1'b0 ;

  // submodule ptof_ptoF_fifo_output_reg
  always@(ptof_ptoF_fifo_stage0_reg$D_OUT or
	  float_no__h101186 or add_round__h101187)
  begin
    case (ptof_ptoF_fifo_stage0_reg$D_OUT[40:39])
      2'd1: ptof_ptoF_fifo_output_reg$D_IN = 32'hFF800000;
      2'd2: ptof_ptoF_fifo_output_reg$D_IN = 32'd0;
      default: ptof_ptoF_fifo_output_reg$D_IN =
		   float_no__h101186 + { 31'd0, add_round__h101187 };
    endcase
  end
  assign ptof_ptoF_fifo_output_reg$ENQ = CAN_FIRE_RL_ptof_ptoF_stage_2 ;
  assign ptof_ptoF_fifo_output_reg$DEQ = CAN_FIRE_RL_ptof_rl_out ;
  assign ptof_ptoF_fifo_output_reg$CLR = 1'b0 ;

  // submodule ptof_ptoF_fifo_stage0_reg
  assign ptof_ptoF_fifo_stage0_reg$D_IN =
	     { extracter1_fifo_output_reg$D_OUT[35],
	       extracter1_fifo_output_reg$D_OUT[37:36],
	       IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1328,
	       extracter1_fifo_output_reg$D_OUT[26:4],
	       IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1339,
	       extracter1_fifo_output_reg$D_OUT[3],
	       x__h137356 } ;
  assign ptof_ptoF_fifo_stage0_reg$ENQ = CAN_FIRE_RL_rl_ptof ;
  assign ptof_ptoF_fifo_stage0_reg$DEQ = CAN_FIRE_RL_ptof_ptoF_stage_2 ;
  assign ptof_ptoF_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule ptoq_ffO
  assign ptoq_ffO$ENQ = CAN_FIRE_RL_ptoq_rl_out ;
  assign ptoq_ffO$DEQ = WILL_FIRE_RL_rl_out && opcode_out$D_OUT == 3'd7 ;
  assign ptoq_ffO$CLR = 1'b0 ;

  // submodule ptoq_positToquire_fifo_output_reg
  assign ptoq_positToquire_fifo_output_reg$ENQ =
	     CAN_FIRE_RL_ptoq_positToquire_stage_2 ;
  assign ptoq_positToquire_fifo_output_reg$DEQ = CAN_FIRE_RL_ptoq_rl_out ;
  assign ptoq_positToquire_fifo_output_reg$CLR = 1'b0 ;

  // submodule ptoq_positToquire_fifo_stage0_reg
  assign ptoq_positToquire_fifo_stage0_reg$D_IN = 38'h0 ;
  assign ptoq_positToquire_fifo_stage0_reg$ENQ = 1'b0 ;
  assign ptoq_positToquire_fifo_stage0_reg$DEQ = 1'b0 ;
  assign ptoq_positToquire_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule ptoq_positToquire_fifo_stage1_reg
  assign ptoq_positToquire_fifo_stage1_reg$D_IN =
	     { extracter1_fifo_output_reg$D_OUT[35],
	       int_frac__h138105,
	       extracter1_fifo_output_reg$D_OUT[37:36] } ;
  assign ptoq_positToquire_fifo_stage1_reg$ENQ = CAN_FIRE_RL_rl_ptoq ;
  assign ptoq_positToquire_fifo_stage1_reg$DEQ =
	     CAN_FIRE_RL_ptoq_positToquire_stage_2 ;
  assign ptoq_positToquire_fifo_stage1_reg$CLR = 1'b0 ;

  // submodule qtop_ffO
  assign qtop_ffO$D_IN = qtop_quireToPosit1_fifo_output_reg$D_OUT ;
  assign qtop_ffO$ENQ = CAN_FIRE_RL_qtop_rl_out ;
  assign qtop_ffO$DEQ = MUX_rg_quire_busy$write_1__SEL_2 ;
  assign qtop_ffO$CLR = 1'b0 ;

  // submodule qtop_quireToPosit1_fifo_output_reg
  assign qtop_quireToPosit1_fifo_output_reg$D_IN =
	     qtop_quireToPosit1_fifo_stage1_reg$D_OUT ;
  assign qtop_quireToPosit1_fifo_output_reg$ENQ =
	     CAN_FIRE_RL_qtop_quireToPosit1_stage_2 ;
  assign qtop_quireToPosit1_fifo_output_reg$DEQ = CAN_FIRE_RL_qtop_rl_out ;
  assign qtop_quireToPosit1_fifo_output_reg$CLR = 1'b0 ;

  // submodule qtop_quireToPosit1_fifo_stage0_reg
  assign qtop_quireToPosit1_fifo_stage0_reg$D_IN =
	     { rg_quire[511],
	       (!rg_quire[511] && rg_quire[510:0] == 511'd0) ? 2'd2 : 2'd0,
	       rg_quire_12_BIT_511_13_AND_rg_quire_12_BITS_51_ETC___d2449 } ;
  assign qtop_quireToPosit1_fifo_stage0_reg$ENQ = CAN_FIRE_RL_rl_qtop ;
  assign qtop_quireToPosit1_fifo_stage0_reg$DEQ =
	     CAN_FIRE_RL_qtop_quireToPosit1_stage_1 ;
  assign qtop_quireToPosit1_fifo_stage0_reg$CLR = 1'b0 ;

  // submodule qtop_quireToPosit1_fifo_stage1_reg
  assign qtop_quireToPosit1_fifo_stage1_reg$D_IN =
	     { qtop_quireToPosit1_fifo_stage0_reg$D_OUT[522:511],
	       stage1_regf_frac__h99437,
	       x__h99815,
	       x__h99858 } ;
  assign qtop_quireToPosit1_fifo_stage1_reg$ENQ =
	     CAN_FIRE_RL_qtop_quireToPosit1_stage_1 ;
  assign qtop_quireToPosit1_fifo_stage1_reg$DEQ =
	     CAN_FIRE_RL_qtop_quireToPosit1_stage_2 ;
  assign qtop_quireToPosit1_fifo_stage1_reg$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_rg_quire_12_BIT_511_13_THEN__ETC___d2443 =
	     (_0_CONCAT_IF_IF_rg_quire_12_BIT_511_13_THEN_0_M_ETC___d2438[9] &&
	      _271_MINUS_0_CONCAT_IF_IF_rg_quire_12_BIT_511_1_ETC___d2440[9]) ?
	       10'd511 :
	       _271_MINUS_0_CONCAT_IF_IF_rg_quire_12_BIT_511_1_ETC___d2440 ;
  assign IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC___d1373 =
	     _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1370 ?
	       8'd136 :
	       (_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1371 ?
		  _0_CONCAT_ffI_f_rvport1__read_BITS_30_TO_23_MI_ETC__q28[7:0] :
		  8'd120) ;
  assign IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC___d1384 =
	     _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1370 ?
	       IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC__q29[5:0] :
	       (_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1371 ?
		  6'd0 :
		  IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC__q30[5:0]) ;
  assign IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC__q29 =
	     ((_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1375 ^
	       8'h80) <=
	      8'd97) ?
	       8'd225 :
	       _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1375 ;
  assign IF_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30__ETC__q30 =
	     ((_0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1379 ^
	       8'h80) <=
	      8'd159) ?
	       _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1379 :
	       8'd31 ;
  assign IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471__ETC___d2505 =
	     _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2491 ?
	       5'd0 :
	       _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490 -
	       5'd2 ;
  assign IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647__ETC___d2681 =
	     _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2667 ?
	       5'd0 :
	       _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666 -
	       5'd2 ;
  assign IF_IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_4_ETC___d2565 =
	     (shift_new0__h225156 == 3'd0) ?
	       !ftop_ffO$D_OUT[1] :
	       !ftop_ffO_first__466_BITS_28_TO_2_521_BIT_IF_30_ETC___d2539 ;
  assign IF_IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_6_ETC___d2741 =
	     (shift_new0__h230496 == 3'd0) ?
	       !qtop_ffO$D_OUT[1] :
	       !qtop_ffO_first__642_BITS_28_TO_2_697_BIT_IF_30_ETC___d2715 ;
  assign IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84__ETC___d1120 =
	     new_inp__h114376[30] ?
	       ((!INV_new_inp14376__q8[30] && !INV_new_inp14376__q8[29] &&
		 !INV_new_inp14376__q8[28] &&
		 !INV_new_inp14376__q8[27] &&
		 !INV_new_inp14376__q8[26] &&
		 !INV_new_inp14376__q8[25] &&
		 !INV_new_inp14376__q8[24] &&
		 !INV_new_inp14376__q8[23] &&
		 !INV_new_inp14376__q8[22] &&
		 !INV_new_inp14376__q8[21] &&
		 !INV_new_inp14376__q8[20] &&
		 !INV_new_inp14376__q8[19] &&
		 !INV_new_inp14376__q8[18] &&
		 !INV_new_inp14376__q8[17] &&
		 !INV_new_inp14376__q8[16] &&
		 !INV_new_inp14376__q8[15] &&
		 !INV_new_inp14376__q8[14] &&
		 !INV_new_inp14376__q8[13] &&
		 !INV_new_inp14376__q8[12] &&
		 !INV_new_inp14376__q8[11] &&
		 !INV_new_inp14376__q8[10] &&
		 !INV_new_inp14376__q8[9] &&
		 !INV_new_inp14376__q8[8] &&
		 !INV_new_inp14376__q8[7] &&
		 !INV_new_inp14376__q8[6] &&
		 !INV_new_inp14376__q8[5] &&
		 !INV_new_inp14376__q8[4] &&
		 !INV_new_inp14376__q8[3] &&
		 !INV_new_inp14376__q8[2] &&
		 !INV_new_inp14376__q8[1] &&
		 !INV_new_inp14376__q8[0]) ?
		  5'd31 :
		  5'd30) -
	       x__h115326 :
	       ((!new_inp__h114376[29] && !new_inp__h114376[28] &&
		 !new_inp__h114376[27] &&
		 !new_inp__h114376[26] &&
		 !new_inp__h114376[25] &&
		 !new_inp__h114376[24] &&
		 !new_inp__h114376[23] &&
		 !new_inp__h114376[22] &&
		 !new_inp__h114376[21] &&
		 !new_inp__h114376[20] &&
		 !new_inp__h114376[19] &&
		 !new_inp__h114376[18] &&
		 !new_inp__h114376[17] &&
		 !new_inp__h114376[16] &&
		 !new_inp__h114376[15] &&
		 !new_inp__h114376[14] &&
		 !new_inp__h114376[13] &&
		 !new_inp__h114376[12] &&
		 !new_inp__h114376[11] &&
		 !new_inp__h114376[10] &&
		 !new_inp__h114376[9] &&
		 !new_inp__h114376[8] &&
		 !new_inp__h114376[7] &&
		 !new_inp__h114376[6] &&
		 !new_inp__h114376[5] &&
		 !new_inp__h114376[4] &&
		 !new_inp__h114376[3] &&
		 !new_inp__h114376[2] &&
		 !new_inp__h114376[1] &&
		 !new_inp__h114376[0]) ?
		  5'd31 :
		  5'd30) -
	       x__h119704 ;
  assign IF_IF_NOT_IF_ftop_ffO_first__466_BIT_36_471_TH_ETC___d2593 =
	     (b__h225492[30] &&
	      !IF_NOT_IF_ftop_ffO_first__466_BIT_36_471_THEN__ETC___d2589[30]) ?
	       31'h7FFFFFFF :
	       IF_NOT_IF_ftop_ffO_first__466_BIT_36_471_THEN__ETC___d2589 ;
  assign IF_IF_NOT_IF_qtop_ffO_first__642_BIT_36_647_TH_ETC___d2769 =
	     (b__h230828[30] &&
	      !IF_NOT_IF_qtop_ffO_first__642_BIT_36_647_THEN__ETC___d2765[30]) ?
	       31'h7FFFFFFF :
	       IF_NOT_IF_qtop_ffO_first__642_BIT_36_647_THEN__ETC___d2765 ;
  assign IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR__ETC___d1192 =
	     (IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[30:0] ==
	      31'd0 &&
	      !IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[31]) ?
	       35'd0 :
	       { SEXT_IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ__ETC___d995 +
		 { 6'd0, expo__h114383 },
		 frac__h114384 } ;
  assign IF_IF_ffI_first__75_BIT_103_09_THEN_0_MINUS_ff_ETC___d774 =
	     new_inp__h104024[30] ?
	       ((!INV_new_inp04024__q2[30] && !INV_new_inp04024__q2[29] &&
		 !INV_new_inp04024__q2[28] &&
		 !INV_new_inp04024__q2[27] &&
		 !INV_new_inp04024__q2[26] &&
		 !INV_new_inp04024__q2[25] &&
		 !INV_new_inp04024__q2[24] &&
		 !INV_new_inp04024__q2[23] &&
		 !INV_new_inp04024__q2[22] &&
		 !INV_new_inp04024__q2[21] &&
		 !INV_new_inp04024__q2[20] &&
		 !INV_new_inp04024__q2[19] &&
		 !INV_new_inp04024__q2[18] &&
		 !INV_new_inp04024__q2[17] &&
		 !INV_new_inp04024__q2[16] &&
		 !INV_new_inp04024__q2[15] &&
		 !INV_new_inp04024__q2[14] &&
		 !INV_new_inp04024__q2[13] &&
		 !INV_new_inp04024__q2[12] &&
		 !INV_new_inp04024__q2[11] &&
		 !INV_new_inp04024__q2[10] &&
		 !INV_new_inp04024__q2[9] &&
		 !INV_new_inp04024__q2[8] &&
		 !INV_new_inp04024__q2[7] &&
		 !INV_new_inp04024__q2[6] &&
		 !INV_new_inp04024__q2[5] &&
		 !INV_new_inp04024__q2[4] &&
		 !INV_new_inp04024__q2[3] &&
		 !INV_new_inp04024__q2[2] &&
		 !INV_new_inp04024__q2[1] &&
		 !INV_new_inp04024__q2[0]) ?
		  5'd31 :
		  5'd30) -
	       x__h104903 :
	       ((!new_inp__h104024[29] && !new_inp__h104024[28] &&
		 !new_inp__h104024[27] &&
		 !new_inp__h104024[26] &&
		 !new_inp__h104024[25] &&
		 !new_inp__h104024[24] &&
		 !new_inp__h104024[23] &&
		 !new_inp__h104024[22] &&
		 !new_inp__h104024[21] &&
		 !new_inp__h104024[20] &&
		 !new_inp__h104024[19] &&
		 !new_inp__h104024[18] &&
		 !new_inp__h104024[17] &&
		 !new_inp__h104024[16] &&
		 !new_inp__h104024[15] &&
		 !new_inp__h104024[14] &&
		 !new_inp__h104024[13] &&
		 !new_inp__h104024[12] &&
		 !new_inp__h104024[11] &&
		 !new_inp__h104024[10] &&
		 !new_inp__h104024[9] &&
		 !new_inp__h104024[8] &&
		 !new_inp__h104024[7] &&
		 !new_inp__h104024[6] &&
		 !new_inp__h104024[5] &&
		 !new_inp__h104024[4] &&
		 !new_inp__h104024[3] &&
		 !new_inp__h104024[2] &&
		 !new_inp__h104024[1] &&
		 !new_inp__h104024[0]) ?
		  5'd31 :
		  5'd30) -
	       x__h109281 ;
  assign IF_INV_NOT_IF_NOT_fda_adder_fifo_stage0_reg_fi_ETC___d291 =
	     (all_bits_0__h50757 & y__h76310 &&
	      fda_adder_fifo_stage0_reg$D_OUT[4:3] == 2'd0 &&
	      fda_adder_fifo_stage0_reg$D_OUT[2:1] == 2'd0) ?
	       512'd0 :
	       x__h76334 ;
  assign IF_INV_NOT_IF_NOT_fma_adder_fifo_stage0_reg_fi_ETC___d107 =
	     (all_bits_0__h1203 & y__h26778 &&
	      fma_adder_fifo_stage0_reg$D_OUT[4:3] == 2'd0 &&
	      fma_adder_fifo_stage0_reg$D_OUT[2:1] == 2'd0) ?
	       512'd0 :
	       x__h26802 ;
  assign IF_NOT_IF_ftop_ffO_first__466_BIT_36_471_THEN__ETC___d2589 =
	     b__h225492 + b__h229088 ;
  assign IF_NOT_IF_qtop_ffO_first__642_BIT_36_647_THEN__ETC___d2765 =
	     b__h230828 + b__h234423 ;
  assign IF_NOT_rg_quire_12_BIT_511_13_14_AND_NOT_fda_d_ETC___d308 =
	     (!rg_quire[511] && !fda_divider_fifo_output_reg$D_OUT[513] &&
	      rg_quire_12_PLUS_fda_divider_fifo_output_reg_f_ETC___d301[511]) ?
	       512'h7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF :
	       ((rg_quire[511] && fda_divider_fifo_output_reg$D_OUT[513] &&
		 !rg_quire_12_PLUS_fda_divider_fifo_output_reg_f_ETC___d301[511]) ?
		  512'h80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 :
		  rg_quire_12_PLUS_fda_divider_fifo_output_reg_f_ETC___d301) ;
  assign IF_NOT_rg_quire_12_BIT_511_13_14_AND_NOT_fma_m_ETC___d127 =
	     (!rg_quire[511] && !fma_multiplier_fifo_output_reg$D_OUT[513] &&
	      rg_quire_12_PLUS_fma_multiplier_fifo_output_re_ETC___d120[511]) ?
	       512'h7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF :
	       ((rg_quire[511] && fma_multiplier_fifo_output_reg$D_OUT[513] &&
		 !rg_quire_12_PLUS_fma_multiplier_fifo_output_re_ETC___d120[511]) ?
		  512'h80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 :
		  rg_quire_12_PLUS_fma_multiplier_fifo_output_re_ETC___d120) ;
  assign IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1256 =
	     (extracter1_fifo_output_reg$D_OUT[37:36] == 2'd2) ?
	       2'b01 :
	       ((extracter2_fifo_output_reg$D_OUT[37:36] == 2'd2) ?
		  extracter2_fifo_output_reg$D_OUT[37:36] :
		  2'b11) ;
  assign IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1328 =
	     extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1325 ?
	       8'd129 :
	       (extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1326 ?
		  extracter1_fifo_output_reg$D_OUT[34:27] :
		  8'd127) ;
  assign IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1339 =
	     extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1325 ?
	       IF_extracter1_fifo_output_reg_first__237_BITS__ETC__q25[5:0] :
	       (extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1326 ?
		  6'd0 :
		  IF_extracter1_fifo_output_reg_first__237_BITS__ETC__q26[5:0]) ;
  assign IF_extracter1_fifo_output_reg_first__237_BITS__ETC__q25 =
	     ((extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1330 ^
	       8'h80) <=
	      8'd97) ?
	       8'd225 :
	       extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1330 ;
  assign IF_extracter1_fifo_output_reg_first__237_BITS__ETC__q26 =
	     ((extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1334 ^
	       8'h80) <=
	      8'd159) ?
	       extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1334 :
	       8'd31 ;
  assign IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d188 =
	     (fda_divider_fifo_stage0_reg$D_OUT[8] ?
		-fda_divider_fifo_stage0_reg$D_OUT[8:0] :
		fda_divider_fifo_stage0_reg$D_OUT[8:0]) -
	     9'd240 ;
  assign IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d189 =
	     IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d188 +
	     9'd54 ;
  assign IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d204 =
	     (fda_divider_fifo_stage0_reg$D_OUT[8] &&
	      NOT_IF_fda_divider_fifo_stage0_reg_first__82_B_ETC___d191 ||
	      (IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d188 +
	       9'd2 ^
	       9'h100) <=
	      9'd256) ?
	       31'd0 :
	       x__h50226[30:0] ;
  assign IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d213 =
	     (fda_divider_fifo_stage0_reg$D_OUT[8] &&
	      NOT_IF_fda_divider_fifo_stage0_reg_first__82_B_ETC___d191) ?
	       f_new___1__h50269 :
	       f_new__h50213 ;
  assign IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d242 =
	     (fda_divider_fifo_stage0_reg$D_OUT[8] &&
	      NOT_IF_fda_divider_fifo_stage0_reg_first__82_B_ETC___d191) ?
	       { truncated_frac_msb___1__h50270,
		 truncated_frac_zero___1__h50272 } :
	       { fda_divider_intDivide_fifo_output_reg$D_OUT[1],
		 truncated_frac_zero__h50067 } ;
  assign IF_ffI_first__75_BITS_102_TO_72_07_EQ_0_08_AND_ETC___d846 =
	     (ffI$D_OUT[102:72] == 31'd0 && !ffI$D_OUT[103]) ?
	       35'd0 :
	       { SEXT_IF_IF_ffI_first__75_BIT_103_09_THEN_0_MIN_ETC___d649 +
		 { 6'd0, expo__h104031 },
		 frac__h104032 } ;
  assign IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d10 =
	     (fma_multiplier_fifo_stage0_reg$D_OUT[64] ?
		-fma_multiplier_fifo_stage0_reg$D_OUT[64:56] :
		fma_multiplier_fifo_stage0_reg$D_OUT[64:56]) -
	     9'd240 ;
  assign IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d11 =
	     IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d10 +
	     9'd54 ;
  assign IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d12 =
	     (IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d11 ^
	      9'h100) <=
	     9'd256 ;
  assign IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d24 =
	     (fma_multiplier_fifo_stage0_reg$D_OUT[64] &&
	      !IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d12 ||
	      (IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d10 +
	       9'd2 ^
	       9'h100) <=
	      9'd256) ?
	       31'd0 :
	       x__h666[30:0] ;
  assign IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d33 =
	     (fma_multiplier_fifo_stage0_reg$D_OUT[64] &&
	      !IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d12) ?
	       f_new___1__h706 :
	       f_new__h653 ;
  assign IF_ftop_fToP_fifo_stage0_reg_first__82_BIT_7_8_ETC___d389 =
	     ftop_fToP_fifo_stage0_reg$D_OUT[7] ?
	       -ftop_fToP_fifo_stage0_reg$D_OUT[7:2] :
	       ftop_fToP_fifo_stage0_reg$D_OUT[7:2] ;
  assign IF_ftop_ffO_first__466_BIT_35_477_AND_NOT_ftop_ETC___d2483 =
	     (ftop_ffO$D_OUT[35] &&
	      !ftop_ffO_first__466_BITS_35_TO_31_478_PLUS_1___d2479[4]) ?
	       5'd31 :
	       ftop_ffO_first__466_BITS_35_TO_31_478_PLUS_1___d2479 ;
  assign IF_ftop_ffO_first__466_BIT_36_471_THEN_1_SL_30_ETC___d2512 =
	     b__h225786 + b__h226699 ;
  assign IF_new_inp04024_BIT_30_THEN_b04893_ELSE_b04895__q13 =
	     new_inp__h104024[30] ? b__h104893 : b__h104895 ;
  assign IF_new_inp14376_BIT_30_THEN_b15316_ELSE_b15318__q11 =
	     new_inp__h114376[30] ? b__h115316 : b__h115318 ;
  assign IF_opcode_norm_first__452_EQ_4_453_THEN_ftop_f_ETC___d2462 =
	     (opcode_norm$D_OUT == 3'd4) ?
	       ftop_ffO$EMPTY_N && normalizer_fifo_output_reg$FULL_N :
	       opcode_norm$D_OUT != 3'd6 ||
	       qtop_ffO$EMPTY_N && normalizer_fifo_output_reg$FULL_N ;
  assign IF_ptof_ptoF_fifo_stage0_reg_first__21_BIT_7_3_ETC___d435 =
	     ptof_ptoF_fifo_stage0_reg$D_OUT[7] ?
	       -ptof_ptoF_fifo_stage0_reg$D_OUT[7:2] :
	       ptof_ptoF_fifo_stage0_reg$D_OUT[7:2] ;
  assign IF_qtop_ffO_first__642_BIT_35_653_AND_NOT_qtop_ETC___d2659 =
	     (qtop_ffO$D_OUT[35] &&
	      !qtop_ffO_first__642_BITS_35_TO_31_654_PLUS_1___d2655[4]) ?
	       5'd31 :
	       qtop_ffO_first__642_BITS_35_TO_31_654_PLUS_1___d2655 ;
  assign IF_qtop_ffO_first__642_BIT_36_647_THEN_1_SL_30_ETC___d2688 =
	     b__h231122 + b__h232034 ;
  assign IF_qtop_quireToPosit1_fifo_stage0_reg_first__3_ETC___d349 =
	     qtop_quireToPosit1_fifo_stage0_reg_first__39_B_ETC___d342 ?
	       carry_int_frac_shifted__h99711[510:483] :
	       28'd268435455 ;
  assign IF_rg_quire_12_EQ_0_33_THEN_2_ELSE_0___d134 =
	     (rg_quire == 512'd0) ? 2'd2 : 2'd0 ;
  assign INV_new_inp04024__q2 = ~new_inp__h104024 ;
  assign INV_new_inp14376__q8 = ~new_inp__h114376 ;
  assign NEG_extracter2_fifo_output_regD_OUT_BITS_34_T_ETC__q24 =
	     -extracter2_fifo_output_reg$D_OUT[34:27] ;
  assign NOT_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__46_ETC___d2581 =
	     !_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2567 &&
	     { 5'd0,
	       (x__h228431[26:0] & ~(27'h7FFFFFE << x__h228768)) >> 0 } ==
	     32'd0 &&
	     IF_IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_4_ETC___d2565 ||
	     _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490 ==
	     5'd0 &&
	     shift_new0__h225156 == 3'd0 ||
	     k_expo__h225159 == 31'h7FFFFFFF &&
	     IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471__ETC___d2505 ==
	     5'd0 &&
	     x__h228431[26:0] == 27'd0 &&
	     IF_IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_4_ETC___d2565 ;
  assign NOT_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__46_ETC___d2625 =
	     _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 !=
	     5'd0 &&
	     (_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 !=
	      5'd1 ||
	      truncated_frac_msb__h225161) &&
	     (_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2567 ||
	      { 5'd0,
		(x__h228431[26:0] & ~(27'h7FFFFFE << x__h228768)) >> 0 } !=
	      32'd0 ||
	      truncated_frac_msb__h225161) &&
	     NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2622 ;
  assign NOT_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__64_ETC___d2757 =
	     !_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2743 &&
	     { 5'd0,
	       (x__h233766[26:0] & ~(27'h7FFFFFE << x__h234103)) >> 0 } ==
	     32'd0 &&
	     IF_IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_6_ETC___d2741 ||
	     _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666 ==
	     5'd0 &&
	     shift_new0__h230496 == 3'd0 ||
	     k_expo__h230499 == 31'h7FFFFFFF &&
	     IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647__ETC___d2681 ==
	     5'd0 &&
	     x__h233766[26:0] == 27'd0 &&
	     IF_IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_6_ETC___d2741 ;
  assign NOT_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__64_ETC___d2801 =
	     _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 !=
	     5'd0 &&
	     (_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 !=
	      5'd1 ||
	      truncated_frac_msb__h230501) &&
	     (_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2743 ||
	      { 5'd0,
		(x__h233766[26:0] & ~(27'h7FFFFFE << x__h234103)) >> 0 } !=
	      32'd0 ||
	      truncated_frac_msb__h230501) &&
	     NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2798 ;
  assign NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2533 =
	     x28431_BITS_26_TO_0__q16[_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530] ;
  assign NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2542 =
	     x28431_BITS_26_TO_0__q16[x__h228607] ;
  assign NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2597 =
	     NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2533 ||
	     ((_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 ==
	       5'd0) ?
		IF_IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_4_ETC___d2565 :
		!NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2542) ;
  assign NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2603 =
	     NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2597 ||
	     CASE_shift_new025156_0_NOT_ftop_ffOD_OUT_BIT__ETC__q19 ;
  assign NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2622 =
	     (_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490 !=
	      5'd0 ||
	      shift_new0__h225156 != 3'd0 ||
	      !NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2542) &&
	     (k_expo__h225159 != 31'h7FFFFFFF ||
	      IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471__ETC___d2505 !=
	      5'd0 ||
	      x__h228431[26:0] != 27'd0 ||
	      truncated_frac_msb__h225161) ;
  assign NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2626 =
	     NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2603 ||
	     IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471__ETC___d2505 ==
	     5'd0 &&
	     !(~k_expo__h225159[0]) ||
	     NOT_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__46_ETC___d2625 ;
  assign NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2709 =
	     x33766_BITS_26_TO_0__q20[_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706] ;
  assign NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2718 =
	     x33766_BITS_26_TO_0__q20[x__h233942] ;
  assign NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2773 =
	     NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2709 ||
	     ((_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 ==
	       5'd0) ?
		IF_IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_6_ETC___d2741 :
		!NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2718) ;
  assign NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2779 =
	     NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2773 ||
	     CASE_shift_new030496_0_NOT_qtop_ffOD_OUT_BIT__ETC__q23 ;
  assign NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2798 =
	     (_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666 !=
	      5'd0 ||
	      shift_new0__h230496 != 3'd0 ||
	      !NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2718) &&
	     (k_expo__h230499 != 31'h7FFFFFFF ||
	      IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647__ETC___d2681 !=
	      5'd0 ||
	      x__h233766[26:0] != 27'd0 ||
	      truncated_frac_msb__h230501) ;
  assign NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2802 =
	     NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2779 ||
	     IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647__ETC___d2681 ==
	     5'd0 &&
	     !(~k_expo__h230499[0]) ||
	     NOT_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__64_ETC___d2801 ;
  assign NOT_IF_fda_divider_fifo_stage0_reg_first__82_B_ETC___d191 =
	     (IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d189 ^
	      9'h100) >
	     9'd256 ;
  assign NOT_IF_ftop_ffO_first__466_BIT_36_471_THEN_1_S_ETC___d2517 =
	     (!b__h225786[30] && b__h226699[30] ||
	      b__h225786[30] && !b__h226699[30]) &&
	     !IF_ftop_ffO_first__466_BIT_36_471_THEN_1_SL_30_ETC___d2512[30] ||
	     b__h225786[30] && b__h226699[30] ;
  assign NOT_IF_qtop_ffO_first__642_BIT_36_647_THEN_1_S_ETC___d2693 =
	     (!b__h231122[30] && b__h232034[30] ||
	      b__h231122[30] && !b__h232034[30]) &&
	     !IF_qtop_ffO_first__642_BIT_36_647_THEN_1_SL_30_ETC___d2688[30] ||
	     b__h231122[30] && b__h232034[30] ;
  assign NOT_NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_ETC___d2555 =
	     !NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2533 &&
	     flag_prev_truncate__h225165 &&
	     CASE_shift_new025156_0_ftop_ffOD_OUT_BIT_0_1__ETC__q18 ;
  assign NOT_NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_ETC___d2731 =
	     !NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2709 &&
	     flag_prev_truncate__h230505 &&
	     CASE_shift_new030496_0_qtop_ffOD_OUT_BIT_0_1__ETC__q22 ;
  assign NOT_verbosity_ULE_1_195___d1196 = verbosity > 4'd1 ;
  assign SEXT_IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ__ETC___d995 =
	     { SEXT_IF_new_inp14376_BIT_30_THEN_b15316_ELSE_b_ETC__q12[5:0],
	       2'd0 } ;
  assign SEXT_IF_IF_ffI_first__75_BIT_103_09_THEN_0_MIN_ETC___d649 =
	     { SEXT_IF_new_inp04024_BIT_30_THEN_b04893_ELSE_b_ETC__q14[5:0],
	       2'd0 } ;
  assign SEXT_IF_fda_adder_fifo_stage0_reg_first__48_BI_ETC___d258 =
	     { {510{truncated_frac__h50754[1]}}, truncated_frac__h50754 } ;
  assign SEXT_IF_fma_adder_fifo_stage0_reg_first__4_BIT_ETC___d74 =
	     { {510{truncated_frac__h1200[1]}}, truncated_frac__h1200 } ;
  assign SEXT_IF_new_inp04024_BIT_30_THEN_b04893_ELSE_b_ETC__q14 =
	     { {2{IF_new_inp04024_BIT_30_THEN_b04893_ELSE_b04895__q13[5]}},
	       IF_new_inp04024_BIT_30_THEN_b04893_ELSE_b04895__q13 } ;
  assign SEXT_IF_new_inp14376_BIT_30_THEN_b15316_ELSE_b_ETC__q12 =
	     { {2{IF_new_inp14376_BIT_30_THEN_b15316_ELSE_b15318__q11[5]}},
	       IF_new_inp14376_BIT_30_THEN_b15316_ELSE_b15318__q11 } ;
  assign SEXT_extracter1_fifo_output_reg_first__237_BIT_ETC___d1262 =
	     { extracter1_fifo_output_regD_OUT_BITS_34_TO_27__q15[7],
	       extracter1_fifo_output_regD_OUT_BITS_34_TO_27__q15 } ;
  assign _0_CONCAT_IF_IF_rg_quire_12_BIT_511_13_THEN_0_M_ETC___d2438 =
	     { 1'd0, msbZeros__h138272 } + 10'd1 ;
  assign _0_CONCAT_IF_extracter1_fifo_output_reg_first___ETC___d1272 =
	     { 28'd0, f1__h135811 } * { 28'd0, f2__h135812 } ;
  assign _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1370 =
	     (_0_CONCAT_ffI_f_rvport1__read_BITS_30_TO_23_MI_ETC__q28[7:0] ^
	      8'h80) <
	     8'd8 ;
  assign _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1371 =
	     (_0_CONCAT_ffI_f_rvport1__read_BITS_30_TO_23_MI_ETC__q28[7:0] ^
	      8'h80) <=
	     8'd248 ;
  assign _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1375 =
	     _0_CONCAT_ffI_f_rvport1__read_BITS_30_TO_23_MI_ETC__q28[7:0] -
	     8'd136 ;
  assign _0_CONCAT_ffI_f_rv_port1__read__346_BITS_30_TO__ETC___d1379 =
	     _0_CONCAT_ffI_f_rvport1__read_BITS_30_TO_23_MI_ETC__q28[7:0] -
	     8'd120 ;
  assign _0_CONCAT_ffI_f_rvport1__read_BITS_30_TO_23_MI_ETC__q28 =
	     { 1'd0, ffI_f_rv$port1__read[30:23] } - 9'd127 ;
  assign _0_MINUS_ftop_ffOD_OUT_BITS_36_TO_31__q4 =
	     6'd0 - ftop_ffO$D_OUT[36:31] ;
  assign _0_MINUS_qtop_ffOD_OUT_BITS_36_TO_31__q5 =
	     6'd0 - qtop_ffO$D_OUT[36:31] ;
  assign _271_MINUS_0_CONCAT_IF_IF_rg_quire_12_BIT_511_1_ETC___d2440 =
	     10'd271 -
	     _0_CONCAT_IF_IF_rg_quire_12_BIT_511_13_THEN_0_M_ETC___d2438 ;
  assign _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 =
	     5'd27 -
	     IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471__ETC___d2505 ;
  assign _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2567 =
	     _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 <
	     5'd2 ;
  assign _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 =
	     5'd27 -
	     IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647__ETC___d2681 ;
  assign _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2743 =
	     _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 <
	     5'd2 ;
  assign _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490 =
	     5'd30 -
	     (ftop_ffO$D_OUT[36] ?
		_0_MINUS_ftop_ffOD_OUT_BITS_36_TO_31__q4[4:0] :
		IF_ftop_ffO_first__466_BIT_35_477_AND_NOT_ftop_ETC___d2483) ;
  assign _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2491 =
	     _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490 <
	     5'd2 ;
  assign _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666 =
	     5'd30 -
	     (qtop_ffO$D_OUT[36] ?
		_0_MINUS_qtop_ffOD_OUT_BITS_36_TO_31__q5[4:0] :
		IF_qtop_ffO_first__642_BIT_35_653_AND_NOT_qtop_ETC___d2659) ;
  assign _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2667 =
	     _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666 <
	     5'd2 ;
  assign _theResult____h225166 =
	     NOT_NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_ETC___d2555 &&
	     (IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471__ETC___d2505 !=
	      5'd0 ||
	      ~k_expo__h225159[0]) &&
	     (_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 ==
	      5'd0 ||
	      _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 ==
	      5'd1 &&
	      IF_IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_4_ETC___d2565 ||
	      NOT_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__46_ETC___d2581) ;
  assign _theResult____h230506 =
	     NOT_NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_ETC___d2731 &&
	     (IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647__ETC___d2681 !=
	      5'd0 ||
	      ~k_expo__h230499[0]) &&
	     (_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 ==
	      5'd0 ||
	      _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 ==
	      5'd1 &&
	      IF_IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_6_ETC___d2741 ||
	      NOT_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__64_ETC___d2757) ;
  assign _theResult___fst__h226731 =
	     ((ftop_ffO$D_OUT[30:29] & mask_e__h226729) == 2'd0) ?
	       expo_new__h226796 :
	       expo_new__h226825 ;
  assign _theResult___fst__h232066 =
	     ((qtop_ffO$D_OUT[30:29] & mask_e__h232064) == 2'd0) ?
	       expo_new__h232131 :
	       expo_new__h232160 ;
  assign _theResult___snd_snd__h226877 =
	     ((ftop_ffO$D_OUT[30:29] & mask_e__h226729) == 2'd0) ?
	       3'd0 :
	       shift_new__h226824 ;
  assign _theResult___snd_snd__h232212 =
	     ((qtop_ffO$D_OUT[30:29] & mask_e__h232064) == 2'd0) ?
	       3'd0 :
	       shift_new__h232159 ;
  assign a__h225203 =
	     IF_IF_NOT_IF_ftop_ffO_first__466_BIT_36_471_TH_ETC___d2593 +
	     { 30'd0,
	       IF_IF_NOT_IF_ftop_ffO_first__466_BIT_36_471_TH_ETC___d2593 ==
	       31'd0 &&
	       NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2626 } ;
  assign a__h230539 =
	     IF_IF_NOT_IF_qtop_ffO_first__642_BIT_36_647_TH_ETC___d2769 +
	     { 30'd0,
	       IF_IF_NOT_IF_qtop_ffO_first__642_BIT_36_647_TH_ETC___d2769 ==
	       31'd0 &&
	       NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2802 } ;
  assign add_round__h101187 = x__h101351 & truncated_frac_msb__h101181 ;
  assign all_bits_0__h1203 = ~(x__h1253[510:0] != 511'd0) ;
  assign all_bits_0__h50757 = ~(x__h50807[510:0] != 511'd0) ;
  assign b__h104893 = { 1'd0, x__h104903 } - 6'd1 ;
  assign b__h104895 = 6'd0 - x__h109274 ;
  assign b__h115316 = { 1'd0, x__h115326 } - 6'd1 ;
  assign b__h115318 = 6'd0 - x__h119697 ;
  assign b__h225492 = x__h225508 - y__h225509 ;
  assign b__h225786 = ftop_ffO$D_OUT[36] ? k__h225846 : k__h225891 ;
  assign b__h226699 =
	     { 29'd0, x__h226702 } <<
	     IF_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471__ETC___d2505 ;
  assign b__h229088 = { 30'd0, flag_prev_truncate__h225165 } ;
  assign b__h230828 = x__h230844 - y__h230845 ;
  assign b__h231122 = qtop_ffO$D_OUT[36] ? k__h231182 : k__h231226 ;
  assign b__h232034 =
	     { 29'd0, x__h232037 } <<
	     IF_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647__ETC___d2681 ;
  assign b__h234423 = { 30'd0, flag_prev_truncate__h230505 } ;
  assign carry_int_frac_shifted__h99711 =
	     qtop_quireToPosit1_fifo_stage0_reg$D_OUT[510:0] << x__h99799 ;
  assign expo__h104031 =
	     (IF_IF_ffI_first__75_BIT_103_09_THEN_0_MINUS_ff_ETC___d774 <
	      5'd2) ?
	       new_inp__h104024[1:0] << x__h114027 :
	       new_inp04024_AND_INV_0x7FFFFFFE_SL_x13990_SRL__ETC__q9[1:0] ;
  assign expo__h114383 =
	     (IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84__ETC___d1120 <
	      5'd2) ?
	       new_inp__h114376[1:0] << x__h124450 :
	       new_inp14376_AND_INV_0x7FFFFFFE_SL_x24413_SRL__ETC__q10[1:0] ;
  assign expo_new__h226796 =
	     ftop_ffO$D_OUT[30:29] >>
	     _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490 ;
  assign expo_new__h226825 = x__h226828[1:0] & ftop_ffO$D_OUT[30:29] ;
  assign expo_new__h232131 =
	     qtop_ffO$D_OUT[30:29] >>
	     _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666 ;
  assign expo_new__h232160 = x__h232163[1:0] & qtop_ffO$D_OUT[30:29] ;
  assign extracter1_fifo_output_regD_OUT_BITS_34_TO_27__q15 =
	     extracter1_fifo_output_reg$D_OUT[34:27] ;
  assign extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1325 =
	     (extracter1_fifo_output_reg$D_OUT[34:27] ^ 8'h80) < 8'd1 ;
  assign extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1326 =
	     (extracter1_fifo_output_reg$D_OUT[34:27] ^ 8'h80) <= 8'd255 ;
  assign extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1330 =
	     extracter1_fifo_output_reg$D_OUT[34:27] - 8'd129 ;
  assign extracter1_fifo_output_reg_first__237_BITS_34__ETC___d1334 =
	     extracter1_fifo_output_reg$D_OUT[34:27] - 8'd127 ;
  assign extracter1_fifo_output_reg_first__237_BIT_35_2_ETC___d1274 =
	     { x__h135804,
	       SEXT_extracter1_fifo_output_reg_first__237_BIT_ETC___d1262 +
	       { extracter2_fifo_output_regD_OUT_BITS_34_TO_27__q27[7],
		 extracter2_fifo_output_regD_OUT_BITS_34_TO_27__q27 },
	       _0_CONCAT_IF_extracter1_fifo_output_reg_first___ETC___d1272[55:0] } ;
  assign extracter1_fifo_output_reg_first__237_BIT_35_2_ETC___d1317 =
	     { x__h135828,
	       SEXT_extracter1_fifo_output_reg_first__237_BIT_ETC___d1262 +
	       { NEG_extracter2_fifo_output_regD_OUT_BITS_34_T_ETC__q24[7],
		 NEG_extracter2_fifo_output_regD_OUT_BITS_34_T_ETC__q24 } } ;
  assign extracter2_fifo_output_regD_OUT_BITS_34_TO_27__q27 =
	     extracter2_fifo_output_reg$D_OUT[34:27] ;
  assign f1__h135811 =
	     { IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1256[1],
	       extracter1_fifo_output_reg$D_OUT[26:0] } ;
  assign f2__h135812 =
	     { IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1256[0],
	       extracter2_fifo_output_reg$D_OUT[26:0] } ;
  assign f__h50058 =
	     { 1'b0, fda_divider_intDivide_fifo_output_reg$D_OUT[56:2] } ;
  assign f_new___1__h50269 =
	     f_new__h50063 >>
	     IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d189 ;
  assign f_new___1__h706 =
	     f_new__h487 >>
	     IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d11 ;
  assign f_new__h138122 = { 453'd1, extracter1_fifo_output_reg$D_OUT[26:0] } ;
  assign f_new__h487 =
	     { 424'd0, fma_multiplier_fifo_stage0_reg$D_OUT[55:0] } ;
  assign f_new__h50063 =
	     { 425'd0, fda_divider_intDivide_fifo_output_reg$D_OUT[56:2] } ;
  assign f_new__h50213 = f_new__h50063 << x__h50350 ;
  assign f_new__h653 = f_new__h487 << x__h787 ;
  assign fda_adder_fifo_stage0_reg_first__48_BITS_518_T_ETC___d263 =
	     fda_adder_fifo_stage0_reg$D_OUT[518:7] +
	     SEXT_IF_fda_adder_fifo_stage0_reg_first__48_BI_ETC___d258 ;
  assign fda_divider_intDivide_rg_denom2_43_ULE_0_CONCA_ETC___d147 =
	     fda_divider_intDivide_rg_denom2 <= y__h49469 ;
  assign fda_divider_intDivide_rg_numer_44_ULT_0_CONCAT_ETC___d156 =
	     fda_divider_intDivide_rg_numer < y__h49555 ;
  assign fda_divider_intDivide_rg_numer_44_ULT_fda_divi_ETC___d167 =
	     fda_divider_intDivide_rg_numer <
	     fda_divider_intDivide_rg_denom2 ;
  assign fda_divider_intDivide_rg_state_41_EQ_0_277_OR__ETC___d1288 =
	     (fda_divider_intDivide_rg_state == 2'd0 ||
	      fda_divider_intDivide_rg_state == 2'd3) &&
	     extracter1_fifo_output_reg$EMPTY_N &&
	     extracter2_fifo_output_reg$EMPTY_N &&
	     opcode_out$FULL_N &&
	     fda_divider_fifo_stage0_reg$FULL_N &&
	     (f2__h135812 != 28'd0 ||
	      fda_divider_intDivide_fifo_output_reg$FULL_N) ;
  assign flag_prev_truncate__h225165 =
	     (_27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 ==
	      5'd0) ?
	       truncated_frac_msb__h225161 :
	       NOT_30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_ETC___d2542 ;
  assign flag_prev_truncate__h230505 =
	     (_27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 ==
	      5'd0) ?
	       truncated_frac_msb__h230501 :
	       NOT_30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_ETC___d2718 ;
  assign flag_truncated_frac__h1198 =
	     x__h8567 | fma_adder_fifo_stage0_reg$D_OUT[5] ;
  assign flag_truncated_frac__h50752 =
	     x__h58099 | fda_adder_fifo_stage0_reg$D_OUT[5] ;
  assign float_no__h101186 =
	     { ptof_ptoF_fifo_stage0_reg$D_OUT[41],
	       x__h101234[7:0],
	       frac_f__h101185 } ;
  assign fma_adder_fifo_stage0_reg_first__4_BITS_518_TO_ETC___d79 =
	     fma_adder_fifo_stage0_reg$D_OUT[518:7] +
	     SEXT_IF_fma_adder_fifo_stage0_reg_first__4_BIT_ETC___d74 ;
  assign fma_multiplier_fifo_stage0_regD_OUT_BITS_55_TO_0__q7 =
	     fma_multiplier_fifo_stage0_reg$D_OUT[55:0] ;
  assign frac__h100418 = { 1'd1, ftop_fToP_fifo_stage0_reg$D_OUT[34:8] } ;
  assign frac__h101179 = { 1'd1, ptof_ptoF_fifo_stage0_reg$D_OUT[30:8] } ;
  assign frac__h104032 = new_inp__h104024[26:0] << x__h114039 ;
  assign frac__h114384 = new_inp__h114376[26:0] << x__h124462 ;
  assign frac_f__h101185 =
	     ptof_ptoF_fifo_stage0_reg$D_OUT[7] ?
	       x__h101264[22:0] :
	       ((ptof_ptoF_fifo_stage0_reg$D_OUT[7:2] == 6'd0) ?
		  ptof_ptoF_fifo_stage0_reg$D_OUT[30:8] :
		  23'd8388607) ;
  assign ftop_ffOD_OUT_BITS_28_TO_2__q17 = ftop_ffO$D_OUT[28:2] ;
  assign ftop_ffO_first__466_BITS_28_TO_2_521_BIT_IF_30_ETC___d2539 =
	     ftop_ffOD_OUT_BITS_28_TO_2__q17[i__h228560] ;
  assign ftop_ffO_first__466_BITS_35_TO_31_478_PLUS_1___d2479 =
	     ftop_ffO$D_OUT[35:31] + 5'd1 ;
  assign ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2548 =
	     ftop_ffO$D_OUT[0] & y__h228648 ;
  assign ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2552 =
	     ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2548 &
	     y__h228652 ;
  assign i1__h228658 = shift_new0__h225156 - 3'd2 ;
  assign i1__h233993 = shift_new0__h230496 - 3'd2 ;
  assign i__h228560 = shift_new0__h225156 - 3'd1 ;
  assign i__h233895 = shift_new0__h230496 - 3'd1 ;
  assign in_posit2___1_posit_inp__h114432 = 32'd0 - ffI$D_OUT[37:6] ;
  assign int_frac__h138105 = f_new__h138122 << x__h138166 ;
  assign k__h225846 = 31'd1 << x__h225889 ;
  assign k__h225891 = ~x__h225903 ;
  assign k__h231182 = 31'd1 << x__h231224 ;
  assign k__h231226 = ~x__h231238 ;
  assign k_expo__h225159 =
	     NOT_IF_ftop_ffO_first__466_BIT_36_471_THEN_1_S_ETC___d2517 ?
	       31'h7FFFFFFF :
	       IF_ftop_ffO_first__466_BIT_36_471_THEN_1_SL_30_ETC___d2512 ;
  assign k_expo__h230499 =
	     NOT_IF_qtop_ffO_first__642_BIT_36_647_THEN_1_S_ETC___d2693 ?
	       31'h7FFFFFFF :
	       IF_qtop_ffO_first__642_BIT_36_647_THEN_1_SL_30_ETC___d2688 ;
  assign mask1__h50271 = ~x__h50446 ;
  assign mask1__h708 = ~x__h889 ;
  assign mask_e__h226729 = 2'd3 >> x__h226786 ;
  assign mask_e__h232064 = 2'd3 >> x__h232121 ;
  assign msbZeros__h138272 =
	     twos_complement_carry_int_frac__h138271[510] ?
	       9'd0 :
	       (twos_complement_carry_int_frac__h138271[509] ?
		  9'd1 :
		  (twos_complement_carry_int_frac__h138271[508] ?
		     9'd2 :
		     (twos_complement_carry_int_frac__h138271[507] ?
			9'd3 :
			(twos_complement_carry_int_frac__h138271[506] ?
			   9'd4 :
			   (twos_complement_carry_int_frac__h138271[505] ?
			      9'd5 :
			      (twos_complement_carry_int_frac__h138271[504] ?
				 9'd6 :
				 (twos_complement_carry_int_frac__h138271[503] ?
				    9'd7 :
				    (twos_complement_carry_int_frac__h138271[502] ?
				       9'd8 :
				       (twos_complement_carry_int_frac__h138271[501] ?
					  9'd9 :
					  (twos_complement_carry_int_frac__h138271[500] ?
					     9'd10 :
					     (twos_complement_carry_int_frac__h138271[499] ?
						9'd11 :
						(twos_complement_carry_int_frac__h138271[498] ?
						   9'd12 :
						   (twos_complement_carry_int_frac__h138271[497] ?
						      9'd13 :
						      (twos_complement_carry_int_frac__h138271[496] ?
							 9'd14 :
							 (twos_complement_carry_int_frac__h138271[495] ?
							    9'd15 :
							    (twos_complement_carry_int_frac__h138271[494] ?
							       9'd16 :
							       (twos_complement_carry_int_frac__h138271[493] ?
								  9'd17 :
								  (twos_complement_carry_int_frac__h138271[492] ?
								     9'd18 :
								     (twos_complement_carry_int_frac__h138271[491] ?
									9'd19 :
									(twos_complement_carry_int_frac__h138271[490] ?
									   9'd20 :
									   (twos_complement_carry_int_frac__h138271[489] ?
									      9'd21 :
									      (twos_complement_carry_int_frac__h138271[488] ?
										 9'd22 :
										 (twos_complement_carry_int_frac__h138271[487] ?
										    9'd23 :
										    (twos_complement_carry_int_frac__h138271[486] ?
										       9'd24 :
										       (twos_complement_carry_int_frac__h138271[485] ?
											  9'd25 :
											  (twos_complement_carry_int_frac__h138271[484] ?
											     9'd26 :
											     (twos_complement_carry_int_frac__h138271[483] ?
												9'd27 :
												(twos_complement_carry_int_frac__h138271[482] ?
												   9'd28 :
												   (twos_complement_carry_int_frac__h138271[481] ?
												      9'd29 :
												      (twos_complement_carry_int_frac__h138271[480] ?
													 9'd30 :
													 (twos_complement_carry_int_frac__h138271[479] ?
													    9'd31 :
													    (twos_complement_carry_int_frac__h138271[478] ?
													       9'd32 :
													       (twos_complement_carry_int_frac__h138271[477] ?
														  9'd33 :
														  (twos_complement_carry_int_frac__h138271[476] ?
														     9'd34 :
														     (twos_complement_carry_int_frac__h138271[475] ?
															9'd35 :
															(twos_complement_carry_int_frac__h138271[474] ?
															   9'd36 :
															   (twos_complement_carry_int_frac__h138271[473] ?
															      9'd37 :
															      (twos_complement_carry_int_frac__h138271[472] ?
																 9'd38 :
																 (twos_complement_carry_int_frac__h138271[471] ?
																    9'd39 :
																    (twos_complement_carry_int_frac__h138271[470] ?
																       9'd40 :
																       (twos_complement_carry_int_frac__h138271[469] ?
																	  9'd41 :
																	  (twos_complement_carry_int_frac__h138271[468] ?
																	     9'd42 :
																	     (twos_complement_carry_int_frac__h138271[467] ?
																		9'd43 :
																		(twos_complement_carry_int_frac__h138271[466] ?
																		   9'd44 :
																		   (twos_complement_carry_int_frac__h138271[465] ?
																		      9'd45 :
																		      (twos_complement_carry_int_frac__h138271[464] ?
																			 9'd46 :
																			 (twos_complement_carry_int_frac__h138271[463] ?
																			    9'd47 :
																			    (twos_complement_carry_int_frac__h138271[462] ?
																			       9'd48 :
																			       (twos_complement_carry_int_frac__h138271[461] ?
																				  9'd49 :
																				  (twos_complement_carry_int_frac__h138271[460] ?
																				     9'd50 :
																				     (twos_complement_carry_int_frac__h138271[459] ?
																					9'd51 :
																					(twos_complement_carry_int_frac__h138271[458] ?
																					   9'd52 :
																					   (twos_complement_carry_int_frac__h138271[457] ?
																					      9'd53 :
																					      (twos_complement_carry_int_frac__h138271[456] ?
																						 9'd54 :
																						 (twos_complement_carry_int_frac__h138271[455] ?
																						    9'd55 :
																						    (twos_complement_carry_int_frac__h138271[454] ?
																						       9'd56 :
																						       (twos_complement_carry_int_frac__h138271[453] ?
																							  9'd57 :
																							  (twos_complement_carry_int_frac__h138271[452] ?
																							     9'd58 :
																							     (twos_complement_carry_int_frac__h138271[451] ?
																								9'd59 :
																								(twos_complement_carry_int_frac__h138271[450] ?
																								   9'd60 :
																								   (twos_complement_carry_int_frac__h138271[449] ?
																								      9'd61 :
																								      (twos_complement_carry_int_frac__h138271[448] ?
																									 9'd62 :
																									 (twos_complement_carry_int_frac__h138271[447] ?
																									    9'd63 :
																									    (twos_complement_carry_int_frac__h138271[446] ?
																									       9'd64 :
																									       (twos_complement_carry_int_frac__h138271[445] ?
																										  9'd65 :
																										  (twos_complement_carry_int_frac__h138271[444] ?
																										     9'd66 :
																										     (twos_complement_carry_int_frac__h138271[443] ?
																											9'd67 :
																											(twos_complement_carry_int_frac__h138271[442] ?
																											   9'd68 :
																											   (twos_complement_carry_int_frac__h138271[441] ?
																											      9'd69 :
																											      (twos_complement_carry_int_frac__h138271[440] ?
																												 9'd70 :
																												 (twos_complement_carry_int_frac__h138271[439] ?
																												    9'd71 :
																												    (twos_complement_carry_int_frac__h138271[438] ?
																												       9'd72 :
																												       (twos_complement_carry_int_frac__h138271[437] ?
																													  9'd73 :
																													  (twos_complement_carry_int_frac__h138271[436] ?
																													     9'd74 :
																													     (twos_complement_carry_int_frac__h138271[435] ?
																														9'd75 :
																														(twos_complement_carry_int_frac__h138271[434] ?
																														   9'd76 :
																														   (twos_complement_carry_int_frac__h138271[433] ?
																														      9'd77 :
																														      (twos_complement_carry_int_frac__h138271[432] ?
																															 9'd78 :
																															 (twos_complement_carry_int_frac__h138271[431] ?
																															    9'd79 :
																															    (twos_complement_carry_int_frac__h138271[430] ?
																															       9'd80 :
																															       (twos_complement_carry_int_frac__h138271[429] ?
																																  9'd81 :
																																  (twos_complement_carry_int_frac__h138271[428] ?
																																     9'd82 :
																																     (twos_complement_carry_int_frac__h138271[427] ?
																																	9'd83 :
																																	(twos_complement_carry_int_frac__h138271[426] ?
																																	   9'd84 :
																																	   (twos_complement_carry_int_frac__h138271[425] ?
																																	      9'd85 :
																																	      (twos_complement_carry_int_frac__h138271[424] ?
																																		 9'd86 :
																																		 (twos_complement_carry_int_frac__h138271[423] ?
																																		    9'd87 :
																																		    (twos_complement_carry_int_frac__h138271[422] ?
																																		       9'd88 :
																																		       (twos_complement_carry_int_frac__h138271[421] ?
																																			  9'd89 :
																																			  (twos_complement_carry_int_frac__h138271[420] ?
																																			     9'd90 :
																																			     (twos_complement_carry_int_frac__h138271[419] ?
																																				9'd91 :
																																				(twos_complement_carry_int_frac__h138271[418] ?
																																				   9'd92 :
																																				   (twos_complement_carry_int_frac__h138271[417] ?
																																				      9'd93 :
																																				      (twos_complement_carry_int_frac__h138271[416] ?
																																					 9'd94 :
																																					 (twos_complement_carry_int_frac__h138271[415] ?
																																					    9'd95 :
																																					    (twos_complement_carry_int_frac__h138271[414] ?
																																					       9'd96 :
																																					       (twos_complement_carry_int_frac__h138271[413] ?
																																						  9'd97 :
																																						  (twos_complement_carry_int_frac__h138271[412] ?
																																						     9'd98 :
																																						     (twos_complement_carry_int_frac__h138271[411] ?
																																							9'd99 :
																																							(twos_complement_carry_int_frac__h138271[410] ?
																																							   9'd100 :
																																							   (twos_complement_carry_int_frac__h138271[409] ?
																																							      9'd101 :
																																							      (twos_complement_carry_int_frac__h138271[408] ?
																																								 9'd102 :
																																								 (twos_complement_carry_int_frac__h138271[407] ?
																																								    9'd103 :
																																								    (twos_complement_carry_int_frac__h138271[406] ?
																																								       9'd104 :
																																								       (twos_complement_carry_int_frac__h138271[405] ?
																																									  9'd105 :
																																									  (twos_complement_carry_int_frac__h138271[404] ?
																																									     9'd106 :
																																									     (twos_complement_carry_int_frac__h138271[403] ?
																																										9'd107 :
																																										(twos_complement_carry_int_frac__h138271[402] ?
																																										   9'd108 :
																																										   (twos_complement_carry_int_frac__h138271[401] ?
																																										      9'd109 :
																																										      (twos_complement_carry_int_frac__h138271[400] ?
																																											 9'd110 :
																																											 (twos_complement_carry_int_frac__h138271[399] ?
																																											    9'd111 :
																																											    (twos_complement_carry_int_frac__h138271[398] ?
																																											       9'd112 :
																																											       (twos_complement_carry_int_frac__h138271[397] ?
																																												  9'd113 :
																																												  (twos_complement_carry_int_frac__h138271[396] ?
																																												     9'd114 :
																																												     (twos_complement_carry_int_frac__h138271[395] ?
																																													9'd115 :
																																													(twos_complement_carry_int_frac__h138271[394] ?
																																													   9'd116 :
																																													   (twos_complement_carry_int_frac__h138271[393] ?
																																													      9'd117 :
																																													      (twos_complement_carry_int_frac__h138271[392] ?
																																														 9'd118 :
																																														 (twos_complement_carry_int_frac__h138271[391] ?
																																														    9'd119 :
																																														    (twos_complement_carry_int_frac__h138271[390] ?
																																														       9'd120 :
																																														       (twos_complement_carry_int_frac__h138271[389] ?
																																															  9'd121 :
																																															  (twos_complement_carry_int_frac__h138271[388] ?
																																															     9'd122 :
																																															     (twos_complement_carry_int_frac__h138271[387] ?
																																																9'd123 :
																																																(twos_complement_carry_int_frac__h138271[386] ?
																																																   9'd124 :
																																																   (twos_complement_carry_int_frac__h138271[385] ?
																																																      9'd125 :
																																																      (twos_complement_carry_int_frac__h138271[384] ?
																																																	 9'd126 :
																																																	 (twos_complement_carry_int_frac__h138271[383] ?
																																																	    9'd127 :
																																																	    (twos_complement_carry_int_frac__h138271[382] ?
																																																	       9'd128 :
																																																	       (twos_complement_carry_int_frac__h138271[381] ?
																																																		  9'd129 :
																																																		  (twos_complement_carry_int_frac__h138271[380] ?
																																																		     9'd130 :
																																																		     (twos_complement_carry_int_frac__h138271[379] ?
																																																			9'd131 :
																																																			(twos_complement_carry_int_frac__h138271[378] ?
																																																			   9'd132 :
																																																			   (twos_complement_carry_int_frac__h138271[377] ?
																																																			      9'd133 :
																																																			      (twos_complement_carry_int_frac__h138271[376] ?
																																																				 9'd134 :
																																																				 (twos_complement_carry_int_frac__h138271[375] ?
																																																				    9'd135 :
																																																				    (twos_complement_carry_int_frac__h138271[374] ?
																																																				       9'd136 :
																																																				       (twos_complement_carry_int_frac__h138271[373] ?
																																																					  9'd137 :
																																																					  (twos_complement_carry_int_frac__h138271[372] ?
																																																					     9'd138 :
																																																					     (twos_complement_carry_int_frac__h138271[371] ?
																																																						9'd139 :
																																																						(twos_complement_carry_int_frac__h138271[370] ?
																																																						   9'd140 :
																																																						   (twos_complement_carry_int_frac__h138271[369] ?
																																																						      9'd141 :
																																																						      (twos_complement_carry_int_frac__h138271[368] ?
																																																							 9'd142 :
																																																							 (twos_complement_carry_int_frac__h138271[367] ?
																																																							    9'd143 :
																																																							    (twos_complement_carry_int_frac__h138271[366] ?
																																																							       9'd144 :
																																																							       (twos_complement_carry_int_frac__h138271[365] ?
																																																								  9'd145 :
																																																								  (twos_complement_carry_int_frac__h138271[364] ?
																																																								     9'd146 :
																																																								     (twos_complement_carry_int_frac__h138271[363] ?
																																																									9'd147 :
																																																									(twos_complement_carry_int_frac__h138271[362] ?
																																																									   9'd148 :
																																																									   (twos_complement_carry_int_frac__h138271[361] ?
																																																									      9'd149 :
																																																									      (twos_complement_carry_int_frac__h138271[360] ?
																																																										 9'd150 :
																																																										 (twos_complement_carry_int_frac__h138271[359] ?
																																																										    9'd151 :
																																																										    (twos_complement_carry_int_frac__h138271[358] ?
																																																										       9'd152 :
																																																										       (twos_complement_carry_int_frac__h138271[357] ?
																																																											  9'd153 :
																																																											  (twos_complement_carry_int_frac__h138271[356] ?
																																																											     9'd154 :
																																																											     (twos_complement_carry_int_frac__h138271[355] ?
																																																												9'd155 :
																																																												(twos_complement_carry_int_frac__h138271[354] ?
																																																												   9'd156 :
																																																												   (twos_complement_carry_int_frac__h138271[353] ?
																																																												      9'd157 :
																																																												      (twos_complement_carry_int_frac__h138271[352] ?
																																																													 9'd158 :
																																																													 (twos_complement_carry_int_frac__h138271[351] ?
																																																													    9'd159 :
																																																													    (twos_complement_carry_int_frac__h138271[350] ?
																																																													       9'd160 :
																																																													       (twos_complement_carry_int_frac__h138271[349] ?
																																																														  9'd161 :
																																																														  (twos_complement_carry_int_frac__h138271[348] ?
																																																														     9'd162 :
																																																														     (twos_complement_carry_int_frac__h138271[347] ?
																																																															9'd163 :
																																																															(twos_complement_carry_int_frac__h138271[346] ?
																																																															   9'd164 :
																																																															   (twos_complement_carry_int_frac__h138271[345] ?
																																																															      9'd165 :
																																																															      (twos_complement_carry_int_frac__h138271[344] ?
																																																																 9'd166 :
																																																																 (twos_complement_carry_int_frac__h138271[343] ?
																																																																    9'd167 :
																																																																    (twos_complement_carry_int_frac__h138271[342] ?
																																																																       9'd168 :
																																																																       (twos_complement_carry_int_frac__h138271[341] ?
																																																																	  9'd169 :
																																																																	  (twos_complement_carry_int_frac__h138271[340] ?
																																																																	     9'd170 :
																																																																	     (twos_complement_carry_int_frac__h138271[339] ?
																																																																		9'd171 :
																																																																		(twos_complement_carry_int_frac__h138271[338] ?
																																																																		   9'd172 :
																																																																		   (twos_complement_carry_int_frac__h138271[337] ?
																																																																		      9'd173 :
																																																																		      (twos_complement_carry_int_frac__h138271[336] ?
																																																																			 9'd174 :
																																																																			 (twos_complement_carry_int_frac__h138271[335] ?
																																																																			    9'd175 :
																																																																			    (twos_complement_carry_int_frac__h138271[334] ?
																																																																			       9'd176 :
																																																																			       (twos_complement_carry_int_frac__h138271[333] ?
																																																																				  9'd177 :
																																																																				  (twos_complement_carry_int_frac__h138271[332] ?
																																																																				     9'd178 :
																																																																				     (twos_complement_carry_int_frac__h138271[331] ?
																																																																					9'd179 :
																																																																					(twos_complement_carry_int_frac__h138271[330] ?
																																																																					   9'd180 :
																																																																					   (twos_complement_carry_int_frac__h138271[329] ?
																																																																					      9'd181 :
																																																																					      (twos_complement_carry_int_frac__h138271[328] ?
																																																																						 9'd182 :
																																																																						 (twos_complement_carry_int_frac__h138271[327] ?
																																																																						    9'd183 :
																																																																						    (twos_complement_carry_int_frac__h138271[326] ?
																																																																						       9'd184 :
																																																																						       (twos_complement_carry_int_frac__h138271[325] ?
																																																																							  9'd185 :
																																																																							  (twos_complement_carry_int_frac__h138271[324] ?
																																																																							     9'd186 :
																																																																							     (twos_complement_carry_int_frac__h138271[323] ?
																																																																								9'd187 :
																																																																								(twos_complement_carry_int_frac__h138271[322] ?
																																																																								   9'd188 :
																																																																								   (twos_complement_carry_int_frac__h138271[321] ?
																																																																								      9'd189 :
																																																																								      (twos_complement_carry_int_frac__h138271[320] ?
																																																																									 9'd190 :
																																																																									 (twos_complement_carry_int_frac__h138271[319] ?
																																																																									    9'd191 :
																																																																									    (twos_complement_carry_int_frac__h138271[318] ?
																																																																									       9'd192 :
																																																																									       (twos_complement_carry_int_frac__h138271[317] ?
																																																																										  9'd193 :
																																																																										  (twos_complement_carry_int_frac__h138271[316] ?
																																																																										     9'd194 :
																																																																										     (twos_complement_carry_int_frac__h138271[315] ?
																																																																											9'd195 :
																																																																											(twos_complement_carry_int_frac__h138271[314] ?
																																																																											   9'd196 :
																																																																											   (twos_complement_carry_int_frac__h138271[313] ?
																																																																											      9'd197 :
																																																																											      (twos_complement_carry_int_frac__h138271[312] ?
																																																																												 9'd198 :
																																																																												 (twos_complement_carry_int_frac__h138271[311] ?
																																																																												    9'd199 :
																																																																												    (twos_complement_carry_int_frac__h138271[310] ?
																																																																												       9'd200 :
																																																																												       (twos_complement_carry_int_frac__h138271[309] ?
																																																																													  9'd201 :
																																																																													  (twos_complement_carry_int_frac__h138271[308] ?
																																																																													     9'd202 :
																																																																													     (twos_complement_carry_int_frac__h138271[307] ?
																																																																														9'd203 :
																																																																														(twos_complement_carry_int_frac__h138271[306] ?
																																																																														   9'd204 :
																																																																														   (twos_complement_carry_int_frac__h138271[305] ?
																																																																														      9'd205 :
																																																																														      (twos_complement_carry_int_frac__h138271[304] ?
																																																																															 9'd206 :
																																																																															 (twos_complement_carry_int_frac__h138271[303] ?
																																																																															    9'd207 :
																																																																															    (twos_complement_carry_int_frac__h138271[302] ?
																																																																															       9'd208 :
																																																																															       (twos_complement_carry_int_frac__h138271[301] ?
																																																																																  9'd209 :
																																																																																  (twos_complement_carry_int_frac__h138271[300] ?
																																																																																     9'd210 :
																																																																																     (twos_complement_carry_int_frac__h138271[299] ?
																																																																																	9'd211 :
																																																																																	(twos_complement_carry_int_frac__h138271[298] ?
																																																																																	   9'd212 :
																																																																																	   (twos_complement_carry_int_frac__h138271[297] ?
																																																																																	      9'd213 :
																																																																																	      (twos_complement_carry_int_frac__h138271[296] ?
																																																																																		 9'd214 :
																																																																																		 (twos_complement_carry_int_frac__h138271[295] ?
																																																																																		    9'd215 :
																																																																																		    (twos_complement_carry_int_frac__h138271[294] ?
																																																																																		       9'd216 :
																																																																																		       (twos_complement_carry_int_frac__h138271[293] ?
																																																																																			  9'd217 :
																																																																																			  (twos_complement_carry_int_frac__h138271[292] ?
																																																																																			     9'd218 :
																																																																																			     (twos_complement_carry_int_frac__h138271[291] ?
																																																																																				9'd219 :
																																																																																				(twos_complement_carry_int_frac__h138271[290] ?
																																																																																				   9'd220 :
																																																																																				   (twos_complement_carry_int_frac__h138271[289] ?
																																																																																				      9'd221 :
																																																																																				      (twos_complement_carry_int_frac__h138271[288] ?
																																																																																					 9'd222 :
																																																																																					 (twos_complement_carry_int_frac__h138271[287] ?
																																																																																					    9'd223 :
																																																																																					    (twos_complement_carry_int_frac__h138271[286] ?
																																																																																					       9'd224 :
																																																																																					       (twos_complement_carry_int_frac__h138271[285] ?
																																																																																						  9'd225 :
																																																																																						  (twos_complement_carry_int_frac__h138271[284] ?
																																																																																						     9'd226 :
																																																																																						     (twos_complement_carry_int_frac__h138271[283] ?
																																																																																							9'd227 :
																																																																																							(twos_complement_carry_int_frac__h138271[282] ?
																																																																																							   9'd228 :
																																																																																							   (twos_complement_carry_int_frac__h138271[281] ?
																																																																																							      9'd229 :
																																																																																							      (twos_complement_carry_int_frac__h138271[280] ?
																																																																																								 9'd230 :
																																																																																								 (twos_complement_carry_int_frac__h138271[279] ?
																																																																																								    9'd231 :
																																																																																								    (twos_complement_carry_int_frac__h138271[278] ?
																																																																																								       9'd232 :
																																																																																								       (twos_complement_carry_int_frac__h138271[277] ?
																																																																																									  9'd233 :
																																																																																									  (twos_complement_carry_int_frac__h138271[276] ?
																																																																																									     9'd234 :
																																																																																									     (twos_complement_carry_int_frac__h138271[275] ?
																																																																																										9'd235 :
																																																																																										(twos_complement_carry_int_frac__h138271[274] ?
																																																																																										   9'd236 :
																																																																																										   (twos_complement_carry_int_frac__h138271[273] ?
																																																																																										      9'd237 :
																																																																																										      (twos_complement_carry_int_frac__h138271[272] ?
																																																																																											 9'd238 :
																																																																																											 (twos_complement_carry_int_frac__h138271[271] ?
																																																																																											    9'd239 :
																																																																																											    (twos_complement_carry_int_frac__h138271[270] ?
																																																																																											       9'd240 :
																																																																																											       (twos_complement_carry_int_frac__h138271[269] ?
																																																																																												  9'd241 :
																																																																																												  (twos_complement_carry_int_frac__h138271[268] ?
																																																																																												     9'd242 :
																																																																																												     (twos_complement_carry_int_frac__h138271[267] ?
																																																																																													9'd243 :
																																																																																													(twos_complement_carry_int_frac__h138271[266] ?
																																																																																													   9'd244 :
																																																																																													   (twos_complement_carry_int_frac__h138271[265] ?
																																																																																													      9'd245 :
																																																																																													      (twos_complement_carry_int_frac__h138271[264] ?
																																																																																														 9'd246 :
																																																																																														 (twos_complement_carry_int_frac__h138271[263] ?
																																																																																														    9'd247 :
																																																																																														    (twos_complement_carry_int_frac__h138271[262] ?
																																																																																														       9'd248 :
																																																																																														       (twos_complement_carry_int_frac__h138271[261] ?
																																																																																															  9'd249 :
																																																																																															  (twos_complement_carry_int_frac__h138271[260] ?
																																																																																															     9'd250 :
																																																																																															     (twos_complement_carry_int_frac__h138271[259] ?
																																																																																																9'd251 :
																																																																																																(twos_complement_carry_int_frac__h138271[258] ?
																																																																																																   9'd252 :
																																																																																																   (twos_complement_carry_int_frac__h138271[257] ?
																																																																																																      9'd253 :
																																																																																																      (twos_complement_carry_int_frac__h138271[256] ?
																																																																																																	 9'd254 :
																																																																																																	 (twos_complement_carry_int_frac__h138271[255] ?
																																																																																																	    9'd255 :
																																																																																																	    (twos_complement_carry_int_frac__h138271[254] ?
																																																																																																	       9'd256 :
																																																																																																	       (twos_complement_carry_int_frac__h138271[253] ?
																																																																																																		  9'd257 :
																																																																																																		  (twos_complement_carry_int_frac__h138271[252] ?
																																																																																																		     9'd258 :
																																																																																																		     (twos_complement_carry_int_frac__h138271[251] ?
																																																																																																			9'd259 :
																																																																																																			(twos_complement_carry_int_frac__h138271[250] ?
																																																																																																			   9'd260 :
																																																																																																			   (twos_complement_carry_int_frac__h138271[249] ?
																																																																																																			      9'd261 :
																																																																																																			      (twos_complement_carry_int_frac__h138271[248] ?
																																																																																																				 9'd262 :
																																																																																																				 (twos_complement_carry_int_frac__h138271[247] ?
																																																																																																				    9'd263 :
																																																																																																				    (twos_complement_carry_int_frac__h138271[246] ?
																																																																																																				       9'd264 :
																																																																																																				       (twos_complement_carry_int_frac__h138271[245] ?
																																																																																																					  9'd265 :
																																																																																																					  (twos_complement_carry_int_frac__h138271[244] ?
																																																																																																					     9'd266 :
																																																																																																					     (twos_complement_carry_int_frac__h138271[243] ?
																																																																																																						9'd267 :
																																																																																																						(twos_complement_carry_int_frac__h138271[242] ?
																																																																																																						   9'd268 :
																																																																																																						   (twos_complement_carry_int_frac__h138271[241] ?
																																																																																																						      9'd269 :
																																																																																																						      (twos_complement_carry_int_frac__h138271[240] ?
																																																																																																							 9'd270 :
																																																																																																							 (twos_complement_carry_int_frac__h138271[239] ?
																																																																																																							    9'd271 :
																																																																																																							    (twos_complement_carry_int_frac__h138271[238] ?
																																																																																																							       9'd272 :
																																																																																																							       (twos_complement_carry_int_frac__h138271[237] ?
																																																																																																								  9'd273 :
																																																																																																								  (twos_complement_carry_int_frac__h138271[236] ?
																																																																																																								     9'd274 :
																																																																																																								     (twos_complement_carry_int_frac__h138271[235] ?
																																																																																																									9'd275 :
																																																																																																									(twos_complement_carry_int_frac__h138271[234] ?
																																																																																																									   9'd276 :
																																																																																																									   (twos_complement_carry_int_frac__h138271[233] ?
																																																																																																									      9'd277 :
																																																																																																									      (twos_complement_carry_int_frac__h138271[232] ?
																																																																																																										 9'd278 :
																																																																																																										 (twos_complement_carry_int_frac__h138271[231] ?
																																																																																																										    9'd279 :
																																																																																																										    (twos_complement_carry_int_frac__h138271[230] ?
																																																																																																										       9'd280 :
																																																																																																										       (twos_complement_carry_int_frac__h138271[229] ?
																																																																																																											  9'd281 :
																																																																																																											  (twos_complement_carry_int_frac__h138271[228] ?
																																																																																																											     9'd282 :
																																																																																																											     (twos_complement_carry_int_frac__h138271[227] ?
																																																																																																												9'd283 :
																																																																																																												(twos_complement_carry_int_frac__h138271[226] ?
																																																																																																												   9'd284 :
																																																																																																												   (twos_complement_carry_int_frac__h138271[225] ?
																																																																																																												      9'd285 :
																																																																																																												      (twos_complement_carry_int_frac__h138271[224] ?
																																																																																																													 9'd286 :
																																																																																																													 (twos_complement_carry_int_frac__h138271[223] ?
																																																																																																													    9'd287 :
																																																																																																													    (twos_complement_carry_int_frac__h138271[222] ?
																																																																																																													       9'd288 :
																																																																																																													       (twos_complement_carry_int_frac__h138271[221] ?
																																																																																																														  9'd289 :
																																																																																																														  (twos_complement_carry_int_frac__h138271[220] ?
																																																																																																														     9'd290 :
																																																																																																														     (twos_complement_carry_int_frac__h138271[219] ?
																																																																																																															9'd291 :
																																																																																																															(twos_complement_carry_int_frac__h138271[218] ?
																																																																																																															   9'd292 :
																																																																																																															   (twos_complement_carry_int_frac__h138271[217] ?
																																																																																																															      9'd293 :
																																																																																																															      (twos_complement_carry_int_frac__h138271[216] ?
																																																																																																																 9'd294 :
																																																																																																																 (twos_complement_carry_int_frac__h138271[215] ?
																																																																																																																    9'd295 :
																																																																																																																    (twos_complement_carry_int_frac__h138271[214] ?
																																																																																																																       9'd296 :
																																																																																																																       (twos_complement_carry_int_frac__h138271[213] ?
																																																																																																																	  9'd297 :
																																																																																																																	  (twos_complement_carry_int_frac__h138271[212] ?
																																																																																																																	     9'd298 :
																																																																																																																	     (twos_complement_carry_int_frac__h138271[211] ?
																																																																																																																		9'd299 :
																																																																																																																		(twos_complement_carry_int_frac__h138271[210] ?
																																																																																																																		   9'd300 :
																																																																																																																		   (twos_complement_carry_int_frac__h138271[209] ?
																																																																																																																		      9'd301 :
																																																																																																																		      (twos_complement_carry_int_frac__h138271[208] ?
																																																																																																																			 9'd302 :
																																																																																																																			 (twos_complement_carry_int_frac__h138271[207] ?
																																																																																																																			    9'd303 :
																																																																																																																			    (twos_complement_carry_int_frac__h138271[206] ?
																																																																																																																			       9'd304 :
																																																																																																																			       (twos_complement_carry_int_frac__h138271[205] ?
																																																																																																																				  9'd305 :
																																																																																																																				  (twos_complement_carry_int_frac__h138271[204] ?
																																																																																																																				     9'd306 :
																																																																																																																				     (twos_complement_carry_int_frac__h138271[203] ?
																																																																																																																					9'd307 :
																																																																																																																					(twos_complement_carry_int_frac__h138271[202] ?
																																																																																																																					   9'd308 :
																																																																																																																					   (twos_complement_carry_int_frac__h138271[201] ?
																																																																																																																					      9'd309 :
																																																																																																																					      (twos_complement_carry_int_frac__h138271[200] ?
																																																																																																																						 9'd310 :
																																																																																																																						 (twos_complement_carry_int_frac__h138271[199] ?
																																																																																																																						    9'd311 :
																																																																																																																						    (twos_complement_carry_int_frac__h138271[198] ?
																																																																																																																						       9'd312 :
																																																																																																																						       (twos_complement_carry_int_frac__h138271[197] ?
																																																																																																																							  9'd313 :
																																																																																																																							  (twos_complement_carry_int_frac__h138271[196] ?
																																																																																																																							     9'd314 :
																																																																																																																							     (twos_complement_carry_int_frac__h138271[195] ?
																																																																																																																								9'd315 :
																																																																																																																								(twos_complement_carry_int_frac__h138271[194] ?
																																																																																																																								   9'd316 :
																																																																																																																								   (twos_complement_carry_int_frac__h138271[193] ?
																																																																																																																								      9'd317 :
																																																																																																																								      (twos_complement_carry_int_frac__h138271[192] ?
																																																																																																																									 9'd318 :
																																																																																																																									 (twos_complement_carry_int_frac__h138271[191] ?
																																																																																																																									    9'd319 :
																																																																																																																									    (twos_complement_carry_int_frac__h138271[190] ?
																																																																																																																									       9'd320 :
																																																																																																																									       (twos_complement_carry_int_frac__h138271[189] ?
																																																																																																																										  9'd321 :
																																																																																																																										  (twos_complement_carry_int_frac__h138271[188] ?
																																																																																																																										     9'd322 :
																																																																																																																										     (twos_complement_carry_int_frac__h138271[187] ?
																																																																																																																											9'd323 :
																																																																																																																											(twos_complement_carry_int_frac__h138271[186] ?
																																																																																																																											   9'd324 :
																																																																																																																											   (twos_complement_carry_int_frac__h138271[185] ?
																																																																																																																											      9'd325 :
																																																																																																																											      (twos_complement_carry_int_frac__h138271[184] ?
																																																																																																																												 9'd326 :
																																																																																																																												 (twos_complement_carry_int_frac__h138271[183] ?
																																																																																																																												    9'd327 :
																																																																																																																												    (twos_complement_carry_int_frac__h138271[182] ?
																																																																																																																												       9'd328 :
																																																																																																																												       (twos_complement_carry_int_frac__h138271[181] ?
																																																																																																																													  9'd329 :
																																																																																																																													  (twos_complement_carry_int_frac__h138271[180] ?
																																																																																																																													     9'd330 :
																																																																																																																													     (twos_complement_carry_int_frac__h138271[179] ?
																																																																																																																														9'd331 :
																																																																																																																														(twos_complement_carry_int_frac__h138271[178] ?
																																																																																																																														   9'd332 :
																																																																																																																														   (twos_complement_carry_int_frac__h138271[177] ?
																																																																																																																														      9'd333 :
																																																																																																																														      (twos_complement_carry_int_frac__h138271[176] ?
																																																																																																																															 9'd334 :
																																																																																																																															 (twos_complement_carry_int_frac__h138271[175] ?
																																																																																																																															    9'd335 :
																																																																																																																															    (twos_complement_carry_int_frac__h138271[174] ?
																																																																																																																															       9'd336 :
																																																																																																																															       (twos_complement_carry_int_frac__h138271[173] ?
																																																																																																																																  9'd337 :
																																																																																																																																  (twos_complement_carry_int_frac__h138271[172] ?
																																																																																																																																     9'd338 :
																																																																																																																																     (twos_complement_carry_int_frac__h138271[171] ?
																																																																																																																																	9'd339 :
																																																																																																																																	(twos_complement_carry_int_frac__h138271[170] ?
																																																																																																																																	   9'd340 :
																																																																																																																																	   (twos_complement_carry_int_frac__h138271[169] ?
																																																																																																																																	      9'd341 :
																																																																																																																																	      (twos_complement_carry_int_frac__h138271[168] ?
																																																																																																																																		 9'd342 :
																																																																																																																																		 (twos_complement_carry_int_frac__h138271[167] ?
																																																																																																																																		    9'd343 :
																																																																																																																																		    (twos_complement_carry_int_frac__h138271[166] ?
																																																																																																																																		       9'd344 :
																																																																																																																																		       (twos_complement_carry_int_frac__h138271[165] ?
																																																																																																																																			  9'd345 :
																																																																																																																																			  (twos_complement_carry_int_frac__h138271[164] ?
																																																																																																																																			     9'd346 :
																																																																																																																																			     (twos_complement_carry_int_frac__h138271[163] ?
																																																																																																																																				9'd347 :
																																																																																																																																				(twos_complement_carry_int_frac__h138271[162] ?
																																																																																																																																				   9'd348 :
																																																																																																																																				   (twos_complement_carry_int_frac__h138271[161] ?
																																																																																																																																				      9'd349 :
																																																																																																																																				      (twos_complement_carry_int_frac__h138271[160] ?
																																																																																																																																					 9'd350 :
																																																																																																																																					 (twos_complement_carry_int_frac__h138271[159] ?
																																																																																																																																					    9'd351 :
																																																																																																																																					    (twos_complement_carry_int_frac__h138271[158] ?
																																																																																																																																					       9'd352 :
																																																																																																																																					       (twos_complement_carry_int_frac__h138271[157] ?
																																																																																																																																						  9'd353 :
																																																																																																																																						  (twos_complement_carry_int_frac__h138271[156] ?
																																																																																																																																						     9'd354 :
																																																																																																																																						     (twos_complement_carry_int_frac__h138271[155] ?
																																																																																																																																							9'd355 :
																																																																																																																																							(twos_complement_carry_int_frac__h138271[154] ?
																																																																																																																																							   9'd356 :
																																																																																																																																							   (twos_complement_carry_int_frac__h138271[153] ?
																																																																																																																																							      9'd357 :
																																																																																																																																							      (twos_complement_carry_int_frac__h138271[152] ?
																																																																																																																																								 9'd358 :
																																																																																																																																								 (twos_complement_carry_int_frac__h138271[151] ?
																																																																																																																																								    9'd359 :
																																																																																																																																								    (twos_complement_carry_int_frac__h138271[150] ?
																																																																																																																																								       9'd360 :
																																																																																																																																								       (twos_complement_carry_int_frac__h138271[149] ?
																																																																																																																																									  9'd361 :
																																																																																																																																									  (twos_complement_carry_int_frac__h138271[148] ?
																																																																																																																																									     9'd362 :
																																																																																																																																									     (twos_complement_carry_int_frac__h138271[147] ?
																																																																																																																																										9'd363 :
																																																																																																																																										(twos_complement_carry_int_frac__h138271[146] ?
																																																																																																																																										   9'd364 :
																																																																																																																																										   (twos_complement_carry_int_frac__h138271[145] ?
																																																																																																																																										      9'd365 :
																																																																																																																																										      (twos_complement_carry_int_frac__h138271[144] ?
																																																																																																																																											 9'd366 :
																																																																																																																																											 (twos_complement_carry_int_frac__h138271[143] ?
																																																																																																																																											    9'd367 :
																																																																																																																																											    (twos_complement_carry_int_frac__h138271[142] ?
																																																																																																																																											       9'd368 :
																																																																																																																																											       (twos_complement_carry_int_frac__h138271[141] ?
																																																																																																																																												  9'd369 :
																																																																																																																																												  (twos_complement_carry_int_frac__h138271[140] ?
																																																																																																																																												     9'd370 :
																																																																																																																																												     (twos_complement_carry_int_frac__h138271[139] ?
																																																																																																																																													9'd371 :
																																																																																																																																													(twos_complement_carry_int_frac__h138271[138] ?
																																																																																																																																													   9'd372 :
																																																																																																																																													   (twos_complement_carry_int_frac__h138271[137] ?
																																																																																																																																													      9'd373 :
																																																																																																																																													      (twos_complement_carry_int_frac__h138271[136] ?
																																																																																																																																														 9'd374 :
																																																																																																																																														 (twos_complement_carry_int_frac__h138271[135] ?
																																																																																																																																														    9'd375 :
																																																																																																																																														    (twos_complement_carry_int_frac__h138271[134] ?
																																																																																																																																														       9'd376 :
																																																																																																																																														       (twos_complement_carry_int_frac__h138271[133] ?
																																																																																																																																															  9'd377 :
																																																																																																																																															  (twos_complement_carry_int_frac__h138271[132] ?
																																																																																																																																															     9'd378 :
																																																																																																																																															     (twos_complement_carry_int_frac__h138271[131] ?
																																																																																																																																																9'd379 :
																																																																																																																																																(twos_complement_carry_int_frac__h138271[130] ?
																																																																																																																																																   9'd380 :
																																																																																																																																																   (twos_complement_carry_int_frac__h138271[129] ?
																																																																																																																																																      9'd381 :
																																																																																																																																																      (twos_complement_carry_int_frac__h138271[128] ?
																																																																																																																																																	 9'd382 :
																																																																																																																																																	 (twos_complement_carry_int_frac__h138271[127] ?
																																																																																																																																																	    9'd383 :
																																																																																																																																																	    (twos_complement_carry_int_frac__h138271[126] ?
																																																																																																																																																	       9'd384 :
																																																																																																																																																	       (twos_complement_carry_int_frac__h138271[125] ?
																																																																																																																																																		  9'd385 :
																																																																																																																																																		  (twos_complement_carry_int_frac__h138271[124] ?
																																																																																																																																																		     9'd386 :
																																																																																																																																																		     (twos_complement_carry_int_frac__h138271[123] ?
																																																																																																																																																			9'd387 :
																																																																																																																																																			(twos_complement_carry_int_frac__h138271[122] ?
																																																																																																																																																			   9'd388 :
																																																																																																																																																			   (twos_complement_carry_int_frac__h138271[121] ?
																																																																																																																																																			      9'd389 :
																																																																																																																																																			      (twos_complement_carry_int_frac__h138271[120] ?
																																																																																																																																																				 9'd390 :
																																																																																																																																																				 (twos_complement_carry_int_frac__h138271[119] ?
																																																																																																																																																				    9'd391 :
																																																																																																																																																				    (twos_complement_carry_int_frac__h138271[118] ?
																																																																																																																																																				       9'd392 :
																																																																																																																																																				       (twos_complement_carry_int_frac__h138271[117] ?
																																																																																																																																																					  9'd393 :
																																																																																																																																																					  (twos_complement_carry_int_frac__h138271[116] ?
																																																																																																																																																					     9'd394 :
																																																																																																																																																					     (twos_complement_carry_int_frac__h138271[115] ?
																																																																																																																																																						9'd395 :
																																																																																																																																																						(twos_complement_carry_int_frac__h138271[114] ?
																																																																																																																																																						   9'd396 :
																																																																																																																																																						   (twos_complement_carry_int_frac__h138271[113] ?
																																																																																																																																																						      9'd397 :
																																																																																																																																																						      (twos_complement_carry_int_frac__h138271[112] ?
																																																																																																																																																							 9'd398 :
																																																																																																																																																							 (twos_complement_carry_int_frac__h138271[111] ?
																																																																																																																																																							    9'd399 :
																																																																																																																																																							    (twos_complement_carry_int_frac__h138271[110] ?
																																																																																																																																																							       9'd400 :
																																																																																																																																																							       (twos_complement_carry_int_frac__h138271[109] ?
																																																																																																																																																								  9'd401 :
																																																																																																																																																								  (twos_complement_carry_int_frac__h138271[108] ?
																																																																																																																																																								     9'd402 :
																																																																																																																																																								     (twos_complement_carry_int_frac__h138271[107] ?
																																																																																																																																																									9'd403 :
																																																																																																																																																									(twos_complement_carry_int_frac__h138271[106] ?
																																																																																																																																																									   9'd404 :
																																																																																																																																																									   (twos_complement_carry_int_frac__h138271[105] ?
																																																																																																																																																									      9'd405 :
																																																																																																																																																									      (twos_complement_carry_int_frac__h138271[104] ?
																																																																																																																																																										 9'd406 :
																																																																																																																																																										 (twos_complement_carry_int_frac__h138271[103] ?
																																																																																																																																																										    9'd407 :
																																																																																																																																																										    (twos_complement_carry_int_frac__h138271[102] ?
																																																																																																																																																										       9'd408 :
																																																																																																																																																										       (twos_complement_carry_int_frac__h138271[101] ?
																																																																																																																																																											  9'd409 :
																																																																																																																																																											  (twos_complement_carry_int_frac__h138271[100] ?
																																																																																																																																																											     9'd410 :
																																																																																																																																																											     (twos_complement_carry_int_frac__h138271[99] ?
																																																																																																																																																												9'd411 :
																																																																																																																																																												(twos_complement_carry_int_frac__h138271[98] ?
																																																																																																																																																												   9'd412 :
																																																																																																																																																												   (twos_complement_carry_int_frac__h138271[97] ?
																																																																																																																																																												      9'd413 :
																																																																																																																																																												      (twos_complement_carry_int_frac__h138271[96] ?
																																																																																																																																																													 9'd414 :
																																																																																																																																																													 (twos_complement_carry_int_frac__h138271[95] ?
																																																																																																																																																													    9'd415 :
																																																																																																																																																													    (twos_complement_carry_int_frac__h138271[94] ?
																																																																																																																																																													       9'd416 :
																																																																																																																																																													       (twos_complement_carry_int_frac__h138271[93] ?
																																																																																																																																																														  9'd417 :
																																																																																																																																																														  (twos_complement_carry_int_frac__h138271[92] ?
																																																																																																																																																														     9'd418 :
																																																																																																																																																														     (twos_complement_carry_int_frac__h138271[91] ?
																																																																																																																																																															9'd419 :
																																																																																																																																																															(twos_complement_carry_int_frac__h138271[90] ?
																																																																																																																																																															   9'd420 :
																																																																																																																																																															   (twos_complement_carry_int_frac__h138271[89] ?
																																																																																																																																																															      9'd421 :
																																																																																																																																																															      (twos_complement_carry_int_frac__h138271[88] ?
																																																																																																																																																																 9'd422 :
																																																																																																																																																																 (twos_complement_carry_int_frac__h138271[87] ?
																																																																																																																																																																    9'd423 :
																																																																																																																																																																    (twos_complement_carry_int_frac__h138271[86] ?
																																																																																																																																																																       9'd424 :
																																																																																																																																																																       (twos_complement_carry_int_frac__h138271[85] ?
																																																																																																																																																																	  9'd425 :
																																																																																																																																																																	  (twos_complement_carry_int_frac__h138271[84] ?
																																																																																																																																																																	     9'd426 :
																																																																																																																																																																	     (twos_complement_carry_int_frac__h138271[83] ?
																																																																																																																																																																		9'd427 :
																																																																																																																																																																		(twos_complement_carry_int_frac__h138271[82] ?
																																																																																																																																																																		   9'd428 :
																																																																																																																																																																		   (twos_complement_carry_int_frac__h138271[81] ?
																																																																																																																																																																		      9'd429 :
																																																																																																																																																																		      (twos_complement_carry_int_frac__h138271[80] ?
																																																																																																																																																																			 9'd430 :
																																																																																																																																																																			 (twos_complement_carry_int_frac__h138271[79] ?
																																																																																																																																																																			    9'd431 :
																																																																																																																																																																			    (twos_complement_carry_int_frac__h138271[78] ?
																																																																																																																																																																			       9'd432 :
																																																																																																																																																																			       (twos_complement_carry_int_frac__h138271[77] ?
																																																																																																																																																																				  9'd433 :
																																																																																																																																																																				  (twos_complement_carry_int_frac__h138271[76] ?
																																																																																																																																																																				     9'd434 :
																																																																																																																																																																				     (twos_complement_carry_int_frac__h138271[75] ?
																																																																																																																																																																					9'd435 :
																																																																																																																																																																					(twos_complement_carry_int_frac__h138271[74] ?
																																																																																																																																																																					   9'd436 :
																																																																																																																																																																					   (twos_complement_carry_int_frac__h138271[73] ?
																																																																																																																																																																					      9'd437 :
																																																																																																																																																																					      (twos_complement_carry_int_frac__h138271[72] ?
																																																																																																																																																																						 9'd438 :
																																																																																																																																																																						 (twos_complement_carry_int_frac__h138271[71] ?
																																																																																																																																																																						    9'd439 :
																																																																																																																																																																						    (twos_complement_carry_int_frac__h138271[70] ?
																																																																																																																																																																						       9'd440 :
																																																																																																																																																																						       (twos_complement_carry_int_frac__h138271[69] ?
																																																																																																																																																																							  9'd441 :
																																																																																																																																																																							  (twos_complement_carry_int_frac__h138271[68] ?
																																																																																																																																																																							     9'd442 :
																																																																																																																																																																							     (twos_complement_carry_int_frac__h138271[67] ?
																																																																																																																																																																								9'd443 :
																																																																																																																																																																								(twos_complement_carry_int_frac__h138271[66] ?
																																																																																																																																																																								   9'd444 :
																																																																																																																																																																								   (twos_complement_carry_int_frac__h138271[65] ?
																																																																																																																																																																								      9'd445 :
																																																																																																																																																																								      (twos_complement_carry_int_frac__h138271[64] ?
																																																																																																																																																																									 9'd446 :
																																																																																																																																																																									 (twos_complement_carry_int_frac__h138271[63] ?
																																																																																																																																																																									    9'd447 :
																																																																																																																																																																									    (twos_complement_carry_int_frac__h138271[62] ?
																																																																																																																																																																									       9'd448 :
																																																																																																																																																																									       (twos_complement_carry_int_frac__h138271[61] ?
																																																																																																																																																																										  9'd449 :
																																																																																																																																																																										  (twos_complement_carry_int_frac__h138271[60] ?
																																																																																																																																																																										     9'd450 :
																																																																																																																																																																										     (twos_complement_carry_int_frac__h138271[59] ?
																																																																																																																																																																											9'd451 :
																																																																																																																																																																											(twos_complement_carry_int_frac__h138271[58] ?
																																																																																																																																																																											   9'd452 :
																																																																																																																																																																											   (twos_complement_carry_int_frac__h138271[57] ?
																																																																																																																																																																											      9'd453 :
																																																																																																																																																																											      (twos_complement_carry_int_frac__h138271[56] ?
																																																																																																																																																																												 9'd454 :
																																																																																																																																																																												 (twos_complement_carry_int_frac__h138271[55] ?
																																																																																																																																																																												    9'd455 :
																																																																																																																																																																												    (twos_complement_carry_int_frac__h138271[54] ?
																																																																																																																																																																												       9'd456 :
																																																																																																																																																																												       (twos_complement_carry_int_frac__h138271[53] ?
																																																																																																																																																																													  9'd457 :
																																																																																																																																																																													  (twos_complement_carry_int_frac__h138271[52] ?
																																																																																																																																																																													     9'd458 :
																																																																																																																																																																													     (twos_complement_carry_int_frac__h138271[51] ?
																																																																																																																																																																														9'd459 :
																																																																																																																																																																														(twos_complement_carry_int_frac__h138271[50] ?
																																																																																																																																																																														   9'd460 :
																																																																																																																																																																														   (twos_complement_carry_int_frac__h138271[49] ?
																																																																																																																																																																														      9'd461 :
																																																																																																																																																																														      (twos_complement_carry_int_frac__h138271[48] ?
																																																																																																																																																																															 9'd462 :
																																																																																																																																																																															 (twos_complement_carry_int_frac__h138271[47] ?
																																																																																																																																																																															    9'd463 :
																																																																																																																																																																															    (twos_complement_carry_int_frac__h138271[46] ?
																																																																																																																																																																															       9'd464 :
																																																																																																																																																																															       (twos_complement_carry_int_frac__h138271[45] ?
																																																																																																																																																																																  9'd465 :
																																																																																																																																																																																  (twos_complement_carry_int_frac__h138271[44] ?
																																																																																																																																																																																     9'd466 :
																																																																																																																																																																																     (twos_complement_carry_int_frac__h138271[43] ?
																																																																																																																																																																																	9'd467 :
																																																																																																																																																																																	(twos_complement_carry_int_frac__h138271[42] ?
																																																																																																																																																																																	   9'd468 :
																																																																																																																																																																																	   (twos_complement_carry_int_frac__h138271[41] ?
																																																																																																																																																																																	      9'd469 :
																																																																																																																																																																																	      (twos_complement_carry_int_frac__h138271[40] ?
																																																																																																																																																																																		 9'd470 :
																																																																																																																																																																																		 (twos_complement_carry_int_frac__h138271[39] ?
																																																																																																																																																																																		    9'd471 :
																																																																																																																																																																																		    (twos_complement_carry_int_frac__h138271[38] ?
																																																																																																																																																																																		       9'd472 :
																																																																																																																																																																																		       (twos_complement_carry_int_frac__h138271[37] ?
																																																																																																																																																																																			  9'd473 :
																																																																																																																																																																																			  (twos_complement_carry_int_frac__h138271[36] ?
																																																																																																																																																																																			     9'd474 :
																																																																																																																																																																																			     (twos_complement_carry_int_frac__h138271[35] ?
																																																																																																																																																																																				9'd475 :
																																																																																																																																																																																				(twos_complement_carry_int_frac__h138271[34] ?
																																																																																																																																																																																				   9'd476 :
																																																																																																																																																																																				   (twos_complement_carry_int_frac__h138271[33] ?
																																																																																																																																																																																				      9'd477 :
																																																																																																																																																																																				      (twos_complement_carry_int_frac__h138271[32] ?
																																																																																																																																																																																					 9'd478 :
																																																																																																																																																																																					 (twos_complement_carry_int_frac__h138271[31] ?
																																																																																																																																																																																					    9'd479 :
																																																																																																																																																																																					    (twos_complement_carry_int_frac__h138271[30] ?
																																																																																																																																																																																					       9'd480 :
																																																																																																																																																																																					       (twos_complement_carry_int_frac__h138271[29] ?
																																																																																																																																																																																						  9'd481 :
																																																																																																																																																																																						  (twos_complement_carry_int_frac__h138271[28] ?
																																																																																																																																																																																						     9'd482 :
																																																																																																																																																																																						     (twos_complement_carry_int_frac__h138271[27] ?
																																																																																																																																																																																							9'd483 :
																																																																																																																																																																																							(twos_complement_carry_int_frac__h138271[26] ?
																																																																																																																																																																																							   9'd484 :
																																																																																																																																																																																							   (twos_complement_carry_int_frac__h138271[25] ?
																																																																																																																																																																																							      9'd485 :
																																																																																																																																																																																							      (twos_complement_carry_int_frac__h138271[24] ?
																																																																																																																																																																																								 9'd486 :
																																																																																																																																																																																								 (twos_complement_carry_int_frac__h138271[23] ?
																																																																																																																																																																																								    9'd487 :
																																																																																																																																																																																								    (twos_complement_carry_int_frac__h138271[22] ?
																																																																																																																																																																																								       9'd488 :
																																																																																																																																																																																								       (twos_complement_carry_int_frac__h138271[21] ?
																																																																																																																																																																																									  9'd489 :
																																																																																																																																																																																									  (twos_complement_carry_int_frac__h138271[20] ?
																																																																																																																																																																																									     9'd490 :
																																																																																																																																																																																									     (twos_complement_carry_int_frac__h138271[19] ?
																																																																																																																																																																																										9'd491 :
																																																																																																																																																																																										(twos_complement_carry_int_frac__h138271[18] ?
																																																																																																																																																																																										   9'd492 :
																																																																																																																																																																																										   (twos_complement_carry_int_frac__h138271[17] ?
																																																																																																																																																																																										      9'd493 :
																																																																																																																																																																																										      (twos_complement_carry_int_frac__h138271[16] ?
																																																																																																																																																																																											 9'd494 :
																																																																																																																																																																																											 (twos_complement_carry_int_frac__h138271[15] ?
																																																																																																																																																																																											    9'd495 :
																																																																																																																																																																																											    (twos_complement_carry_int_frac__h138271[14] ?
																																																																																																																																																																																											       9'd496 :
																																																																																																																																																																																											       (twos_complement_carry_int_frac__h138271[13] ?
																																																																																																																																																																																												  9'd497 :
																																																																																																																																																																																												  (twos_complement_carry_int_frac__h138271[12] ?
																																																																																																																																																																																												     9'd498 :
																																																																																																																																																																																												     (twos_complement_carry_int_frac__h138271[11] ?
																																																																																																																																																																																													9'd499 :
																																																																																																																																																																																													(twos_complement_carry_int_frac__h138271[10] ?
																																																																																																																																																																																													   9'd500 :
																																																																																																																																																																																													   (twos_complement_carry_int_frac__h138271[9] ?
																																																																																																																																																																																													      9'd501 :
																																																																																																																																																																																													      (twos_complement_carry_int_frac__h138271[8] ?
																																																																																																																																																																																														 9'd502 :
																																																																																																																																																																																														 (twos_complement_carry_int_frac__h138271[7] ?
																																																																																																																																																																																														    9'd503 :
																																																																																																																																																																																														    (twos_complement_carry_int_frac__h138271[6] ?
																																																																																																																																																																																														       9'd504 :
																																																																																																																																																																																														       (twos_complement_carry_int_frac__h138271[5] ?
																																																																																																																																																																																															  9'd505 :
																																																																																																																																																																																															  (twos_complement_carry_int_frac__h138271[4] ?
																																																																																																																																																																																															     9'd506 :
																																																																																																																																																																																															     (twos_complement_carry_int_frac__h138271[3] ?
																																																																																																																																																																																																9'd507 :
																																																																																																																																																																																																(twos_complement_carry_int_frac__h138271[2] ?
																																																																																																																																																																																																   9'd508 :
																																																																																																																																																																																																   (twos_complement_carry_int_frac__h138271[1] ?
																																																																																																																																																																																																      9'd509 :
																																																																																																																																																																																																      (twos_complement_carry_int_frac__h138271[0] ?
																																																																																																																																																																																																	 9'd510 :
																																																																																																																																																																																																	 9'd
  assign new_inp04024_AND_INV_0x7FFFFFFE_SL_x13990_SRL__ETC__q9 =
	     (new_inp__h104024 & ~(31'h7FFFFFFE << x__h113990)) >>
	     x__h113992 ;
  assign new_inp14376_AND_INV_0x7FFFFFFE_SL_x24413_SRL__ETC__q10 =
	     (new_inp__h114376 & ~(31'h7FFFFFFE << x__h124413)) >>
	     x__h124415 ;
  assign new_inp__h104024 =
	     ffI$D_OUT[103] ? 31'd0 - ffI$D_OUT[102:72] : ffI$D_OUT[102:72] ;
  assign new_inp__h114376 =
	     IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[31] ?
	       31'd0 -
	       IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[30:0] :
	       IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852[30:0] ;
  assign ptof_ptoF_fifo_stage0_regD_OUT_BITS_38_TO_31__q3 =
	     ptof_ptoF_fifo_stage0_reg$D_OUT[38:31] ;
  assign qtop_ffOD_OUT_BITS_28_TO_2__q21 = qtop_ffO$D_OUT[28:2] ;
  assign qtop_ffO_first__642_BITS_28_TO_2_697_BIT_IF_30_ETC___d2715 =
	     qtop_ffOD_OUT_BITS_28_TO_2__q21[i__h233895] ;
  assign qtop_ffO_first__642_BITS_35_TO_31_654_PLUS_1___d2655 =
	     qtop_ffO$D_OUT[35:31] + 5'd1 ;
  assign qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2724 =
	     qtop_ffO$D_OUT[0] & y__h233983 ;
  assign qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2728 =
	     qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2724 &
	     y__h233987 ;
  assign qtop_quireToPosit1_fifo_stage0_regD_OUT_BITS__ETC__q6 =
	     qtop_quireToPosit1_fifo_stage0_reg$D_OUT[518:511] ;
  assign qtop_quireToPosit1_fifo_stage0_reg_first__39_B_ETC___d342 =
	     (qtop_quireToPosit1_fifo_stage0_reg$D_OUT[518:511] ^ 8'h80) <
	     8'd248 ;
  assign rg_quire_12_BIT_511_13_AND_rg_quire_12_BITS_51_ETC___d2449 =
	     { x__h145559,
	       ((IF_0_CONCAT_IF_IF_rg_quire_12_BIT_511_13_THEN__ETC___d2443 ^
		 10'h200) <
		10'd392) ?
		 8'd136 :
		 (((IF_0_CONCAT_IF_IF_rg_quire_12_BIT_511_13_THEN__ETC___d2443 ^
		    10'h200) <=
		   10'd632) ?
		    IF_0_CONCAT_IF_IF_rg_quire_12_BIT_511_13_THEN__ETC___d2443[7:0] :
		    8'd120),
	       twos_complement_carry_int_frac__h138271 } ;
  assign rg_quire_12_PLUS_fda_divider_fifo_output_reg_f_ETC___d301 =
	     rg_quire + fda_divider_fifo_output_reg$D_OUT[513:2] ;
  assign rg_quire_12_PLUS_fma_multiplier_fifo_output_re_ETC___d120 =
	     rg_quire + fma_multiplier_fifo_output_reg$D_OUT[513:2] ;
  assign shift_new0__h225156 =
	     _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2491 ?
	       _theResult___snd_snd__h226877 :
	       3'd0 ;
  assign shift_new0__h230496 =
	     _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2667 ?
	       _theResult___snd_snd__h232212 :
	       3'd0 ;
  assign shift_new__h226824 = { 1'd0, x__h228451 } ;
  assign shift_new__h232159 = { 1'd0, x__h233786 } ;
  assign stage0_regf_frac__h137459 = { ffI_f_rv$port1__read[22:0], 4'd0 } ;
  assign stage1_regf_frac__h99437 =
	     IF_qtop_quireToPosit1_fifo_stage0_reg_first__3_ETC___d349[27] ?
	       IF_qtop_quireToPosit1_fifo_stage0_reg_first__3_ETC___d349[26:0] :
	       IF_qtop_quireToPosit1_fifo_stage0_reg_first__3_ETC___d349[27:1] ;
  assign truncated_frac__h1200 =
	     flag_truncated_frac__h1198 ?
	       { fma_adder_fifo_stage0_reg$D_OUT[518],
		 flag_truncated_frac__h1198 } :
	       2'b0 ;
  assign truncated_frac__h50754 =
	     flag_truncated_frac__h50752 ?
	       { fda_adder_fifo_stage0_reg$D_OUT[518],
		 flag_truncated_frac__h50752 } :
	       2'b0 ;
  assign truncated_frac_msb___1__h50270 =
	     NOT_IF_fda_divider_fifo_stage0_reg_first__82_B_ETC___d191 &&
	     f__h50058[x__h50422[5:0]] ;
  assign truncated_frac_msb__h101181 =
	     ptof_ptoF_fifo_stage0_reg$D_OUT[7] ?
	       frac__h101179[x__h101324[4:0]] :
	       ptof_ptoF_fifo_stage0_reg$D_OUT[7:2] != 6'd0 ||
	       ptof_ptoF_fifo_stage0_reg$D_OUT[1] ;
  assign truncated_frac_msb__h225161 =
	     (shift_new0__h225156 == 3'd0) ?
	       ftop_ffO$D_OUT[1] :
	       ftop_ffO_first__466_BITS_28_TO_2_521_BIT_IF_30_ETC___d2539 ;
  assign truncated_frac_msb__h230501 =
	     (shift_new0__h230496 == 3'd0) ?
	       qtop_ffO$D_OUT[1] :
	       qtop_ffO_first__642_BITS_28_TO_2_697_BIT_IF_30_ETC___d2715 ;
  assign truncated_frac_zero___1__h50272 =
	     (IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d189 ^
	      9'h100) <=
	     9'd257 ||
	     (f_new__h50063 & mask1__h50271) == 480'd0 ;
  assign truncated_frac_zero__h100419 =
	     ftop_fToP_fifo_stage0_reg$D_OUT[7] ?
	       { 4'd0,
		 (frac__h100418 &
		  ~(28'hFFFFFFE <<
		    IF_ftop_fToP_fifo_stage0_reg_first__82_BIT_7_8_ETC___d389[4:0])) >>
		 0 } ==
	       32'd0 :
	       ftop_fToP_fifo_stage0_reg$D_OUT[7:2] == 6'd0 ;
  assign truncated_frac_zero__h101180 =
	     ptof_ptoF_fifo_stage0_reg$D_OUT[7] ?
	       x__h101372 & y__h101373 :
	       ptof_ptoF_fifo_stage0_reg$D_OUT[7:2] == 6'd0 &&
	       ptof_ptoF_fifo_stage0_reg$D_OUT[0] ;
  assign truncated_frac_zero__h50067 =
	     x__h50503 & fda_divider_intDivide_fifo_output_reg$D_OUT[0] ;
  assign twos_complement_carry_int_frac__h138271 =
	     rg_quire[511] ? 511'd0 - rg_quire[510:0] : rg_quire[510:0] ;
  assign twos_complement_carry_int_frac__h437 =
	     { fma_multiplier_fifo_stage0_reg$D_OUT[65],
	       fma_multiplier_fifo_stage0_reg$D_OUT[65] ?
		 511'd0 - x__h797 :
		 x__h797 } ;
  assign twos_complement_carry_int_frac__h50019 =
	     { fda_divider_fifo_stage0_reg$D_OUT[9],
	       fda_divider_fifo_stage0_reg$D_OUT[9] ?
		 511'd0 - x__h50360 :
		 x__h50360 } ;
  assign twos_complement_carry_int_frac__h98816 =
	     { ptoq_positToquire_fifo_stage1_reg$D_OUT[482],
	       ptoq_positToquire_fifo_stage1_reg$D_OUT[482] ?
		 511'd0 -
		 { 31'd0, ptoq_positToquire_fifo_stage1_reg$D_OUT[481:2] } :
		 { 31'd0, ptoq_positToquire_fifo_stage1_reg$D_OUT[481:2] } } ;
  assign x28431_BITS_26_TO_0__q16 = x__h228431[26:0] ;
  assign x33766_BITS_26_TO_0__q20 = x__h233766[26:0] ;
  assign x__h100485 = frac__h100418 >> x__h100545 ;
  assign x__h100545 =
	     IF_ftop_fToP_fifo_stage0_reg_first__82_BIT_7_8_ETC___d389 +
	     6'd1 ;
  assign x__h100558 =
	     ftop_fToP_fifo_stage0_reg$D_OUT[7] ?
	       frac__h100418[x__h100545[4:0]] :
	       ftop_fToP_fifo_stage0_reg$D_OUT[7:2] != 6'd0 ||
	       ftop_fToP_fifo_stage0_reg$D_OUT[1] ;
  assign x__h100635 = x__h100647 & truncated_frac_zero__h100419 ;
  assign x__h100647 = x__h100648 & ftop_fToP_fifo_stage0_reg$D_OUT[0] ;
  assign x__h100648 = ~ftop_fToP_fifo_stage0_reg$D_OUT[1] ;
  assign x__h101234 =
	     { ptof_ptoF_fifo_stage0_regD_OUT_BITS_38_TO_31__q3[7],
	       ptof_ptoF_fifo_stage0_regD_OUT_BITS_38_TO_31__q3 } +
	     9'd127 ;
  assign x__h101264 = frac__h101179 >> x__h101324 ;
  assign x__h101324 =
	     IF_ptof_ptoF_fifo_stage0_reg_first__21_BIT_7_3_ETC___d435 +
	     6'd1 ;
  assign x__h101351 = x__h101352 | frac_f__h101185[0] ;
  assign x__h101352 = ~truncated_frac_zero__h101180 ;
  assign x__h101372 = ~ptof_ptoF_fifo_stage0_reg$D_OUT[1] ;
  assign x__h104903 =
	     INV_new_inp04024__q2[30] ?
	       5'd0 :
	       (INV_new_inp04024__q2[29] ?
		  5'd1 :
		  (INV_new_inp04024__q2[28] ?
		     5'd2 :
		     (INV_new_inp04024__q2[27] ?
			5'd3 :
			(INV_new_inp04024__q2[26] ?
			   5'd4 :
			   (INV_new_inp04024__q2[25] ?
			      5'd5 :
			      (INV_new_inp04024__q2[24] ?
				 5'd6 :
				 (INV_new_inp04024__q2[23] ?
				    5'd7 :
				    (INV_new_inp04024__q2[22] ?
				       5'd8 :
				       (INV_new_inp04024__q2[21] ?
					  5'd9 :
					  (INV_new_inp04024__q2[20] ?
					     5'd10 :
					     (INV_new_inp04024__q2[19] ?
						5'd11 :
						(INV_new_inp04024__q2[18] ?
						   5'd12 :
						   (INV_new_inp04024__q2[17] ?
						      5'd13 :
						      (INV_new_inp04024__q2[16] ?
							 5'd14 :
							 (INV_new_inp04024__q2[15] ?
							    5'd15 :
							    (INV_new_inp04024__q2[14] ?
							       5'd16 :
							       (INV_new_inp04024__q2[13] ?
								  5'd17 :
								  (INV_new_inp04024__q2[12] ?
								     5'd18 :
								     (INV_new_inp04024__q2[11] ?
									5'd19 :
									(INV_new_inp04024__q2[10] ?
									   5'd20 :
									   (INV_new_inp04024__q2[9] ?
									      5'd21 :
									      (INV_new_inp04024__q2[8] ?
										 5'd22 :
										 (INV_new_inp04024__q2[7] ?
										    5'd23 :
										    (INV_new_inp04024__q2[6] ?
										       5'd24 :
										       (INV_new_inp04024__q2[5] ?
											  5'd25 :
											  (INV_new_inp04024__q2[4] ?
											     5'd26 :
											     (INV_new_inp04024__q2[3] ?
												5'd27 :
												(INV_new_inp04024__q2[2] ?
												   5'd28 :
												   (INV_new_inp04024__q2[1] ?
												      5'd29 :
												      (INV_new_inp04024__q2[0] ?
													 5'd30 :
													 5'd31)))))))))))))))))))))))))))))) ;
  assign x__h109274 = { 1'd0, x__h109281 } ;
  assign x__h109281 =
	     new_inp__h104024[30] ?
	       5'd0 :
	       (new_inp__h104024[29] ?
		  5'd1 :
		  (new_inp__h104024[28] ?
		     5'd2 :
		     (new_inp__h104024[27] ?
			5'd3 :
			(new_inp__h104024[26] ?
			   5'd4 :
			   (new_inp__h104024[25] ?
			      5'd5 :
			      (new_inp__h104024[24] ?
				 5'd6 :
				 (new_inp__h104024[23] ?
				    5'd7 :
				    (new_inp__h104024[22] ?
				       5'd8 :
				       (new_inp__h104024[21] ?
					  5'd9 :
					  (new_inp__h104024[20] ?
					     5'd10 :
					     (new_inp__h104024[19] ?
						5'd11 :
						(new_inp__h104024[18] ?
						   5'd12 :
						   (new_inp__h104024[17] ?
						      5'd13 :
						      (new_inp__h104024[16] ?
							 5'd14 :
							 (new_inp__h104024[15] ?
							    5'd15 :
							    (new_inp__h104024[14] ?
							       5'd16 :
							       (new_inp__h104024[13] ?
								  5'd17 :
								  (new_inp__h104024[12] ?
								     5'd18 :
								     (new_inp__h104024[11] ?
									5'd19 :
									(new_inp__h104024[10] ?
									   5'd20 :
									   (new_inp__h104024[9] ?
									      5'd21 :
									      (new_inp__h104024[8] ?
										 5'd22 :
										 (new_inp__h104024[7] ?
										    5'd23 :
										    (new_inp__h104024[6] ?
										       5'd24 :
										       (new_inp__h104024[5] ?
											  5'd25 :
											  (new_inp__h104024[4] ?
											     5'd26 :
											     (new_inp__h104024[3] ?
												5'd27 :
												(new_inp__h104024[2] ?
												   5'd28 :
												   (new_inp__h104024[1] ?
												      5'd29 :
												      (new_inp__h104024[0] ?
													 5'd30 :
													 5'd31)))))))))))))))))))))))))))))) ;
  assign x__h113990 =
	     IF_IF_ffI_first__75_BIT_103_09_THEN_0_MINUS_ff_ETC___d774 -
	     5'd1 ;
  assign x__h113992 =
	     IF_IF_ffI_first__75_BIT_103_09_THEN_0_MINUS_ff_ETC___d774 -
	     5'd2 ;
  assign x__h114027 =
	     5'd2 -
	     IF_IF_ffI_first__75_BIT_103_09_THEN_0_MINUS_ff_ETC___d774 ;
  assign x__h115326 =
	     INV_new_inp14376__q8[30] ?
	       5'd0 :
	       (INV_new_inp14376__q8[29] ?
		  5'd1 :
		  (INV_new_inp14376__q8[28] ?
		     5'd2 :
		     (INV_new_inp14376__q8[27] ?
			5'd3 :
			(INV_new_inp14376__q8[26] ?
			   5'd4 :
			   (INV_new_inp14376__q8[25] ?
			      5'd5 :
			      (INV_new_inp14376__q8[24] ?
				 5'd6 :
				 (INV_new_inp14376__q8[23] ?
				    5'd7 :
				    (INV_new_inp14376__q8[22] ?
				       5'd8 :
				       (INV_new_inp14376__q8[21] ?
					  5'd9 :
					  (INV_new_inp14376__q8[20] ?
					     5'd10 :
					     (INV_new_inp14376__q8[19] ?
						5'd11 :
						(INV_new_inp14376__q8[18] ?
						   5'd12 :
						   (INV_new_inp14376__q8[17] ?
						      5'd13 :
						      (INV_new_inp14376__q8[16] ?
							 5'd14 :
							 (INV_new_inp14376__q8[15] ?
							    5'd15 :
							    (INV_new_inp14376__q8[14] ?
							       5'd16 :
							       (INV_new_inp14376__q8[13] ?
								  5'd17 :
								  (INV_new_inp14376__q8[12] ?
								     5'd18 :
								     (INV_new_inp14376__q8[11] ?
									5'd19 :
									(INV_new_inp14376__q8[10] ?
									   5'd20 :
									   (INV_new_inp14376__q8[9] ?
									      5'd21 :
									      (INV_new_inp14376__q8[8] ?
										 5'd22 :
										 (INV_new_inp14376__q8[7] ?
										    5'd23 :
										    (INV_new_inp14376__q8[6] ?
										       5'd24 :
										       (INV_new_inp14376__q8[5] ?
											  5'd25 :
											  (INV_new_inp14376__q8[4] ?
											     5'd26 :
											     (INV_new_inp14376__q8[3] ?
												5'd27 :
												(INV_new_inp14376__q8[2] ?
												   5'd28 :
												   (INV_new_inp14376__q8[1] ?
												      5'd29 :
												      (INV_new_inp14376__q8[0] ?
													 5'd30 :
													 5'd31)))))))))))))))))))))))))))))) ;
  assign x__h119697 = { 1'd0, x__h119704 } ;
  assign x__h119704 =
	     new_inp__h114376[30] ?
	       5'd0 :
	       (new_inp__h114376[29] ?
		  5'd1 :
		  (new_inp__h114376[28] ?
		     5'd2 :
		     (new_inp__h114376[27] ?
			5'd3 :
			(new_inp__h114376[26] ?
			   5'd4 :
			   (new_inp__h114376[25] ?
			      5'd5 :
			      (new_inp__h114376[24] ?
				 5'd6 :
				 (new_inp__h114376[23] ?
				    5'd7 :
				    (new_inp__h114376[22] ?
				       5'd8 :
				       (new_inp__h114376[21] ?
					  5'd9 :
					  (new_inp__h114376[20] ?
					     5'd10 :
					     (new_inp__h114376[19] ?
						5'd11 :
						(new_inp__h114376[18] ?
						   5'd12 :
						   (new_inp__h114376[17] ?
						      5'd13 :
						      (new_inp__h114376[16] ?
							 5'd14 :
							 (new_inp__h114376[15] ?
							    5'd15 :
							    (new_inp__h114376[14] ?
							       5'd16 :
							       (new_inp__h114376[13] ?
								  5'd17 :
								  (new_inp__h114376[12] ?
								     5'd18 :
								     (new_inp__h114376[11] ?
									5'd19 :
									(new_inp__h114376[10] ?
									   5'd20 :
									   (new_inp__h114376[9] ?
									      5'd21 :
									      (new_inp__h114376[8] ?
										 5'd22 :
										 (new_inp__h114376[7] ?
										    5'd23 :
										    (new_inp__h114376[6] ?
										       5'd24 :
										       (new_inp__h114376[5] ?
											  5'd25 :
											  (new_inp__h114376[4] ?
											     5'd26 :
											     (new_inp__h114376[3] ?
												5'd27 :
												(new_inp__h114376[2] ?
												   5'd28 :
												   (new_inp__h114376[1] ?
												      5'd29 :
												      (new_inp__h114376[0] ?
													 5'd30 :
													 5'd31)))))))))))))))))))))))))))))) ;
  assign x__h124413 =
	     IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84__ETC___d1120 -
	     5'd1 ;
  assign x__h124415 =
	     IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84__ETC___d1120 -
	     5'd2 ;
  assign x__h124450 =
	     5'd2 -
	     IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84__ETC___d1120 ;
  assign x__h1246 = x__h1248 | fma_adder_fifo_stage0_reg$D_OUT[0] ;
  assign x__h1248 = all_bits_0__h1203 & fma_adder_fifo_stage0_reg$D_OUT[518] ;
  assign x__h1253 =
	     (!fma_adder_fifo_stage0_reg$D_OUT[518] &&
	      !SEXT_IF_fma_adder_fifo_stage0_reg_first__4_BIT_ETC___d74[511] &&
	      fma_adder_fifo_stage0_reg_first__4_BITS_518_TO_ETC___d79[511]) ?
	       512'h7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF :
	       ((fma_adder_fifo_stage0_reg$D_OUT[518] &&
		 SEXT_IF_fma_adder_fifo_stage0_reg_first__4_BIT_ETC___d74[511] &&
		 !fma_adder_fifo_stage0_reg_first__4_BITS_518_TO_ETC___d79[511]) ?
		  512'h80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 :
		  fma_adder_fifo_stage0_reg_first__4_BITS_518_TO_ETC___d79) ;
  assign x__h135719 =
	     extracter1_fifo_output_reg$D_OUT[37:36] == 2'd1 &&
	     extracter2_fifo_output_reg$D_OUT[37:36] == 2'd2 ||
	     extracter2_fifo_output_reg$D_OUT[37:36] == 2'd1 &&
	     extracter1_fifo_output_reg$D_OUT[37:36] == 2'd2 ;
  assign x__h135804 =
	     x__h135826 &
	     IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1256[0] ;
  assign x__h135826 =
	     x__h135828 &
	     IF_extracter1_fifo_output_reg_first__237_BITS__ETC___d1256[1] ;
  assign x__h135828 =
	     extracter1_fifo_output_reg$D_OUT[35] ^
	     extracter2_fifo_output_reg$D_OUT[35] ;
  assign x__h136923 =
	     extracter1_fifo_output_reg$D_OUT[37:36] == 2'd1 &&
	     extracter2_fifo_output_reg$D_OUT[37:36] == 2'd2 ||
	     extracter2_fifo_output_reg$D_OUT[37:36] == 2'd1 &&
	     extracter1_fifo_output_reg$D_OUT[37:36] == 2'd1 ;
  assign x__h137356 = extracter1_fifo_output_reg$D_OUT[2:0] == 3'd0 ;
  assign x__h137805 =
	     ffI_f_rv$port1__read[30:23] == 8'd255 &&
	     ffI_f_rv$port1__read[22:0] != 23'd0 ;
  assign x__h138166 =
	     SEXT_extracter1_fifo_output_reg_first__237_BIT_ETC___d1262 +
	     9'd213 ;
  assign x__h145559 = rg_quire[511] && rg_quire[510:0] == 511'd0 ;
  assign x__h225508 = k_expo__h225159 + y__h225510 ;
  assign x__h225889 = 5'd30 - _0_MINUS_ftop_ffOD_OUT_BITS_36_TO_31__q4[4:0] ;
  assign x__h225903 =
	     31'h7FFFFFFF >>
	     IF_ftop_ffO_first__466_BIT_35_477_AND_NOT_ftop_ETC___d2483 ;
  assign x__h226702 =
	     _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2491 ?
	       _theResult___fst__h226731 :
	       ftop_ffO$D_OUT[30:29] ;
  assign x__h226786 =
	     5'd2 -
	     _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490 ;
  assign x__h226828 =
	     3'd1 <<
	     _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490 ;
  assign x__h228431 =
	     { _30_MINUS_IF_ftop_ffO_first__466_BIT_36_471_THE_ETC___d2490 !=
	       5'd0,
	       ftop_ffO$D_OUT[28:2] } >>
	     shift_new0__h225156 ;
  assign x__h228451 = 2'd0 - ftop_ffO$D_OUT[30:29] ;
  assign x__h228607 =
	     _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 -
	     5'd1 ;
  assign x__h228768 =
	     _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 -
	     5'd2 ;
  assign x__h230844 = k_expo__h230499 + y__h230846 ;
  assign x__h231224 = 5'd30 - _0_MINUS_qtop_ffOD_OUT_BITS_36_TO_31__q5[4:0] ;
  assign x__h231238 =
	     31'h7FFFFFFF >>
	     IF_qtop_ffO_first__642_BIT_35_653_AND_NOT_qtop_ETC___d2659 ;
  assign x__h232037 =
	     _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2667 ?
	       _theResult___fst__h232066 :
	       qtop_ffO$D_OUT[30:29] ;
  assign x__h232121 =
	     5'd2 -
	     _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666 ;
  assign x__h232163 =
	     3'd1 <<
	     _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666 ;
  assign x__h233766 =
	     { _30_MINUS_IF_qtop_ffO_first__642_BIT_36_647_THE_ETC___d2666 !=
	       5'd0,
	       qtop_ffO$D_OUT[28:2] } >>
	     shift_new0__h230496 ;
  assign x__h233786 = 2'd0 - qtop_ffO$D_OUT[30:29] ;
  assign x__h233942 =
	     _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 -
	     5'd1 ;
  assign x__h234103 =
	     _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 -
	     5'd2 ;
  assign x__h26802 =
	     { fma_adder_fifo_stage0_reg$D_OUT[518], x__h1253[510:0] } ;
  assign x__h48743 =
	     fma_multiplier_fifo_output_reg$D_OUT[1] &
	     fma_multiplier_fifo_output_reg$D_OUT[0] ;
  assign x__h48748 = fma_multiplier_fifo_output_reg$D_OUT[1] & y__h48761 ;
  assign x__h49885 = fda_divider_intDivide_rg_numer[26:0] == 27'd0 ;
  assign x__h50226 = f__h50058 >> x__h50262 ;
  assign x__h50262 =
	     9'd54 -
	     IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d188 ;
  assign x__h50350 = fda_divider_fifo_stage0_reg$D_OUT[8:0] + 9'd186 ;
  assign x__h50360 =
	     { IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d204,
	       IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d213 } ;
  assign x__h50422 =
	     IF_fda_divider_fifo_stage0_reg_first__82_BIT_8_ETC___d189 -
	     9'd1 ;
  assign x__h50446 =
	     480'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF >>
	     x__h50422 ;
  assign x__h50503 = ~fda_divider_intDivide_fifo_output_reg$D_OUT[1] ;
  assign x__h50800 = x__h50802 | fda_adder_fifo_stage0_reg$D_OUT[0] ;
  assign x__h50802 =
	     all_bits_0__h50757 & fda_adder_fifo_stage0_reg$D_OUT[518] ;
  assign x__h50807 =
	     (!fda_adder_fifo_stage0_reg$D_OUT[518] &&
	      !SEXT_IF_fda_adder_fifo_stage0_reg_first__48_BI_ETC___d258[511] &&
	      fda_adder_fifo_stage0_reg_first__48_BITS_518_T_ETC___d263[511]) ?
	       512'h7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF :
	       ((fda_adder_fifo_stage0_reg$D_OUT[518] &&
		 SEXT_IF_fda_adder_fifo_stage0_reg_first__48_BI_ETC___d258[511] &&
		 !fda_adder_fifo_stage0_reg_first__48_BITS_518_T_ETC___d263[511]) ?
		  512'h80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 :
		  fda_adder_fifo_stage0_reg_first__48_BITS_518_T_ETC___d263) ;
  assign x__h58099 =
	     fda_adder_fifo_stage0_reg$D_OUT[7] &
	     fda_adder_fifo_stage0_reg$D_OUT[6] ;
  assign x__h666 = fma_multiplier_fifo_stage0_reg$D_OUT[55:0] >> x__h699 ;
  assign x__h699 =
	     9'd54 -
	     IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d10 ;
  assign x__h76334 =
	     { fda_adder_fifo_stage0_reg$D_OUT[518], x__h50807[510:0] } ;
  assign x__h787 = fma_multiplier_fifo_stage0_reg$D_OUT[64:56] + 9'd186 ;
  assign x__h797 =
	     { IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d24,
	       IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d33 } ;
  assign x__h828 =
	     fma_multiplier_fifo_stage0_reg$D_OUT[64] &&
	     !IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d12 &&
	     fma_multiplier_fifo_stage0_regD_OUT_BITS_55_TO_0__q7[x__h865[5:0]] ;
  assign x__h8567 =
	     fma_adder_fifo_stage0_reg$D_OUT[7] &
	     fma_adder_fifo_stage0_reg$D_OUT[6] ;
  assign x__h865 =
	     IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d11 - 9'd1 ;
  assign x__h872 =
	     !fma_multiplier_fifo_stage0_reg$D_OUT[64] ||
	     IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d12 ||
	     (IF_fma_multiplier_fifo_stage0_reg_first_BIT_64_ETC___d11 ^
	      9'h100) <=
	     9'd257 ||
	     (f_new__h487 & mask1__h708) == 480'd0 ;
  assign x__h889 =
	     480'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF >>
	     x__h865 ;
  assign x__h98271 =
	     fda_divider_fifo_output_reg$D_OUT[1] &
	     fda_divider_fifo_output_reg$D_OUT[0] ;
  assign x__h98276 = fda_divider_fifo_output_reg$D_OUT[1] & y__h98289 ;
  assign x__h99799 =
	     (10'd271 -
	      { {2{qtop_quireToPosit1_fifo_stage0_regD_OUT_BITS__ETC__q6[7]}},
		qtop_quireToPosit1_fifo_stage0_regD_OUT_BITS__ETC__q6 }) -
	     10'd1 ;
  assign x__h99815 =
	     ((qtop_quireToPosit1_fifo_stage0_reg$D_OUT[510:0] == 511'd0 &&
	       qtop_quireToPosit1_fifo_stage0_reg$D_OUT[521:520] == 2'd0) ?
		2'd2 :
		qtop_quireToPosit1_fifo_stage0_reg$D_OUT[521:520]) !=
	     2'd2 &&
	     (!qtop_quireToPosit1_fifo_stage0_reg_first__39_B_ETC___d342 ||
	      carry_int_frac_shifted__h99711[482]) ;
  assign x__h99858 =
	     ((qtop_quireToPosit1_fifo_stage0_reg$D_OUT[510:0] == 511'd0 &&
	       qtop_quireToPosit1_fifo_stage0_reg$D_OUT[521:520] == 2'd0) ?
		2'd2 :
		qtop_quireToPosit1_fifo_stage0_reg$D_OUT[521:520]) ==
	     2'd2 ||
	     qtop_quireToPosit1_fifo_stage0_reg_first__39_B_ETC___d342 &&
	     carry_int_frac_shifted__h99711[481:0] == 482'd0 ;
  assign x_frac__h100432 =
	     ftop_fToP_fifo_stage0_reg$D_OUT[7] ?
	       x__h100485[26:0] :
	       ((ftop_fToP_fifo_stage0_reg$D_OUT[7:2] == 6'd0) ?
		  ftop_fToP_fifo_stage0_reg$D_OUT[34:8] :
		  27'd134217727) ;
  assign y__h101373 =
	     { 8'd0,
	       (frac__h101179 &
		~(24'hFFFFFE <<
		  IF_ptof_ptoF_fifo_stage0_reg_first__21_BIT_7_3_ETC___d435[4:0])) >>
	       0 } ==
	     32'd0 ;
  assign y__h1247 =
	     fma_adder_fifo_stage0_reg$D_OUT[4:3] == 2'd1 ||
	     fma_adder_fifo_stage0_reg$D_OUT[2:1] == 2'd1 ;
  assign y__h225509 = { 30'd0, _theResult____h225166 } ;
  assign y__h225510 =
	     { 4'd0, x__h228431[26:0] } >>
	     _27_MINUS_IF_30_MINUS_IF_ftop_ffO_first__466_BI_ETC___d2530 ;
  assign y__h228648 = ~ftop_ffO$D_OUT[1] ;
  assign y__h228652 =
	     { 5'd0,
	       (ftop_ffO$D_OUT[28:2] & ~(27'h7FFFFFE << i1__h228658)) >>
	       0 } ==
	     32'd0 ;
  assign y__h230845 = { 30'd0, _theResult____h230506 } ;
  assign y__h230846 =
	     { 4'd0, x__h233766[26:0] } >>
	     _27_MINUS_IF_30_MINUS_IF_qtop_ffO_first__642_BI_ETC___d2706 ;
  assign y__h233983 = ~qtop_ffO$D_OUT[1] ;
  assign y__h233987 =
	     { 5'd0,
	       (qtop_ffO$D_OUT[28:2] & ~(27'h7FFFFFE << i1__h233993)) >>
	       0 } ==
	     32'd0 ;
  assign y__h26778 = ~fma_adder_fifo_stage0_reg$D_OUT[518] ;
  assign y__h48761 = ~fma_multiplier_fifo_output_reg$D_OUT[0] ;
  assign y__h49469 = { 1'd0, fda_divider_intDivide_rg_numer[81:1] } ;
  assign y__h49555 = { 54'd0, fda_divider_intDivide_rg_denom } ;
  assign y__h50801 =
	     fda_adder_fifo_stage0_reg$D_OUT[4:3] == 2'd1 ||
	     fda_adder_fifo_stage0_reg$D_OUT[2:1] == 2'd1 ;
  assign y__h76310 = ~fda_adder_fifo_stage0_reg$D_OUT[518] ;
  assign y__h98289 = ~fda_divider_fifo_output_reg$D_OUT[0] ;
  always@(ffO$D_OUT)
  begin
    case (ffO$D_OUT[70:69])
      2'd0, 2'd1:
	  CASE_ffOD_OUT_BITS_70_TO_69_0_ffOD_OUT_BITS__ETC__q1 =
	      ffO$D_OUT[70:69];
      default: CASE_ffOD_OUT_BITS_70_TO_69_0_ffOD_OUT_BITS__ETC__q1 = 2'd2;
    endcase
  end
  always@(ffI$D_OUT or in_posit2___1_posit_inp__h114432)
  begin
    case (ffI$D_OUT[2:0])
      3'd2, 3'd3:
	  IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852 =
	      in_posit2___1_posit_inp__h114432;
      default: IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84_OR_ffI_ETC___d852 =
		   ffI$D_OUT[37:6];
    endcase
  end
  always@(IF_IF_ffI_first__75_BIT_103_09_THEN_0_MINUS_ff_ETC___d774)
  begin
    case (IF_IF_ffI_first__75_BIT_103_09_THEN_0_MINUS_ff_ETC___d774)
      5'd3: x__h114039 = 27'd26;
      5'd4: x__h114039 = 27'd25;
      5'd5: x__h114039 = 27'd24;
      5'd6: x__h114039 = 27'd23;
      5'd7: x__h114039 = 27'd22;
      5'd8: x__h114039 = 27'd21;
      5'd9: x__h114039 = 27'd20;
      5'd10: x__h114039 = 27'd19;
      5'd11: x__h114039 = 27'd18;
      5'd12: x__h114039 = 27'd17;
      5'd13: x__h114039 = 27'd16;
      5'd14: x__h114039 = 27'd15;
      5'd15: x__h114039 = 27'd14;
      5'd16: x__h114039 = 27'd13;
      5'd17: x__h114039 = 27'd12;
      5'd18: x__h114039 = 27'd11;
      5'd19: x__h114039 = 27'd10;
      5'd20: x__h114039 = 27'd9;
      5'd21: x__h114039 = 27'd8;
      5'd22: x__h114039 = 27'd7;
      5'd23: x__h114039 = 27'd6;
      5'd24: x__h114039 = 27'd5;
      5'd25: x__h114039 = 27'd4;
      5'd26: x__h114039 = 27'd3;
      5'd27: x__h114039 = 27'd2;
      5'd28: x__h114039 = 27'd1;
      5'd29: x__h114039 = 27'd0;
      default: x__h114039 =
		   (IF_IF_ffI_first__75_BIT_103_09_THEN_0_MINUS_ff_ETC___d774 <=
		    5'd2) ?
		     27'd27 :
		     27'd0;
    endcase
  end
  always@(IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84__ETC___d1120)
  begin
    case (IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84__ETC___d1120)
      5'd3: x__h124462 = 27'd26;
      5'd4: x__h124462 = 27'd25;
      5'd5: x__h124462 = 27'd24;
      5'd6: x__h124462 = 27'd23;
      5'd7: x__h124462 = 27'd22;
      5'd8: x__h124462 = 27'd21;
      5'd9: x__h124462 = 27'd20;
      5'd10: x__h124462 = 27'd19;
      5'd11: x__h124462 = 27'd18;
      5'd12: x__h124462 = 27'd17;
      5'd13: x__h124462 = 27'd16;
      5'd14: x__h124462 = 27'd15;
      5'd15: x__h124462 = 27'd14;
      5'd16: x__h124462 = 27'd13;
      5'd17: x__h124462 = 27'd12;
      5'd18: x__h124462 = 27'd11;
      5'd19: x__h124462 = 27'd10;
      5'd20: x__h124462 = 27'd9;
      5'd21: x__h124462 = 27'd8;
      5'd22: x__h124462 = 27'd7;
      5'd23: x__h124462 = 27'd6;
      5'd24: x__h124462 = 27'd5;
      5'd25: x__h124462 = 27'd4;
      5'd26: x__h124462 = 27'd3;
      5'd27: x__h124462 = 27'd2;
      5'd28: x__h124462 = 27'd1;
      5'd29: x__h124462 = 27'd0;
      default: x__h124462 =
		   (IF_IF_IF_ffI_first__75_BITS_2_TO_0_76_EQ_2_84__ETC___d1120 <=
		    5'd2) ?
		     27'd27 :
		     27'd0;
    endcase
  end
  always@(shift_new0__h225156 or
	  ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2552 or
	  ftop_ffO$D_OUT or
	  ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2548)
  begin
    case (shift_new0__h225156)
      3'd0:
	  CASE_shift_new025156_0_ftop_ffOD_OUT_BIT_0_1__ETC__q18 =
	      ftop_ffO$D_OUT[0];
      3'd1:
	  CASE_shift_new025156_0_ftop_ffOD_OUT_BIT_0_1__ETC__q18 =
	      ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2548;
      default: CASE_shift_new025156_0_ftop_ffOD_OUT_BIT_0_1__ETC__q18 =
		   ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2552;
    endcase
  end
  always@(shift_new0__h225156 or
	  ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2552 or
	  ftop_ffO$D_OUT or
	  ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2548)
  begin
    case (shift_new0__h225156)
      3'd0:
	  CASE_shift_new025156_0_NOT_ftop_ffOD_OUT_BIT__ETC__q19 =
	      !ftop_ffO$D_OUT[0];
      3'd1:
	  CASE_shift_new025156_0_NOT_ftop_ffOD_OUT_BIT__ETC__q19 =
	      !ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2548;
      default: CASE_shift_new025156_0_NOT_ftop_ffOD_OUT_BIT__ETC__q19 =
		   !ftop_ffO_first__466_BIT_0_545_AND_INV_ftop_ffO_ETC___d2552;
    endcase
  end
  always@(ftop_ffO$D_OUT or a__h225203)
  begin
    case (ftop_ffO$D_OUT[39:38])
      2'd0:
	  output_regf_out_posit__h225187 =
	      { ftop_ffO$D_OUT[40],
		ftop_ffO$D_OUT[40] ? 31'd0 - a__h225203 : a__h225203 };
      2'd1: output_regf_out_posit__h225187 = 32'h80000000;
      default: output_regf_out_posit__h225187 = 32'd0;
    endcase
  end
  always@(shift_new0__h230496 or
	  qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2728 or
	  qtop_ffO$D_OUT or
	  qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2724)
  begin
    case (shift_new0__h230496)
      3'd0:
	  CASE_shift_new030496_0_qtop_ffOD_OUT_BIT_0_1__ETC__q22 =
	      qtop_ffO$D_OUT[0];
      3'd1:
	  CASE_shift_new030496_0_qtop_ffOD_OUT_BIT_0_1__ETC__q22 =
	      qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2724;
      default: CASE_shift_new030496_0_qtop_ffOD_OUT_BIT_0_1__ETC__q22 =
		   qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2728;
    endcase
  end
  always@(shift_new0__h230496 or
	  qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2728 or
	  qtop_ffO$D_OUT or
	  qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2724)
  begin
    case (shift_new0__h230496)
      3'd0:
	  CASE_shift_new030496_0_NOT_qtop_ffOD_OUT_BIT__ETC__q23 =
	      !qtop_ffO$D_OUT[0];
      3'd1:
	  CASE_shift_new030496_0_NOT_qtop_ffOD_OUT_BIT__ETC__q23 =
	      !qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2724;
      default: CASE_shift_new030496_0_NOT_qtop_ffOD_OUT_BIT__ETC__q23 =
		   !qtop_ffO_first__642_BIT_0_721_AND_INV_qtop_ffO_ETC___d2728;
    endcase
  end
  always@(qtop_ffO$D_OUT or a__h230539)
  begin
    case (qtop_ffO$D_OUT[39:38])
      2'd0:
	  output_regf_out_posit__h230523 =
	      { qtop_ffO$D_OUT[40],
		qtop_ffO$D_OUT[40] ? 31'd0 - a__h230539 : a__h230539 };
      2'd1: output_regf_out_posit__h230523 = 32'h80000000;
      default: output_regf_out_posit__h230523 = 32'd0;
    endcase
  end
  always@(opcode_out$D_OUT or
	  ffO$FULL_N or
	  normalizer_fifo_output_reg$EMPTY_N or
	  fma_ffO$EMPTY_N or
	  fda_ffO$EMPTY_N or ptof_ffO$EMPTY_N or ptoq_ffO$EMPTY_N)
  begin
    case (opcode_out$D_OUT)
      3'd0, 3'd2:
	  IF_opcode_out_first__846_EQ_0_847_OR_opcode_ou_ETC___d2875 =
	      fma_ffO$EMPTY_N && ffO$FULL_N;
      3'd1, 3'd3:
	  IF_opcode_out_first__846_EQ_0_847_OR_opcode_ou_ETC___d2875 =
	      ffO$FULL_N && fda_ffO$EMPTY_N;
      3'd5:
	  IF_opcode_out_first__846_EQ_0_847_OR_opcode_ou_ETC___d2875 =
	      ffO$FULL_N && ptof_ffO$EMPTY_N;
      3'd7:
	  IF_opcode_out_first__846_EQ_0_847_OR_opcode_ou_ETC___d2875 =
	      ffO$FULL_N && ptoq_ffO$EMPTY_N;
      default: IF_opcode_out_first__846_EQ_0_847_OR_opcode_ou_ETC___d2875 =
		   opcode_out$D_OUT != 3'd4 && opcode_out$D_OUT != 3'd6 ||
		   ffO$FULL_N && normalizer_fifo_output_reg$EMPTY_N;
    endcase
  end
  always@(ffI$D_OUT or
	  extracter1_fifo_output_reg$FULL_N or
	  extracter2_fifo_output_reg$FULL_N or ffI_f_rv)
  begin
    case (ffI$D_OUT[2:0])
      3'd0, 3'd1, 3'd2, 3'd3:
	  IF_ffI_first__75_BITS_2_TO_0_76_EQ_4_77_THEN_N_ETC___d498 =
	      extracter1_fifo_output_reg$FULL_N &&
	      extracter2_fifo_output_reg$FULL_N;
      3'd4:
	  IF_ffI_first__75_BITS_2_TO_0_76_EQ_4_77_THEN_N_ETC___d498 =
	      !ffI_f_rv[32];
      default: IF_ffI_first__75_BITS_2_TO_0_76_EQ_4_77_THEN_N_ETC___d498 =
		   ffI$D_OUT[2:0] != 3'd5 && ffI$D_OUT[2:0] != 3'd7 ||
		   extracter1_fifo_output_reg$FULL_N;
    endcase
  end
  always@(server_core_request_put)
  begin
    case (server_core_request_put[137:136])
      2'd0, 2'd1:
	  CASE_server_core_request_put_BITS_137_TO_136_0_ETC__q31 =
	      server_core_request_put[137:136];
      default: CASE_server_core_request_put_BITS_137_TO_136_0_ETC__q31 = 2'd2;
    endcase
  end
  always@(server_core_request_put)
  begin
    case (server_core_request_put[71:70])
      2'd0, 2'd1:
	  CASE_server_core_request_put_BITS_71_TO_70_0_s_ETC__q32 =
	      server_core_request_put[71:70];
      default: CASE_server_core_request_put_BITS_71_TO_70_0_s_ETC__q32 = 2'd2;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        fda_check_quire <= `BSV_ASSIGNMENT_DELAY 1'd0;
	fda_divider_intDivide_rg_state <= `BSV_ASSIGNMENT_DELAY 2'd0;
	ffI_f_rv <= `BSV_ASSIGNMENT_DELAY 33'h0AAAAAAAA;
	fma_check_quire <= `BSV_ASSIGNMENT_DELAY 1'd0;
	opcode_in_rv <= `BSV_ASSIGNMENT_DELAY 4'd2;
	rg_quire <= `BSV_ASSIGNMENT_DELAY 512'd0;
	rg_quire_busy <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (fda_check_quire$EN)
	  fda_check_quire <= `BSV_ASSIGNMENT_DELAY fda_check_quire$D_IN;
	if (fda_divider_intDivide_rg_state$EN)
	  fda_divider_intDivide_rg_state <= `BSV_ASSIGNMENT_DELAY
	      fda_divider_intDivide_rg_state$D_IN;
	if (ffI_f_rv$EN) ffI_f_rv <= `BSV_ASSIGNMENT_DELAY ffI_f_rv$D_IN;
	if (fma_check_quire$EN)
	  fma_check_quire <= `BSV_ASSIGNMENT_DELAY fma_check_quire$D_IN;
	if (opcode_in_rv$EN)
	  opcode_in_rv <= `BSV_ASSIGNMENT_DELAY opcode_in_rv$D_IN;
	if (rg_quire$EN) rg_quire <= `BSV_ASSIGNMENT_DELAY rg_quire$D_IN;
	if (rg_quire_busy$EN)
	  rg_quire_busy <= `BSV_ASSIGNMENT_DELAY rg_quire_busy$D_IN;
      end
    if (fda_divider_intDivide_rg_denom$EN)
      fda_divider_intDivide_rg_denom <= `BSV_ASSIGNMENT_DELAY
	  fda_divider_intDivide_rg_denom$D_IN;
    if (fda_divider_intDivide_rg_denom2$EN)
      fda_divider_intDivide_rg_denom2 <= `BSV_ASSIGNMENT_DELAY
	  fda_divider_intDivide_rg_denom2$D_IN;
    if (fda_divider_intDivide_rg_n$EN)
      fda_divider_intDivide_rg_n <= `BSV_ASSIGNMENT_DELAY
	  fda_divider_intDivide_rg_n$D_IN;
    if (fda_divider_intDivide_rg_numer$EN)
      fda_divider_intDivide_rg_numer <= `BSV_ASSIGNMENT_DELAY
	  fda_divider_intDivide_rg_numer$D_IN;
    if (fda_divider_intDivide_rg_quo$EN)
      fda_divider_intDivide_rg_quo <= `BSV_ASSIGNMENT_DELAY
	  fda_divider_intDivide_rg_quo$D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    fda_check_quire = 1'h0;
    fda_divider_intDivide_rg_denom = 28'hAAAAAAA;
    fda_divider_intDivide_rg_denom2 = 82'h2AAAAAAAAAAAAAAAAAAAA;
    fda_divider_intDivide_rg_n = 55'h2AAAAAAAAAAAAA;
    fda_divider_intDivide_rg_numer = 82'h2AAAAAAAAAAAAAAAAAAAA;
    fda_divider_intDivide_rg_quo = 55'h2AAAAAAAAAAAAA;
    fda_divider_intDivide_rg_state = 2'h2;
    ffI_f_rv = 33'h0AAAAAAAA;
    fma_check_quire = 1'h0;
    opcode_in_rv = 4'hA;
    rg_quire =
	512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rg_quire_busy = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196)
	begin
	  v__h135391 = $stime;
	  #0;
	end
    v__h135385 = v__h135391 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196)
	$write("%0d: %m: rl_extract_in: ", v__h135385);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196 &&
	  ffI$D_OUT[2:0] == 3'd0)
	$write("FMA_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196 &&
	  ffI$D_OUT[2:0] == 3'd1)
	$write("FDA_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196 &&
	  ffI$D_OUT[2:0] == 3'd2)
	$write("FMS_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196 &&
	  ffI$D_OUT[2:0] == 3'd3)
	$write("FDS_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196 &&
	  ffI$D_OUT[2:0] == 3'd4)
	$write("FCVT_P_S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196 &&
	  ffI$D_OUT[2:0] == 3'd5)
	$write("FCVT_S_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196 &&
	  ffI$D_OUT[2:0] == 3'd6)
	$write("FCVT_P_R");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196 &&
	  ffI$D_OUT[2:0] != 3'd0 &&
	  ffI$D_OUT[2:0] != 3'd1 &&
	  ffI$D_OUT[2:0] != 3'd2 &&
	  ffI$D_OUT[2:0] != 3'd3 &&
	  ffI$D_OUT[2:0] != 3'd4 &&
	  ffI$D_OUT[2:0] != 3'd5 &&
	  ffI$D_OUT[2:0] != 3'd6)
	$write("FCVT_R_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196)
	$write("'h%h", ffI$D_OUT[103:72]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196)
	$write("'h%h", ffI$D_OUT[37:6]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_extract_in && NOT_verbosity_ULE_1_195___d1196)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd4 &&
	  NOT_verbosity_ULE_1_195___d1196)
	begin
	  v__h230423 = $stime;
	  #0;
	end
    v__h230417 = v__h230423 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd4 &&
	  NOT_verbosity_ULE_1_195___d1196)
	$write("%0d: %m: rl_norm: ", v__h230417);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd4 &&
	  NOT_verbosity_ULE_1_195___d1196)
	$write("FCVT_P_S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd4 &&
	  NOT_verbosity_ULE_1_195___d1196)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd6 &&
	  NOT_verbosity_ULE_1_195___d1196)
	begin
	  v__h235781 = $stime;
	  #0;
	end
    v__h235775 = v__h235781 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd6 &&
	  NOT_verbosity_ULE_1_195___d1196)
	$write("%0d: %m: rl_norm: ", v__h235775);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd6 &&
	  NOT_verbosity_ULE_1_195___d1196)
	$write("FCVT_P_R");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd6 &&
	  NOT_verbosity_ULE_1_195___d1196)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT != 3'd4 &&
	  opcode_norm$D_OUT != 3'd6)
	begin
	  v__h225115 = $stime;
	  #0;
	end
    v__h225109 = v__h225115 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT != 3'd4 &&
	  opcode_norm$D_OUT != 3'd6)
	$write("%0d: %m: rl_norm: Error Illegal Opcode", v__h225109);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd0) $write("FMA_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd1) $write("FDA_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd2) $write("FMS_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd3) $write("FDS_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT == 3'd5)
	$write("FCVT_S_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT != 3'd4 &&
	  opcode_norm$D_OUT != 3'd6 &&
	  opcode_norm$D_OUT != 3'd0 &&
	  opcode_norm$D_OUT != 3'd1 &&
	  opcode_norm$D_OUT != 3'd2 &&
	  opcode_norm$D_OUT != 3'd3 &&
	  opcode_norm$D_OUT != 3'd5)
	$write("FCVT_R_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_norm && opcode_norm$D_OUT != 3'd4 &&
	  opcode_norm$D_OUT != 3'd6)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196)
	begin
	  v__h237173 = $stime;
	  #0;
	end
    v__h237167 = v__h237173 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196)
	$write("%0d: %m: rl_out: ", v__h237167);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196 &&
	  opcode_out$D_OUT == 3'd0)
	$write("FMA_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196 &&
	  opcode_out$D_OUT == 3'd1)
	$write("FDA_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196 &&
	  opcode_out$D_OUT == 3'd2)
	$write("FMS_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196 &&
	  opcode_out$D_OUT == 3'd3)
	$write("FDS_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196 &&
	  opcode_out$D_OUT == 3'd4)
	$write("FCVT_P_S");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196 &&
	  opcode_out$D_OUT == 3'd5)
	$write("FCVT_S_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196 &&
	  opcode_out$D_OUT == 3'd6)
	$write("FCVT_P_R");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196 &&
	  opcode_out$D_OUT != 3'd0 &&
	  opcode_out$D_OUT != 3'd1 &&
	  opcode_out$D_OUT != 3'd2 &&
	  opcode_out$D_OUT != 3'd3 &&
	  opcode_out$D_OUT != 3'd4 &&
	  opcode_out$D_OUT != 3'd5 &&
	  opcode_out$D_OUT != 3'd6)
	$write("FCVT_R_P");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_out && NOT_verbosity_ULE_1_195___d1196)
	$display("  QUIRE: %h", rg_quire);
  end
  // synopsys translate_on
endmodule  // mkPositCore

